//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Eqstra.VehicleInspection.UILogic.VIService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    public partial class CallContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyField;
        
        private string LanguageField;
        
        private string LogonAsUserField;
        
        private string MessageIdField;
        
        private System.Collections.Generic.Dictionary<string, string> PropertyBagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogonAsUser {
            get {
                return this.LogonAsUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonAsUserField, value) != true)) {
                    this.LogonAsUserField = value;
                    this.RaisePropertyChanged("LogonAsUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerGlassContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMobiPassengerGlassContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmExitRearViewMirrorCommentsField;
        
        private string parmHeadLightsCommentsField;
        
        private string parmIndicatorLensesCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedExitRearViewMirrorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHeadLightsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedIndicatorLensesField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRearGlassField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSideGlassField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedTailLightsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedWindScreenField;
        
        private string parmRearGlassCommentsField;
        
        private long parmRecIDField;
        
        private string parmSideGlassCommentsField;
        
        private int parmTableIdField;
        
        private string parmTailLightsCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleTypeField;
        
        private string parmWimdScreenCommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmExitRearViewMirrorComments {
            get {
                return this.parmExitRearViewMirrorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmExitRearViewMirrorCommentsField, value) != true)) {
                    this.parmExitRearViewMirrorCommentsField = value;
                    this.RaisePropertyChanged("parmExitRearViewMirrorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmHeadLightsComments {
            get {
                return this.parmHeadLightsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHeadLightsCommentsField, value) != true)) {
                    this.parmHeadLightsCommentsField = value;
                    this.RaisePropertyChanged("parmHeadLightsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmIndicatorLensesComments {
            get {
                return this.parmIndicatorLensesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmIndicatorLensesCommentsField, value) != true)) {
                    this.parmIndicatorLensesCommentsField = value;
                    this.RaisePropertyChanged("parmIndicatorLensesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedExitRearViewMirror {
            get {
                return this.parmIsDamagedExitRearViewMirrorField;
            }
            set {
                if ((this.parmIsDamagedExitRearViewMirrorField.Equals(value) != true)) {
                    this.parmIsDamagedExitRearViewMirrorField = value;
                    this.RaisePropertyChanged("parmIsDamagedExitRearViewMirror");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHeadLights {
            get {
                return this.parmIsDamagedHeadLightsField;
            }
            set {
                if ((this.parmIsDamagedHeadLightsField.Equals(value) != true)) {
                    this.parmIsDamagedHeadLightsField = value;
                    this.RaisePropertyChanged("parmIsDamagedHeadLights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedIndicatorLenses {
            get {
                return this.parmIsDamagedIndicatorLensesField;
            }
            set {
                if ((this.parmIsDamagedIndicatorLensesField.Equals(value) != true)) {
                    this.parmIsDamagedIndicatorLensesField = value;
                    this.RaisePropertyChanged("parmIsDamagedIndicatorLenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRearGlass {
            get {
                return this.parmIsDamagedRearGlassField;
            }
            set {
                if ((this.parmIsDamagedRearGlassField.Equals(value) != true)) {
                    this.parmIsDamagedRearGlassField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearGlass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSideGlass {
            get {
                return this.parmIsDamagedSideGlassField;
            }
            set {
                if ((this.parmIsDamagedSideGlassField.Equals(value) != true)) {
                    this.parmIsDamagedSideGlassField = value;
                    this.RaisePropertyChanged("parmIsDamagedSideGlass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedTailLights {
            get {
                return this.parmIsDamagedTailLightsField;
            }
            set {
                if ((this.parmIsDamagedTailLightsField.Equals(value) != true)) {
                    this.parmIsDamagedTailLightsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTailLights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedWindScreen {
            get {
                return this.parmIsDamagedWindScreenField;
            }
            set {
                if ((this.parmIsDamagedWindScreenField.Equals(value) != true)) {
                    this.parmIsDamagedWindScreenField = value;
                    this.RaisePropertyChanged("parmIsDamagedWindScreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRearGlassComments {
            get {
                return this.parmRearGlassCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearGlassCommentsField, value) != true)) {
                    this.parmRearGlassCommentsField = value;
                    this.RaisePropertyChanged("parmRearGlassComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSideGlassComments {
            get {
                return this.parmSideGlassCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSideGlassCommentsField, value) != true)) {
                    this.parmSideGlassCommentsField = value;
                    this.RaisePropertyChanged("parmSideGlassComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmTailLightsComments {
            get {
                return this.parmTailLightsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTailLightsCommentsField, value) != true)) {
                    this.parmTailLightsCommentsField = value;
                    this.RaisePropertyChanged("parmTailLightsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmWimdScreenComments {
            get {
                return this.parmWimdScreenCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWimdScreenCommentsField, value) != true)) {
                    this.parmWimdScreenCommentsField = value;
                    this.RaisePropertyChanged("parmWimdScreenComments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerAccessoriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerBodyworkContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerTrimInteriorContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MZKMobiPassengerTyreConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerGlassContract))]
    public partial class XppObjectBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMechanicalConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMechanicalConditionContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialMechanicalCondition parmCommercialMechConditionField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKEngineTypeEnum parmEngineTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsRunningField;
        
        private long parmRecIDField;
        
        private string parmRemarksField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialMechanicalCondition parmCommercialMechCondition {
            get {
                return this.parmCommercialMechConditionField;
            }
            set {
                if ((this.parmCommercialMechConditionField.Equals(value) != true)) {
                    this.parmCommercialMechConditionField = value;
                    this.RaisePropertyChanged("parmCommercialMechCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKEngineTypeEnum parmEngineType {
            get {
                return this.parmEngineTypeField;
            }
            set {
                if ((this.parmEngineTypeField.Equals(value) != true)) {
                    this.parmEngineTypeField = value;
                    this.RaisePropertyChanged("parmEngineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsRunning {
            get {
                return this.parmIsRunningField;
            }
            set {
                if ((this.parmIsRunningField.Equals(value) != true)) {
                    this.parmIsRunningField = value;
                    this.RaisePropertyChanged("parmIsRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRemarks {
            get {
                return this.parmRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRemarksField, value) != true)) {
                    this.parmRemarksField = value;
                    this.RaisePropertyChanged("parmRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerAccessoriesContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMobiPassengerAccessoriesContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmAirconCommentsField;
        
        private string parmAlarmCommentsField;
        
        private string parmCDShuttleCommentsField;
        
        private string parmCanopyCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasAirconField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasAlarmField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasCDShuttleField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasCanopyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasJackField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasKeyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasMapsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasNavigationField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasOthersField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasRadioField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasServicesBookField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasSpareTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasSparekeyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasToolsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasTrackingUnitField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedAirconField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedAlarmField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCDShuttleField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCanopyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedJackField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedKeyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedMapsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedNavigationField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRadioField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedServicesBookField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSpareTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSparekeyField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedToolsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedTrackingUnitField;
        
        private string parmJackCommentsField;
        
        private string parmKeyCommentsField;
        
        private string parmMapsCommentsField;
        
        private string parmNavigationCommentsField;
        
        private string parmOtherCommentsField;
        
        private string parmRadioCommentsField;
        
        private long parmRecIDField;
        
        private string parmServiceBooksCommentsField;
        
        private string parmSpareKeysCommentsField;
        
        private string parmSpareTypeCommentsField;
        
        private int parmTableIdField;
        
        private string parmToolCommentsField;
        
        private string parmTrackLineCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmAirconComments {
            get {
                return this.parmAirconCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAirconCommentsField, value) != true)) {
                    this.parmAirconCommentsField = value;
                    this.RaisePropertyChanged("parmAirconComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmAlarmComments {
            get {
                return this.parmAlarmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAlarmCommentsField, value) != true)) {
                    this.parmAlarmCommentsField = value;
                    this.RaisePropertyChanged("parmAlarmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCDShuttleComments {
            get {
                return this.parmCDShuttleCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCDShuttleCommentsField, value) != true)) {
                    this.parmCDShuttleCommentsField = value;
                    this.RaisePropertyChanged("parmCDShuttleComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCanopyComments {
            get {
                return this.parmCanopyCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCanopyCommentsField, value) != true)) {
                    this.parmCanopyCommentsField = value;
                    this.RaisePropertyChanged("parmCanopyComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasAircon {
            get {
                return this.parmHasAirconField;
            }
            set {
                if ((this.parmHasAirconField.Equals(value) != true)) {
                    this.parmHasAirconField = value;
                    this.RaisePropertyChanged("parmHasAircon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasAlarm {
            get {
                return this.parmHasAlarmField;
            }
            set {
                if ((this.parmHasAlarmField.Equals(value) != true)) {
                    this.parmHasAlarmField = value;
                    this.RaisePropertyChanged("parmHasAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasCDShuttle {
            get {
                return this.parmHasCDShuttleField;
            }
            set {
                if ((this.parmHasCDShuttleField.Equals(value) != true)) {
                    this.parmHasCDShuttleField = value;
                    this.RaisePropertyChanged("parmHasCDShuttle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasCanopy {
            get {
                return this.parmHasCanopyField;
            }
            set {
                if ((this.parmHasCanopyField.Equals(value) != true)) {
                    this.parmHasCanopyField = value;
                    this.RaisePropertyChanged("parmHasCanopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasJack {
            get {
                return this.parmHasJackField;
            }
            set {
                if ((this.parmHasJackField.Equals(value) != true)) {
                    this.parmHasJackField = value;
                    this.RaisePropertyChanged("parmHasJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasKey {
            get {
                return this.parmHasKeyField;
            }
            set {
                if ((this.parmHasKeyField.Equals(value) != true)) {
                    this.parmHasKeyField = value;
                    this.RaisePropertyChanged("parmHasKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasMaps {
            get {
                return this.parmHasMapsField;
            }
            set {
                if ((this.parmHasMapsField.Equals(value) != true)) {
                    this.parmHasMapsField = value;
                    this.RaisePropertyChanged("parmHasMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasNavigation {
            get {
                return this.parmHasNavigationField;
            }
            set {
                if ((this.parmHasNavigationField.Equals(value) != true)) {
                    this.parmHasNavigationField = value;
                    this.RaisePropertyChanged("parmHasNavigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasOthers {
            get {
                return this.parmHasOthersField;
            }
            set {
                if ((this.parmHasOthersField.Equals(value) != true)) {
                    this.parmHasOthersField = value;
                    this.RaisePropertyChanged("parmHasOthers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasRadio {
            get {
                return this.parmHasRadioField;
            }
            set {
                if ((this.parmHasRadioField.Equals(value) != true)) {
                    this.parmHasRadioField = value;
                    this.RaisePropertyChanged("parmHasRadio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasServicesBook {
            get {
                return this.parmHasServicesBookField;
            }
            set {
                if ((this.parmHasServicesBookField.Equals(value) != true)) {
                    this.parmHasServicesBookField = value;
                    this.RaisePropertyChanged("parmHasServicesBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasSpareType {
            get {
                return this.parmHasSpareTypeField;
            }
            set {
                if ((this.parmHasSpareTypeField.Equals(value) != true)) {
                    this.parmHasSpareTypeField = value;
                    this.RaisePropertyChanged("parmHasSpareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasSparekey {
            get {
                return this.parmHasSparekeyField;
            }
            set {
                if ((this.parmHasSparekeyField.Equals(value) != true)) {
                    this.parmHasSparekeyField = value;
                    this.RaisePropertyChanged("parmHasSparekey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasTools {
            get {
                return this.parmHasToolsField;
            }
            set {
                if ((this.parmHasToolsField.Equals(value) != true)) {
                    this.parmHasToolsField = value;
                    this.RaisePropertyChanged("parmHasTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmHasTrackingUnit {
            get {
                return this.parmHasTrackingUnitField;
            }
            set {
                if ((this.parmHasTrackingUnitField.Equals(value) != true)) {
                    this.parmHasTrackingUnitField = value;
                    this.RaisePropertyChanged("parmHasTrackingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedAircon {
            get {
                return this.parmIsDamagedAirconField;
            }
            set {
                if ((this.parmIsDamagedAirconField.Equals(value) != true)) {
                    this.parmIsDamagedAirconField = value;
                    this.RaisePropertyChanged("parmIsDamagedAircon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedAlarm {
            get {
                return this.parmIsDamagedAlarmField;
            }
            set {
                if ((this.parmIsDamagedAlarmField.Equals(value) != true)) {
                    this.parmIsDamagedAlarmField = value;
                    this.RaisePropertyChanged("parmIsDamagedAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCDShuttle {
            get {
                return this.parmIsDamagedCDShuttleField;
            }
            set {
                if ((this.parmIsDamagedCDShuttleField.Equals(value) != true)) {
                    this.parmIsDamagedCDShuttleField = value;
                    this.RaisePropertyChanged("parmIsDamagedCDShuttle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCanopy {
            get {
                return this.parmIsDamagedCanopyField;
            }
            set {
                if ((this.parmIsDamagedCanopyField.Equals(value) != true)) {
                    this.parmIsDamagedCanopyField = value;
                    this.RaisePropertyChanged("parmIsDamagedCanopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedJack {
            get {
                return this.parmIsDamagedJackField;
            }
            set {
                if ((this.parmIsDamagedJackField.Equals(value) != true)) {
                    this.parmIsDamagedJackField = value;
                    this.RaisePropertyChanged("parmIsDamagedJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedKey {
            get {
                return this.parmIsDamagedKeyField;
            }
            set {
                if ((this.parmIsDamagedKeyField.Equals(value) != true)) {
                    this.parmIsDamagedKeyField = value;
                    this.RaisePropertyChanged("parmIsDamagedKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedMaps {
            get {
                return this.parmIsDamagedMapsField;
            }
            set {
                if ((this.parmIsDamagedMapsField.Equals(value) != true)) {
                    this.parmIsDamagedMapsField = value;
                    this.RaisePropertyChanged("parmIsDamagedMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedNavigation {
            get {
                return this.parmIsDamagedNavigationField;
            }
            set {
                if ((this.parmIsDamagedNavigationField.Equals(value) != true)) {
                    this.parmIsDamagedNavigationField = value;
                    this.RaisePropertyChanged("parmIsDamagedNavigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRadio {
            get {
                return this.parmIsDamagedRadioField;
            }
            set {
                if ((this.parmIsDamagedRadioField.Equals(value) != true)) {
                    this.parmIsDamagedRadioField = value;
                    this.RaisePropertyChanged("parmIsDamagedRadio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedServicesBook {
            get {
                return this.parmIsDamagedServicesBookField;
            }
            set {
                if ((this.parmIsDamagedServicesBookField.Equals(value) != true)) {
                    this.parmIsDamagedServicesBookField = value;
                    this.RaisePropertyChanged("parmIsDamagedServicesBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSpareType {
            get {
                return this.parmIsDamagedSpareTypeField;
            }
            set {
                if ((this.parmIsDamagedSpareTypeField.Equals(value) != true)) {
                    this.parmIsDamagedSpareTypeField = value;
                    this.RaisePropertyChanged("parmIsDamagedSpareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedSparekey {
            get {
                return this.parmIsDamagedSparekeyField;
            }
            set {
                if ((this.parmIsDamagedSparekeyField.Equals(value) != true)) {
                    this.parmIsDamagedSparekeyField = value;
                    this.RaisePropertyChanged("parmIsDamagedSparekey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedTools {
            get {
                return this.parmIsDamagedToolsField;
            }
            set {
                if ((this.parmIsDamagedToolsField.Equals(value) != true)) {
                    this.parmIsDamagedToolsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedTrackingUnit {
            get {
                return this.parmIsDamagedTrackingUnitField;
            }
            set {
                if ((this.parmIsDamagedTrackingUnitField.Equals(value) != true)) {
                    this.parmIsDamagedTrackingUnitField = value;
                    this.RaisePropertyChanged("parmIsDamagedTrackingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmJackComments {
            get {
                return this.parmJackCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJackCommentsField, value) != true)) {
                    this.parmJackCommentsField = value;
                    this.RaisePropertyChanged("parmJackComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmKeyComments {
            get {
                return this.parmKeyCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmKeyCommentsField, value) != true)) {
                    this.parmKeyCommentsField = value;
                    this.RaisePropertyChanged("parmKeyComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmMapsComments {
            get {
                return this.parmMapsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMapsCommentsField, value) != true)) {
                    this.parmMapsCommentsField = value;
                    this.RaisePropertyChanged("parmMapsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmNavigationComments {
            get {
                return this.parmNavigationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmNavigationCommentsField, value) != true)) {
                    this.parmNavigationCommentsField = value;
                    this.RaisePropertyChanged("parmNavigationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmOtherComments {
            get {
                return this.parmOtherCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmOtherCommentsField, value) != true)) {
                    this.parmOtherCommentsField = value;
                    this.RaisePropertyChanged("parmOtherComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRadioComments {
            get {
                return this.parmRadioCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRadioCommentsField, value) != true)) {
                    this.parmRadioCommentsField = value;
                    this.RaisePropertyChanged("parmRadioComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmServiceBooksComments {
            get {
                return this.parmServiceBooksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmServiceBooksCommentsField, value) != true)) {
                    this.parmServiceBooksCommentsField = value;
                    this.RaisePropertyChanged("parmServiceBooksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSpareKeysComments {
            get {
                return this.parmSpareKeysCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareKeysCommentsField, value) != true)) {
                    this.parmSpareKeysCommentsField = value;
                    this.RaisePropertyChanged("parmSpareKeysComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSpareTypeComments {
            get {
                return this.parmSpareTypeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareTypeCommentsField, value) != true)) {
                    this.parmSpareTypeCommentsField = value;
                    this.RaisePropertyChanged("parmSpareTypeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmToolComments {
            get {
                return this.parmToolCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmToolCommentsField, value) != true)) {
                    this.parmToolCommentsField = value;
                    this.RaisePropertyChanged("parmToolComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmTrackLineComments {
            get {
                return this.parmTrackLineCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTrackLineCommentsField, value) != true)) {
                    this.parmTrackLineCommentsField = value;
                    this.RaisePropertyChanged("parmTrackLineComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerBodyworkContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMobiPassengerBodyworkContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmBonetCommentsField;
        
        private string parmBootCommentsField;
        
        private string parmDoorHandlesCommentsField;
        
        private string parmHailDamageCommentsField;
        
        private string parmHubcapsCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedBonnetField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedBootField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDoorHandlesField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHailDamageField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHubcapsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFBumperField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFDoorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFWheelArchField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRBumperField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRDoorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRWheelArchField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLeftSideField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFBumperField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFDoorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFWheelArchField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRBumperField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRDoorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRWheelArchField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRightSideField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRoofField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedWipersField;
        
        private string parmLFDoorCommentsField;
        
        private string parmLFWheelArchCommentsField;
        
        private string parmLRBumperCommentsField;
        
        private string parmLRDoorCommentsField;
        
        private string parmLRWheelArchCommentsField;
        
        private string parmRFBumperCommentsField;
        
        private string parmRFDoorCommentsField;
        
        private string parmRFWheelArchCommentsField;
        
        private string parmRRBumperCommentsField;
        
        private string parmRRDoorCommentsField;
        
        private string parmRRWheelArchCommentsField;
        
        private long parmRecIDField;
        
        private string parmRightSideCommentsField;
        
        private string parmRoofCommentsField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private string parmWipersCommentsField;
        
        private string parmlFBumperCommentsField;
        
        private string parmleftSideCommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmBonetComments {
            get {
                return this.parmBonetCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBonetCommentsField, value) != true)) {
                    this.parmBonetCommentsField = value;
                    this.RaisePropertyChanged("parmBonetComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmBootComments {
            get {
                return this.parmBootCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBootCommentsField, value) != true)) {
                    this.parmBootCommentsField = value;
                    this.RaisePropertyChanged("parmBootComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmDoorHandlesComments {
            get {
                return this.parmDoorHandlesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDoorHandlesCommentsField, value) != true)) {
                    this.parmDoorHandlesCommentsField = value;
                    this.RaisePropertyChanged("parmDoorHandlesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmHailDamageComments {
            get {
                return this.parmHailDamageCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHailDamageCommentsField, value) != true)) {
                    this.parmHailDamageCommentsField = value;
                    this.RaisePropertyChanged("parmHailDamageComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmHubcapsComments {
            get {
                return this.parmHubcapsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHubcapsCommentsField, value) != true)) {
                    this.parmHubcapsCommentsField = value;
                    this.RaisePropertyChanged("parmHubcapsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedBonnet {
            get {
                return this.parmIsDamagedBonnetField;
            }
            set {
                if ((this.parmIsDamagedBonnetField.Equals(value) != true)) {
                    this.parmIsDamagedBonnetField = value;
                    this.RaisePropertyChanged("parmIsDamagedBonnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedBoot {
            get {
                return this.parmIsDamagedBootField;
            }
            set {
                if ((this.parmIsDamagedBootField.Equals(value) != true)) {
                    this.parmIsDamagedBootField = value;
                    this.RaisePropertyChanged("parmIsDamagedBoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDoorHandles {
            get {
                return this.parmIsDamagedDoorHandlesField;
            }
            set {
                if ((this.parmIsDamagedDoorHandlesField.Equals(value) != true)) {
                    this.parmIsDamagedDoorHandlesField = value;
                    this.RaisePropertyChanged("parmIsDamagedDoorHandles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHailDamage {
            get {
                return this.parmIsDamagedHailDamageField;
            }
            set {
                if ((this.parmIsDamagedHailDamageField.Equals(value) != true)) {
                    this.parmIsDamagedHailDamageField = value;
                    this.RaisePropertyChanged("parmIsDamagedHailDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedHubcaps {
            get {
                return this.parmIsDamagedHubcapsField;
            }
            set {
                if ((this.parmIsDamagedHubcapsField.Equals(value) != true)) {
                    this.parmIsDamagedHubcapsField = value;
                    this.RaisePropertyChanged("parmIsDamagedHubcaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFBumper {
            get {
                return this.parmIsDamagedLFBumperField;
            }
            set {
                if ((this.parmIsDamagedLFBumperField.Equals(value) != true)) {
                    this.parmIsDamagedLFBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFDoor {
            get {
                return this.parmIsDamagedLFDoorField;
            }
            set {
                if ((this.parmIsDamagedLFDoorField.Equals(value) != true)) {
                    this.parmIsDamagedLFDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFWheelArch {
            get {
                return this.parmIsDamagedLFWheelArchField;
            }
            set {
                if ((this.parmIsDamagedLFWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedLFWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRBumper {
            get {
                return this.parmIsDamagedLRBumperField;
            }
            set {
                if ((this.parmIsDamagedLRBumperField.Equals(value) != true)) {
                    this.parmIsDamagedLRBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRDoor {
            get {
                return this.parmIsDamagedLRDoorField;
            }
            set {
                if ((this.parmIsDamagedLRDoorField.Equals(value) != true)) {
                    this.parmIsDamagedLRDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRWheelArch {
            get {
                return this.parmIsDamagedLRWheelArchField;
            }
            set {
                if ((this.parmIsDamagedLRWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedLRWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLeftSide {
            get {
                return this.parmIsDamagedLeftSideField;
            }
            set {
                if ((this.parmIsDamagedLeftSideField.Equals(value) != true)) {
                    this.parmIsDamagedLeftSideField = value;
                    this.RaisePropertyChanged("parmIsDamagedLeftSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFBumper {
            get {
                return this.parmIsDamagedRFBumperField;
            }
            set {
                if ((this.parmIsDamagedRFBumperField.Equals(value) != true)) {
                    this.parmIsDamagedRFBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFDoor {
            get {
                return this.parmIsDamagedRFDoorField;
            }
            set {
                if ((this.parmIsDamagedRFDoorField.Equals(value) != true)) {
                    this.parmIsDamagedRFDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFWheelArch {
            get {
                return this.parmIsDamagedRFWheelArchField;
            }
            set {
                if ((this.parmIsDamagedRFWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedRFWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRBumper {
            get {
                return this.parmIsDamagedRRBumperField;
            }
            set {
                if ((this.parmIsDamagedRRBumperField.Equals(value) != true)) {
                    this.parmIsDamagedRRBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRDoor {
            get {
                return this.parmIsDamagedRRDoorField;
            }
            set {
                if ((this.parmIsDamagedRRDoorField.Equals(value) != true)) {
                    this.parmIsDamagedRRDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRWheelArch {
            get {
                return this.parmIsDamagedRRWheelArchField;
            }
            set {
                if ((this.parmIsDamagedRRWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedRRWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRightSide {
            get {
                return this.parmIsDamagedRightSideField;
            }
            set {
                if ((this.parmIsDamagedRightSideField.Equals(value) != true)) {
                    this.parmIsDamagedRightSideField = value;
                    this.RaisePropertyChanged("parmIsDamagedRightSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRoof {
            get {
                return this.parmIsDamagedRoofField;
            }
            set {
                if ((this.parmIsDamagedRoofField.Equals(value) != true)) {
                    this.parmIsDamagedRoofField = value;
                    this.RaisePropertyChanged("parmIsDamagedRoof");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedWipers {
            get {
                return this.parmIsDamagedWipersField;
            }
            set {
                if ((this.parmIsDamagedWipersField.Equals(value) != true)) {
                    this.parmIsDamagedWipersField = value;
                    this.RaisePropertyChanged("parmIsDamagedWipers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFDoorComments {
            get {
                return this.parmLFDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDoorCommentsField, value) != true)) {
                    this.parmLFDoorCommentsField = value;
                    this.RaisePropertyChanged("parmLFDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFWheelArchComments {
            get {
                return this.parmLFWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFWheelArchCommentsField, value) != true)) {
                    this.parmLFWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmLFWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRBumperComments {
            get {
                return this.parmLRBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRBumperCommentsField, value) != true)) {
                    this.parmLRBumperCommentsField = value;
                    this.RaisePropertyChanged("parmLRBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRDoorComments {
            get {
                return this.parmLRDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDoorCommentsField, value) != true)) {
                    this.parmLRDoorCommentsField = value;
                    this.RaisePropertyChanged("parmLRDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRWheelArchComments {
            get {
                return this.parmLRWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRWheelArchCommentsField, value) != true)) {
                    this.parmLRWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmLRWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFBumperComments {
            get {
                return this.parmRFBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFBumperCommentsField, value) != true)) {
                    this.parmRFBumperCommentsField = value;
                    this.RaisePropertyChanged("parmRFBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFDoorComments {
            get {
                return this.parmRFDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDoorCommentsField, value) != true)) {
                    this.parmRFDoorCommentsField = value;
                    this.RaisePropertyChanged("parmRFDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFWheelArchComments {
            get {
                return this.parmRFWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFWheelArchCommentsField, value) != true)) {
                    this.parmRFWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmRFWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRBumperComments {
            get {
                return this.parmRRBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRBumperCommentsField, value) != true)) {
                    this.parmRRBumperCommentsField = value;
                    this.RaisePropertyChanged("parmRRBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRDoorComments {
            get {
                return this.parmRRDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDoorCommentsField, value) != true)) {
                    this.parmRRDoorCommentsField = value;
                    this.RaisePropertyChanged("parmRRDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRWheelArchComments {
            get {
                return this.parmRRWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRWheelArchCommentsField, value) != true)) {
                    this.parmRRWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmRRWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRightSideComments {
            get {
                return this.parmRightSideCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRightSideCommentsField, value) != true)) {
                    this.parmRightSideCommentsField = value;
                    this.RaisePropertyChanged("parmRightSideComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRoofComments {
            get {
                return this.parmRoofCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRoofCommentsField, value) != true)) {
                    this.parmRoofCommentsField = value;
                    this.RaisePropertyChanged("parmRoofComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmWipersComments {
            get {
                return this.parmWipersCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWipersCommentsField, value) != true)) {
                    this.parmWipersCommentsField = value;
                    this.RaisePropertyChanged("parmWipersComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmlFBumperComments {
            get {
                return this.parmlFBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmlFBumperCommentsField, value) != true)) {
                    this.parmlFBumperCommentsField = value;
                    this.RaisePropertyChanged("parmlFBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmleftSideComments {
            get {
                return this.parmleftSideCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmleftSideCommentsField, value) != true)) {
                    this.parmleftSideCommentsField = value;
                    this.RaisePropertyChanged("parmleftSideComments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerTrimInteriorContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMobiPassengerTrimInteriorContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCarpetsCommentsField;
        
        private string parmDashCommentsField;
        
        private string parmDriversSeatCommentsField;
        
        private string parmInternalTrimCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCarpetsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDashField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDriversSeatField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedInternalTrimField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFDoorTrimField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRDoorTrimField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedPassengerSeatField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFDoorTrimField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRDoorTrimField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRearSeatField;
        
        private string parmLFDoorTrimCommentsField;
        
        private string parmLRDoorTrimCommentsField;
        
        private string parmPassengerSeatCommentsField;
        
        private string parmRFDoorTrimCommentsField;
        
        private string parmRRDoorTrimCommentsField;
        
        private string parmRearSeatCommentsField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCarpetsComments {
            get {
                return this.parmCarpetsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCarpetsCommentsField, value) != true)) {
                    this.parmCarpetsCommentsField = value;
                    this.RaisePropertyChanged("parmCarpetsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmDashComments {
            get {
                return this.parmDashCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDashCommentsField, value) != true)) {
                    this.parmDashCommentsField = value;
                    this.RaisePropertyChanged("parmDashComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmDriversSeatComments {
            get {
                return this.parmDriversSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDriversSeatCommentsField, value) != true)) {
                    this.parmDriversSeatCommentsField = value;
                    this.RaisePropertyChanged("parmDriversSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmInternalTrimComments {
            get {
                return this.parmInternalTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmInternalTrimCommentsField, value) != true)) {
                    this.parmInternalTrimCommentsField = value;
                    this.RaisePropertyChanged("parmInternalTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedCarpets {
            get {
                return this.parmIsDamagedCarpetsField;
            }
            set {
                if ((this.parmIsDamagedCarpetsField.Equals(value) != true)) {
                    this.parmIsDamagedCarpetsField = value;
                    this.RaisePropertyChanged("parmIsDamagedCarpets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDash {
            get {
                return this.parmIsDamagedDashField;
            }
            set {
                if ((this.parmIsDamagedDashField.Equals(value) != true)) {
                    this.parmIsDamagedDashField = value;
                    this.RaisePropertyChanged("parmIsDamagedDash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedDriversSeat {
            get {
                return this.parmIsDamagedDriversSeatField;
            }
            set {
                if ((this.parmIsDamagedDriversSeatField.Equals(value) != true)) {
                    this.parmIsDamagedDriversSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedDriversSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedInternalTrim {
            get {
                return this.parmIsDamagedInternalTrimField;
            }
            set {
                if ((this.parmIsDamagedInternalTrimField.Equals(value) != true)) {
                    this.parmIsDamagedInternalTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedInternalTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLFDoorTrim {
            get {
                return this.parmIsDamagedLFDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedLFDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedLFDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedLRDoorTrim {
            get {
                return this.parmIsDamagedLRDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedLRDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedLRDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedPassengerSeat {
            get {
                return this.parmIsDamagedPassengerSeatField;
            }
            set {
                if ((this.parmIsDamagedPassengerSeatField.Equals(value) != true)) {
                    this.parmIsDamagedPassengerSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedPassengerSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRFDoorTrim {
            get {
                return this.parmIsDamagedRFDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedRFDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedRFDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRRDoorTrim {
            get {
                return this.parmIsDamagedRRDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedRRDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedRRDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedRearSeat {
            get {
                return this.parmIsDamagedRearSeatField;
            }
            set {
                if ((this.parmIsDamagedRearSeatField.Equals(value) != true)) {
                    this.parmIsDamagedRearSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFDoorTrimComments {
            get {
                return this.parmLFDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDoorTrimCommentsField, value) != true)) {
                    this.parmLFDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmLFDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRDoorTrimComments {
            get {
                return this.parmLRDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDoorTrimCommentsField, value) != true)) {
                    this.parmLRDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmLRDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmPassengerSeatComments {
            get {
                return this.parmPassengerSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPassengerSeatCommentsField, value) != true)) {
                    this.parmPassengerSeatCommentsField = value;
                    this.RaisePropertyChanged("parmPassengerSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFDoorTrimComments {
            get {
                return this.parmRFDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDoorTrimCommentsField, value) != true)) {
                    this.parmRFDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmRFDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRDoorTrimComments {
            get {
                return this.parmRRDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDoorTrimCommentsField, value) != true)) {
                    this.parmRRDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmRRDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRearSeatComments {
            get {
                return this.parmRearSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearSeatCommentsField, value) != true)) {
                    this.parmRearSeatCommentsField = value;
                    this.RaisePropertyChanged("parmRearSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKMobiPassengerTyreConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MZKMobiPassengerTyreConditionContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmLFCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmLFConditionField;
        
        private string parmLFDepthField;
        
        private string parmLFMakeField;
        
        private string parmLRCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmLRConditionField;
        
        private string parmLRDepthField;
        
        private string parmLRMakeField;
        
        private string parmRFCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmRFConditionField;
        
        private string parmRFDepthField;
        
        private string parmRFMakeField;
        
        private string parmRRCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmRRConditionField;
        
        private string parmRRDepthField;
        
        private string parmRRMakeField;
        
        private long parmRecIDField;
        
        private string parmSpareCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmSpareConditionField;
        
        private string parmSpareDepthField;
        
        private string parmSpareMakeField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFComments {
            get {
                return this.parmLFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFCommentsField, value) != true)) {
                    this.parmLFCommentsField = value;
                    this.RaisePropertyChanged("parmLFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmLFCondition {
            get {
                return this.parmLFConditionField;
            }
            set {
                if ((this.parmLFConditionField.Equals(value) != true)) {
                    this.parmLFConditionField = value;
                    this.RaisePropertyChanged("parmLFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFDepth {
            get {
                return this.parmLFDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDepthField, value) != true)) {
                    this.parmLFDepthField = value;
                    this.RaisePropertyChanged("parmLFDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLFMake {
            get {
                return this.parmLFMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFMakeField, value) != true)) {
                    this.parmLFMakeField = value;
                    this.RaisePropertyChanged("parmLFMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRComments {
            get {
                return this.parmLRCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRCommentsField, value) != true)) {
                    this.parmLRCommentsField = value;
                    this.RaisePropertyChanged("parmLRComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmLRCondition {
            get {
                return this.parmLRConditionField;
            }
            set {
                if ((this.parmLRConditionField.Equals(value) != true)) {
                    this.parmLRConditionField = value;
                    this.RaisePropertyChanged("parmLRCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRDepth {
            get {
                return this.parmLRDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDepthField, value) != true)) {
                    this.parmLRDepthField = value;
                    this.RaisePropertyChanged("parmLRDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmLRMake {
            get {
                return this.parmLRMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRMakeField, value) != true)) {
                    this.parmLRMakeField = value;
                    this.RaisePropertyChanged("parmLRMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFComments {
            get {
                return this.parmRFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFCommentsField, value) != true)) {
                    this.parmRFCommentsField = value;
                    this.RaisePropertyChanged("parmRFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmRFCondition {
            get {
                return this.parmRFConditionField;
            }
            set {
                if ((this.parmRFConditionField.Equals(value) != true)) {
                    this.parmRFConditionField = value;
                    this.RaisePropertyChanged("parmRFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFDepth {
            get {
                return this.parmRFDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDepthField, value) != true)) {
                    this.parmRFDepthField = value;
                    this.RaisePropertyChanged("parmRFDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRFMake {
            get {
                return this.parmRFMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFMakeField, value) != true)) {
                    this.parmRFMakeField = value;
                    this.RaisePropertyChanged("parmRFMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRComments {
            get {
                return this.parmRRCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRCommentsField, value) != true)) {
                    this.parmRRCommentsField = value;
                    this.RaisePropertyChanged("parmRRComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmRRCondition {
            get {
                return this.parmRRConditionField;
            }
            set {
                if ((this.parmRRConditionField.Equals(value) != true)) {
                    this.parmRRConditionField = value;
                    this.RaisePropertyChanged("parmRRCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRDepth {
            get {
                return this.parmRRDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDepthField, value) != true)) {
                    this.parmRRDepthField = value;
                    this.RaisePropertyChanged("parmRRDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRRMake {
            get {
                return this.parmRRMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRMakeField, value) != true)) {
                    this.parmRRMakeField = value;
                    this.RaisePropertyChanged("parmRRMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSpareComments {
            get {
                return this.parmSpareCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareCommentsField, value) != true)) {
                    this.parmSpareCommentsField = value;
                    this.RaisePropertyChanged("parmSpareComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmSpareCondition {
            get {
                return this.parmSpareConditionField;
            }
            set {
                if ((this.parmSpareConditionField.Equals(value) != true)) {
                    this.parmSpareConditionField = value;
                    this.RaisePropertyChanged("parmSpareCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSpareDepth {
            get {
                return this.parmSpareDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareDepthField, value) != true)) {
                    this.parmSpareDepthField = value;
                    this.RaisePropertyChanged("parmSpareDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmSpareMake {
            get {
                return this.parmSpareMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareMakeField, value) != true)) {
                    this.parmSpareMakeField = value;
                    this.RaisePropertyChanged("parmSpareMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTasksContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkTasksContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCaseCategoryField;
        
        private string parmCaseIDField;
        
        private long parmCaseServiceRecIDField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.CaseCategoryType parmCategoryTypeField;
        
        private long parmCollectionRecIDField;
        
        private System.DateTime parmConfirmedDueDateField;
        
        private string parmCustAddressField;
        
        private string parmCustIdField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        private string parmProcessStepField;
        
        private long parmProcessStepRecIDField;
        
        private long parmServiceRecIDField;
        
        private string parmStatusField;
        
        private System.DateTime parmStatusDueDateField;
        
        private string parmUserIdField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCaseCategory {
            get {
                return this.parmCaseCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseCategoryField, value) != true)) {
                    this.parmCaseCategoryField = value;
                    this.RaisePropertyChanged("parmCaseCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCaseID {
            get {
                return this.parmCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIDField, value) != true)) {
                    this.parmCaseIDField = value;
                    this.RaisePropertyChanged("parmCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmCaseServiceRecID {
            get {
                return this.parmCaseServiceRecIDField;
            }
            set {
                if ((this.parmCaseServiceRecIDField.Equals(value) != true)) {
                    this.parmCaseServiceRecIDField = value;
                    this.RaisePropertyChanged("parmCaseServiceRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.CaseCategoryType parmCategoryType {
            get {
                return this.parmCategoryTypeField;
            }
            set {
                if ((this.parmCategoryTypeField.Equals(value) != true)) {
                    this.parmCategoryTypeField = value;
                    this.RaisePropertyChanged("parmCategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmCollectionRecID {
            get {
                return this.parmCollectionRecIDField;
            }
            set {
                if ((this.parmCollectionRecIDField.Equals(value) != true)) {
                    this.parmCollectionRecIDField = value;
                    this.RaisePropertyChanged("parmCollectionRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmConfirmedDueDate {
            get {
                return this.parmConfirmedDueDateField;
            }
            set {
                if ((this.parmConfirmedDueDateField.Equals(value) != true)) {
                    this.parmConfirmedDueDateField = value;
                    this.RaisePropertyChanged("parmConfirmedDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustId {
            get {
                return this.parmCustIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustIdField, value) != true)) {
                    this.parmCustIdField = value;
                    this.RaisePropertyChanged("parmCustId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmProcessStep {
            get {
                return this.parmProcessStepField;
            }
            set {
                if ((object.ReferenceEquals(this.parmProcessStepField, value) != true)) {
                    this.parmProcessStepField = value;
                    this.RaisePropertyChanged("parmProcessStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmProcessStepRecID {
            get {
                return this.parmProcessStepRecIDField;
            }
            set {
                if ((this.parmProcessStepRecIDField.Equals(value) != true)) {
                    this.parmProcessStepRecIDField = value;
                    this.RaisePropertyChanged("parmProcessStepRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmServiceRecID {
            get {
                return this.parmServiceRecIDField;
            }
            set {
                if ((this.parmServiceRecIDField.Equals(value) != true)) {
                    this.parmServiceRecIDField = value;
                    this.RaisePropertyChanged("parmServiceRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmStatus {
            get {
                return this.parmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.parmStatusField, value) != true)) {
                    this.parmStatusField = value;
                    this.RaisePropertyChanged("parmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmStatusDueDate {
            get {
                return this.parmStatusDueDateField;
            }
            set {
                if ((this.parmStatusDueDateField.Equals(value) != true)) {
                    this.parmStatusDueDateField = value;
                    this.RaisePropertyChanged("parmStatusDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmUserId {
            get {
                return this.parmUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserIdField, value) != true)) {
                    this.parmUserIdField = value;
                    this.RaisePropertyChanged("parmUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleDetailsContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkVehicleDetailsContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private int parmChassisNumberField;
        
        private string parmColorField;
        
        private string parmEngineNumberField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmLisenceDiscCurrentField;
        
        private string parmMakeField;
        
        private decimal parmODOReadingField;
        
        private long parmRecIDField;
        
        private string parmRegNoField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private System.DateTime parmlisenceDiscExpiryDateField;
        
        private string parmyearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmChassisNumber {
            get {
                return this.parmChassisNumberField;
            }
            set {
                if ((this.parmChassisNumberField.Equals(value) != true)) {
                    this.parmChassisNumberField = value;
                    this.RaisePropertyChanged("parmChassisNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmColor {
            get {
                return this.parmColorField;
            }
            set {
                if ((object.ReferenceEquals(this.parmColorField, value) != true)) {
                    this.parmColorField = value;
                    this.RaisePropertyChanged("parmColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmEngineNumber {
            get {
                return this.parmEngineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineNumberField, value) != true)) {
                    this.parmEngineNumberField = value;
                    this.RaisePropertyChanged("parmEngineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmLisenceDiscCurrent {
            get {
                return this.parmLisenceDiscCurrentField;
            }
            set {
                if ((this.parmLisenceDiscCurrentField.Equals(value) != true)) {
                    this.parmLisenceDiscCurrentField = value;
                    this.RaisePropertyChanged("parmLisenceDiscCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal parmODOReading {
            get {
                return this.parmODOReadingField;
            }
            set {
                if ((this.parmODOReadingField.Equals(value) != true)) {
                    this.parmODOReadingField = value;
                    this.RaisePropertyChanged("parmODOReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRegNo {
            get {
                return this.parmRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRegNoField, value) != true)) {
                    this.parmRegNoField = value;
                    this.RaisePropertyChanged("parmRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmlisenceDiscExpiryDate {
            get {
                return this.parmlisenceDiscExpiryDateField;
            }
            set {
                if ((this.parmlisenceDiscExpiryDateField.Equals(value) != true)) {
                    this.parmlisenceDiscExpiryDateField = value;
                    this.RaisePropertyChanged("parmlisenceDiscExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmyear {
            get {
                return this.parmyearField;
            }
            set {
                if ((object.ReferenceEquals(this.parmyearField, value) != true)) {
                    this.parmyearField = value;
                    this.RaisePropertyChanged("parmyear");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoYes", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum NoYes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkVehicleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Passenger = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialMechanicalCondition", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialMechanicalCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Engine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FrontSuppression = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearSuppression = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steering = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exhaust = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Battery = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKEngineTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MZKEngineTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Petrol = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diesel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPG = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainsBattery = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKConditionEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MZKConditionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Poor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fair = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCategoryType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum CaseCategoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        General = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sales = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Purchase = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Project = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Production = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collections = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Risk = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finance = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FleetManagement = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPSTrackingSolutions = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vendors = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contract = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Procurement = 18,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class AifFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomDetailXmlField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessageList> FaultMessageListArrayField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.InfologMessage> InfologMessageListField;
        
        private string StackTraceField;
        
        private int XppExceptionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomDetailXml {
            get {
                return this.CustomDetailXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailXmlField, value) != true)) {
                    this.CustomDetailXmlField = value;
                    this.RaisePropertyChanged("CustomDetailXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessageList> FaultMessageListArray {
            get {
                return this.FaultMessageListArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageListArrayField, value) != true)) {
                    this.FaultMessageListArrayField = value;
                    this.RaisePropertyChanged("FaultMessageListArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.InfologMessage> InfologMessageList {
            get {
                return this.InfologMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfologMessageListField, value) != true)) {
                    this.InfologMessageListField = value;
                    this.RaisePropertyChanged("InfologMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XppExceptionType {
            get {
                return this.XppExceptionTypeField;
            }
            set {
                if ((this.XppExceptionTypeField.Equals(value) != true)) {
                    this.XppExceptionTypeField = value;
                    this.RaisePropertyChanged("XppExceptionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessageList", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessageList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentField;
        
        private string DocumentOperationField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessage> FaultMessageArrayField;
        
        private string FieldField;
        
        private string ServiceField;
        
        private string ServiceOperationField;
        
        private string ServiceOperationParameterField;
        
        private string XPathField;
        
        private string XmlLineField;
        
        private string XmlPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentOperation {
            get {
                return this.DocumentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentOperationField, value) != true)) {
                    this.DocumentOperationField = value;
                    this.RaisePropertyChanged("DocumentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessage> FaultMessageArray {
            get {
                return this.FaultMessageArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageArrayField, value) != true)) {
                    this.FaultMessageArrayField = value;
                    this.RaisePropertyChanged("FaultMessageArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperation {
            get {
                return this.ServiceOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationField, value) != true)) {
                    this.ServiceOperationField = value;
                    this.RaisePropertyChanged("ServiceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperationParameter {
            get {
                return this.ServiceOperationParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationParameterField, value) != true)) {
                    this.ServiceOperationParameterField = value;
                    this.RaisePropertyChanged("ServiceOperationParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPath {
            get {
                return this.XPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XPathField, value) != true)) {
                    this.XPathField = value;
                    this.RaisePropertyChanged("XPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlLine {
            get {
                return this.XmlLineField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlLineField, value) != true)) {
                    this.XmlLineField = value;
                    this.RaisePropertyChanged("XmlLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlPosition {
            get {
                return this.XmlPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPositionField, value) != true)) {
                    this.XmlPositionField = value;
                    this.RaisePropertyChanged("XmlPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public partial class InfologMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Eqstra.VehicleInspection.UILogic.VIService.InfologMessageType InfologMessageTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.InfologMessageType InfologMessageType {
            get {
                return this.InfologMessageTypeField;
            }
            set {
                if ((this.InfologMessageTypeField.Equals(value) != true)) {
                    this.InfologMessageTypeField = value;
                    this.RaisePropertyChanged("InfologMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessageType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public enum InfologMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", ConfigurationName="VIService.IRequestReplyRouter")]
    public interface IRequestReplyRouter {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestReplyRouterChannel : Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestReplyRouterClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter>, Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestReplyRouterClient() : 
                base(RequestReplyRouterClient.GetDefaultBinding(), RequestReplyRouterClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.reqReplyEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), RequestReplyRouterClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RequestReplyRouterClient.GetBindingForEndpoint(EndpointConfiguration.reqReplyEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RequestReplyRouterClient.GetEndpointAddress(EndpointConfiguration.reqReplyEndpoint);
        }
        
        public enum EndpointConfiguration {
            
            reqReplyEndpoint,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="VIService.MzkVehicleInspectionService")]
    public interface MzkVehicleInspectionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> createGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createPassengerTrimInteriorRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerTrimInteriorAifFaul" +
            "tFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse> createPassengerTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createPassengerTyreConditionRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerTyreConditionAifFau" +
            "ltFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse> createPassengerTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollection", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollectionAifFaultFau" +
            "lt", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> createVehicleCollectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerBodywork", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createPassengerBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerBodyworkAifFaultFau" +
            "lt", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkResponse> createPassengerBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTable", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableAifFau" +
            "ltFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createPassengerAccessoriesResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createPassengerAccessoriesAifFault" +
            "Fault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse> createPassengerAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerGlassContract> _lstGlass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceCreateGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerGlassContract> _lstGlass, string _company) {
            this._lstGlass = _lstGlass;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateGlassResponse {
        
        public MzkVehicleInspectionServiceCreateGlassResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior, string _company) {
            this._lstPassengerTrimInterior = _lstPassengerTrimInterior;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse {
        
        public MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition, string _company) {
            this._lstPassengerTyreCondition = _lstPassengerTyreCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse {
        
        public MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails;
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            this._lstVehicleDetails = _lstVehicleDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleDetailsResponse {
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleCollectionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks;
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            this._lstTasks = _lstTasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleCollectionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleCollectionResponse {
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceCreatePassengerBodyworkRequest() {
        }
        
        public MzkVehicleInspectionServiceCreatePassengerBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork, string _company) {
            this._lstPassengerBodywork = _lstPassengerBodywork;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerBodyworkResponse {
        
        public MzkVehicleInspectionServiceCreatePassengerBodyworkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract) {
            this.contract = contract;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long response;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse(long response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessories;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessories, string _company) {
            this._lstPassengerAccessories = _lstPassengerAccessories;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse {
        
        public MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition;
        
        public MzkVehicleInspectionServiceCreateMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            this._lstMechCondition = _lstMechCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateMechConditionResponse {
        
        public MzkVehicleInspectionServiceCreateMechConditionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MzkVehicleInspectionServiceChannel : Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MzkVehicleInspectionServiceClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService>, Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MzkVehicleInspectionServiceClient() : 
                base(MzkVehicleInspectionServiceClient.GetDefaultBinding(), MzkVehicleInspectionServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), MzkVehicleInspectionServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest request) {
            return base.Channel.createGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> createGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerGlassContract> _lstGlass, string _company) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest();
            inValue._lstGlass = _lstGlass;
            inValue._company = _company;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createPassengerTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest request) {
            return base.Channel.createPassengerTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorResponse> createPassengerTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior, string _company) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTrimInteriorRequest();
            inValue._lstPassengerTrimInterior = _lstPassengerTrimInterior;
            inValue._company = _company;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createPassengerTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createPassengerTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest request) {
            return base.Channel.createPassengerTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionResponse> createPassengerTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition, string _company) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerTyreConditionRequest();
            inValue._lstPassengerTyreCondition = _lstPassengerTyreCondition;
            inValue._company = _company;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createPassengerTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest request) {
            return base.Channel.createVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest();
            inValue._lstVehicleDetails = _lstVehicleDetails;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleCollectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest request) {
            return base.Channel.createVehicleCollectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> createVehicleCollectionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest();
            inValue._lstTasks = _lstTasks;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleCollectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createPassengerBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkRequest request) {
            return base.Channel.createPassengerBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkResponse> createPassengerBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork, string _company) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerBodyworkRequest();
            inValue._lstPassengerBodywork = _lstPassengerBodywork;
            inValue._company = _company;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createPassengerBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request) {
            return base.Channel.createVehicleInspectionTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest();
            inValue.contract = contract;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleInspectionTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createPassengerAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest request) {
            return base.Channel.createPassengerAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesResponse> createPassengerAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessories, string _company) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreatePassengerAccessoriesRequest();
            inValue._lstPassengerAccessories = _lstPassengerAccessories;
            inValue._company = _company;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createPassengerAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest request) {
            return base.Channel.createMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest();
            inValue._lstMechCondition = _lstMechCondition;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createMechConditionAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MzkVehicleInspectionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MzkVehicleInspectionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_MzkVehicleInspectionService,
        }
    }
}
