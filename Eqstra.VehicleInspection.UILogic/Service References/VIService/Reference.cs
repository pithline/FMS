//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Eqstra.VehicleInspection.UILogic.VIService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    public partial class CallContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyField;
        
        private string LanguageField;
        
        private string LogonAsUserField;
        
        private string MessageIdField;
        
        private System.Collections.Generic.Dictionary<string, string> PropertyBagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogonAsUser {
            get {
                return this.LogonAsUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonAsUserField, value) != true)) {
                    this.LogonAsUserField = value;
                    this.RaisePropertyChanged("LogonAsUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleDetailsContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkVehicleDetailsContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private int parmChassisNumberField;
        
        private string parmColorField;
        
        private string parmEngineNumberField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmLisenceDiscCurrentField;
        
        private string parmMakeField;
        
        private decimal parmODOReadingField;
        
        private long parmRecIDField;
        
        private string parmRegNoField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private System.DateTime parmlisenceDiscExpiryDateField;
        
        private string parmyearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmChassisNumber {
            get {
                return this.parmChassisNumberField;
            }
            set {
                if ((this.parmChassisNumberField.Equals(value) != true)) {
                    this.parmChassisNumberField = value;
                    this.RaisePropertyChanged("parmChassisNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmColor {
            get {
                return this.parmColorField;
            }
            set {
                if ((object.ReferenceEquals(this.parmColorField, value) != true)) {
                    this.parmColorField = value;
                    this.RaisePropertyChanged("parmColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmEngineNumber {
            get {
                return this.parmEngineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineNumberField, value) != true)) {
                    this.parmEngineNumberField = value;
                    this.RaisePropertyChanged("parmEngineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmLisenceDiscCurrent {
            get {
                return this.parmLisenceDiscCurrentField;
            }
            set {
                if ((this.parmLisenceDiscCurrentField.Equals(value) != true)) {
                    this.parmLisenceDiscCurrentField = value;
                    this.RaisePropertyChanged("parmLisenceDiscCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal parmODOReading {
            get {
                return this.parmODOReadingField;
            }
            set {
                if ((this.parmODOReadingField.Equals(value) != true)) {
                    this.parmODOReadingField = value;
                    this.RaisePropertyChanged("parmODOReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRegNo {
            get {
                return this.parmRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRegNoField, value) != true)) {
                    this.parmRegNoField = value;
                    this.RaisePropertyChanged("parmRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmlisenceDiscExpiryDate {
            get {
                return this.parmlisenceDiscExpiryDateField;
            }
            set {
                if ((this.parmlisenceDiscExpiryDateField.Equals(value) != true)) {
                    this.parmlisenceDiscExpiryDateField = value;
                    this.RaisePropertyChanged("parmlisenceDiscExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmyear {
            get {
                return this.parmyearField;
            }
            set {
                if ((object.ReferenceEquals(this.parmyearField, value) != true)) {
                    this.parmyearField = value;
                    this.RaisePropertyChanged("parmyear");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkCustAddressContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MZKVehicleInspectionTableContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract))]
    public partial class XppObjectBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkAccessoryContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkAccessoryContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerAccessories parmAccessoryTypeField;
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialAccessories parmCommercialAccessoryTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerAccessories parmPassengerAccessoryField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerAccessories parmAccessoryType {
            get {
                return this.parmAccessoryTypeField;
            }
            set {
                if ((this.parmAccessoryTypeField.Equals(value) != true)) {
                    this.parmAccessoryTypeField = value;
                    this.RaisePropertyChanged("parmAccessoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialAccessories parmCommercialAccessoryType {
            get {
                return this.parmCommercialAccessoryTypeField;
            }
            set {
                if ((this.parmCommercialAccessoryTypeField.Equals(value) != true)) {
                    this.parmCommercialAccessoryTypeField = value;
                    this.RaisePropertyChanged("parmCommercialAccessoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerAccessories parmPassengerAccessory {
            get {
                return this.parmPassengerAccessoryField;
            }
            set {
                if ((this.parmPassengerAccessoryField.Equals(value) != true)) {
                    this.parmPassengerAccessoryField = value;
                    this.RaisePropertyChanged("parmPassengerAccessory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkBodyworkContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkBodyworkContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialBodywork parmCommercialBodyworkField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerBodywork parmPassengerBodyworkField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialBodywork parmCommercialBodywork {
            get {
                return this.parmCommercialBodyworkField;
            }
            set {
                if ((this.parmCommercialBodyworkField.Equals(value) != true)) {
                    this.parmCommercialBodyworkField = value;
                    this.RaisePropertyChanged("parmCommercialBodywork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerBodywork parmPassengerBodywork {
            get {
                return this.parmPassengerBodyworkField;
            }
            set {
                if ((this.parmPassengerBodyworkField.Equals(value) != true)) {
                    this.parmPassengerBodyworkField = value;
                    this.RaisePropertyChanged("parmPassengerBodywork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCustAddressContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkCustAddressContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCustAddressField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkGlassContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkGlassContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkGlassType parmGlassTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkGlassType parmGlassType {
            get {
                return this.parmGlassTypeField;
            }
            set {
                if ((this.parmGlassTypeField.Equals(value) != true)) {
                    this.parmGlassTypeField = value;
                    this.RaisePropertyChanged("parmGlassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMechanicalConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkMechanicalConditionContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialMechanicalCondition parmCommercialMechConditionField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKEngineTypeEnum parmEngineTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsRunningField;
        
        private long parmRecIDField;
        
        private string parmRemarksField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialMechanicalCondition parmCommercialMechCondition {
            get {
                return this.parmCommercialMechConditionField;
            }
            set {
                if ((this.parmCommercialMechConditionField.Equals(value) != true)) {
                    this.parmCommercialMechConditionField = value;
                    this.RaisePropertyChanged("parmCommercialMechCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKEngineTypeEnum parmEngineType {
            get {
                return this.parmEngineTypeField;
            }
            set {
                if ((this.parmEngineTypeField.Equals(value) != true)) {
                    this.parmEngineTypeField = value;
                    this.RaisePropertyChanged("parmEngineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsRunning {
            get {
                return this.parmIsRunningField;
            }
            set {
                if ((this.parmIsRunningField.Equals(value) != true)) {
                    this.parmIsRunningField = value;
                    this.RaisePropertyChanged("parmIsRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmRemarks {
            get {
                return this.parmRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRemarksField, value) != true)) {
                    this.parmRemarksField = value;
                    this.RaisePropertyChanged("parmRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTasksContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkTasksContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCaseCategoryField;
        
        private string parmCaseIDField;
        
        private long parmCaseServiceRecIDField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.CaseCategoryType parmCategoryTypeField;
        
        private long parmCollectionRecIDField;
        
        private System.DateTime parmConfirmedDueDateField;
        
        private string parmCustAddressField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        private string parmPartyNumberField;
        
        private string parmProcessStepField;
        
        private long parmProcessStepRecIDField;
        
        private long parmServiceRecIDField;
        
        private string parmStatusField;
        
        private System.DateTime parmStatusDueDateField;
        
        private string parmUserIdField;
        
        private string parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCaseCategory {
            get {
                return this.parmCaseCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseCategoryField, value) != true)) {
                    this.parmCaseCategoryField = value;
                    this.RaisePropertyChanged("parmCaseCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCaseID {
            get {
                return this.parmCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIDField, value) != true)) {
                    this.parmCaseIDField = value;
                    this.RaisePropertyChanged("parmCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmCaseServiceRecID {
            get {
                return this.parmCaseServiceRecIDField;
            }
            set {
                if ((this.parmCaseServiceRecIDField.Equals(value) != true)) {
                    this.parmCaseServiceRecIDField = value;
                    this.RaisePropertyChanged("parmCaseServiceRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.CaseCategoryType parmCategoryType {
            get {
                return this.parmCategoryTypeField;
            }
            set {
                if ((this.parmCategoryTypeField.Equals(value) != true)) {
                    this.parmCategoryTypeField = value;
                    this.RaisePropertyChanged("parmCategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmCollectionRecID {
            get {
                return this.parmCollectionRecIDField;
            }
            set {
                if ((this.parmCollectionRecIDField.Equals(value) != true)) {
                    this.parmCollectionRecIDField = value;
                    this.RaisePropertyChanged("parmCollectionRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmConfirmedDueDate {
            get {
                return this.parmConfirmedDueDateField;
            }
            set {
                if ((this.parmConfirmedDueDateField.Equals(value) != true)) {
                    this.parmConfirmedDueDateField = value;
                    this.RaisePropertyChanged("parmConfirmedDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmPartyNumber {
            get {
                return this.parmPartyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPartyNumberField, value) != true)) {
                    this.parmPartyNumberField = value;
                    this.RaisePropertyChanged("parmPartyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmProcessStep {
            get {
                return this.parmProcessStepField;
            }
            set {
                if ((object.ReferenceEquals(this.parmProcessStepField, value) != true)) {
                    this.parmProcessStepField = value;
                    this.RaisePropertyChanged("parmProcessStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmProcessStepRecID {
            get {
                return this.parmProcessStepRecIDField;
            }
            set {
                if ((this.parmProcessStepRecIDField.Equals(value) != true)) {
                    this.parmProcessStepRecIDField = value;
                    this.RaisePropertyChanged("parmProcessStepRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmServiceRecID {
            get {
                return this.parmServiceRecIDField;
            }
            set {
                if ((this.parmServiceRecIDField.Equals(value) != true)) {
                    this.parmServiceRecIDField = value;
                    this.RaisePropertyChanged("parmServiceRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmStatus {
            get {
                return this.parmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.parmStatusField, value) != true)) {
                    this.parmStatusField = value;
                    this.RaisePropertyChanged("parmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmStatusDueDate {
            get {
                return this.parmStatusDueDateField;
            }
            set {
                if ((this.parmStatusDueDateField.Equals(value) != true)) {
                    this.parmStatusDueDateField = value;
                    this.RaisePropertyChanged("parmStatusDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmUserId {
            get {
                return this.parmUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserIdField, value) != true)) {
                    this.parmUserIdField = value;
                    this.RaisePropertyChanged("parmUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmVehicleTypeField, value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTrimInteriorContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkTrimInteriorContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialTrimInterior parmCommercialTrimInteriorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerInteriorTrim parmPassengerTrimInteriorField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialTrimInterior parmCommercialTrimInterior {
            get {
                return this.parmCommercialTrimInteriorField;
            }
            set {
                if ((this.parmCommercialTrimInteriorField.Equals(value) != true)) {
                    this.parmCommercialTrimInteriorField = value;
                    this.RaisePropertyChanged("parmCommercialTrimInterior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerInteriorTrim parmPassengerTrimInterior {
            get {
                return this.parmPassengerTrimInteriorField;
            }
            set {
                if ((this.parmPassengerTrimInteriorField.Equals(value) != true)) {
                    this.parmPassengerTrimInteriorField = value;
                    this.RaisePropertyChanged("parmPassengerTrimInterior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTyreConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkTyreConditionContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialTyre parmCommercialTyreTypeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmConditionField;
        
        private string parmMakeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerTyreCondition parmPassengerTyreTypeField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private string parmdepthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkCommercialTyre parmCommercialTyreType {
            get {
                return this.parmCommercialTyreTypeField;
            }
            set {
                if ((this.parmCommercialTyreTypeField.Equals(value) != true)) {
                    this.parmCommercialTyreTypeField = value;
                    this.RaisePropertyChanged("parmCommercialTyreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmCondition {
            get {
                return this.parmConditionField;
            }
            set {
                if ((this.parmConditionField.Equals(value) != true)) {
                    this.parmConditionField = value;
                    this.RaisePropertyChanged("parmCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkPassengerTyreCondition parmPassengerTyreType {
            get {
                return this.parmPassengerTyreTypeField;
            }
            set {
                if ((this.parmPassengerTyreTypeField.Equals(value) != true)) {
                    this.parmPassengerTyreTypeField = value;
                    this.RaisePropertyChanged("parmPassengerTyreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmdepth {
            get {
                return this.parmdepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmdepthField, value) != true)) {
                    this.parmdepthField = value;
                    this.RaisePropertyChanged("parmdepth");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKVehicleInspectionTableContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MZKVehicleInspectionTableContract : Eqstra.VehicleInspection.UILogic.VIService.XppObjectBase {
        
        private string parmCaseIdField;
        
        private System.DateTime parmCompanyRepSignDateTimeField;
        
        private System.DateTime parmCustomerRepSignDateTimeField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmGeneralConditionField;
        
        private long parmRecIDField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MZKRecommendationEnum parmRecommendationField;
        
        private string parmTaskIdField;
        
        private System.DateTime parmTravelEndDateTimeField;
        
        private System.DateTime parmTravelStartDateTimeField;
        
        private long parmVehicleInspectorField;
        
        private Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmCaseId {
            get {
                return this.parmCaseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIdField, value) != true)) {
                    this.parmCaseIdField = value;
                    this.RaisePropertyChanged("parmCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmCompanyRepSignDateTime {
            get {
                return this.parmCompanyRepSignDateTimeField;
            }
            set {
                if ((this.parmCompanyRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCompanyRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCompanyRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmCustomerRepSignDateTime {
            get {
                return this.parmCustomerRepSignDateTimeField;
            }
            set {
                if ((this.parmCustomerRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCustomerRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCustomerRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKConditionEnum parmGeneralCondition {
            get {
                return this.parmGeneralConditionField;
            }
            set {
                if ((this.parmGeneralConditionField.Equals(value) != true)) {
                    this.parmGeneralConditionField = value;
                    this.RaisePropertyChanged("parmGeneralCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MZKRecommendationEnum parmRecommendation {
            get {
                return this.parmRecommendationField;
            }
            set {
                if ((this.parmRecommendationField.Equals(value) != true)) {
                    this.parmRecommendationField = value;
                    this.RaisePropertyChanged("parmRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string parmTaskId {
            get {
                return this.parmTaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTaskIdField, value) != true)) {
                    this.parmTaskIdField = value;
                    this.RaisePropertyChanged("parmTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmTravelEndDateTime {
            get {
                return this.parmTravelEndDateTimeField;
            }
            set {
                if ((this.parmTravelEndDateTimeField.Equals(value) != true)) {
                    this.parmTravelEndDateTimeField = value;
                    this.RaisePropertyChanged("parmTravelEndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime parmTravelStartDateTime {
            get {
                return this.parmTravelStartDateTimeField;
            }
            set {
                if ((this.parmTravelStartDateTimeField.Equals(value) != true)) {
                    this.parmTravelStartDateTimeField = value;
                    this.RaisePropertyChanged("parmTravelStartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long parmVehicleInspector {
            get {
                return this.parmVehicleInspectorField;
            }
            set {
                if ((this.parmVehicleInspectorField.Equals(value) != true)) {
                    this.parmVehicleInspectorField = value;
                    this.RaisePropertyChanged("parmVehicleInspector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoYes", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum NoYes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerAccessories", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkPassengerAccessories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radio = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CDShuttle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Navigation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aircon = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alarm = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpareKey = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialAccessories", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialAccessories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceBook = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tools = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jack = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bullbar = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingDevice = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EngineProtectionUnit = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DecallSwitching = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReflectiveType = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialBodywork", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialBodywork : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Door = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chassis = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Floor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Headboard = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsLeft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsRight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsFront = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsRear = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerBodywork", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkPassengerBodywork : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HailDamage = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFDoor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFDoor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRDoor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRDoor = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Roof = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkGlassType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkGlassType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windscreen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearGlass = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SideGlass = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadLights = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TailLights = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndicatorLenses = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExitRearViewMirror = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialMechanicalCondition", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialMechanicalCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Engine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FrontSuppression = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearSuppression = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steering = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exhaust = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Battery = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKEngineTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MZKEngineTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Petrol = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diesel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPG = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainsBattery = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCategoryType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum CaseCategoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        General = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sales = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Purchase = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Project = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Production = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Collections = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Web = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Risk = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finance = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FleetManagement = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPSTrackingSolutions = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vendors = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contract = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Procurement = 18,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialTrimInterior", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialTrimInterior : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftDoor = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightDoor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFQuarterPanel = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFQuarterPanel = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRQuarterPanel = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRQuarterPanel = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Frontview = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bumper = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grill = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerInteriorTrim", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkPassengerInteriorTrim : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalTrim = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFDoorTrim = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFDoorTrim = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRDoorTrim = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRDoorTrim = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DriverSeat = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassengerSeat = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearSeat = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dash = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Carpets = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialTyre", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkCommercialTyre : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRInner = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LROuter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LInnerAxleIn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LInnerAxleOut = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKConditionEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MZKConditionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Poor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fair = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerTyreCondition", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkPassengerTyreCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Spare = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKRecommendationEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MZKRecommendationEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFeasible = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retain = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum MzkVehicleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Passenger = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class AifFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomDetailXmlField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessageList> FaultMessageListArrayField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.InfologMessage> InfologMessageListField;
        
        private string StackTraceField;
        
        private int XppExceptionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomDetailXml {
            get {
                return this.CustomDetailXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailXmlField, value) != true)) {
                    this.CustomDetailXmlField = value;
                    this.RaisePropertyChanged("CustomDetailXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessageList> FaultMessageListArray {
            get {
                return this.FaultMessageListArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageListArrayField, value) != true)) {
                    this.FaultMessageListArrayField = value;
                    this.RaisePropertyChanged("FaultMessageListArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.InfologMessage> InfologMessageList {
            get {
                return this.InfologMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfologMessageListField, value) != true)) {
                    this.InfologMessageListField = value;
                    this.RaisePropertyChanged("InfologMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XppExceptionType {
            get {
                return this.XppExceptionTypeField;
            }
            set {
                if ((this.XppExceptionTypeField.Equals(value) != true)) {
                    this.XppExceptionTypeField = value;
                    this.RaisePropertyChanged("XppExceptionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessageList", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessageList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentField;
        
        private string DocumentOperationField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessage> FaultMessageArrayField;
        
        private string FieldField;
        
        private string ServiceField;
        
        private string ServiceOperationField;
        
        private string ServiceOperationParameterField;
        
        private string XPathField;
        
        private string XmlLineField;
        
        private string XmlPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentOperation {
            get {
                return this.DocumentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentOperationField, value) != true)) {
                    this.DocumentOperationField = value;
                    this.RaisePropertyChanged("DocumentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.FaultMessage> FaultMessageArray {
            get {
                return this.FaultMessageArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageArrayField, value) != true)) {
                    this.FaultMessageArrayField = value;
                    this.RaisePropertyChanged("FaultMessageArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperation {
            get {
                return this.ServiceOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationField, value) != true)) {
                    this.ServiceOperationField = value;
                    this.RaisePropertyChanged("ServiceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperationParameter {
            get {
                return this.ServiceOperationParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationParameterField, value) != true)) {
                    this.ServiceOperationParameterField = value;
                    this.RaisePropertyChanged("ServiceOperationParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPath {
            get {
                return this.XPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XPathField, value) != true)) {
                    this.XPathField = value;
                    this.RaisePropertyChanged("XPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlLine {
            get {
                return this.XmlLineField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlLineField, value) != true)) {
                    this.XmlLineField = value;
                    this.RaisePropertyChanged("XmlLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlPosition {
            get {
                return this.XmlPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPositionField, value) != true)) {
                    this.XmlPositionField = value;
                    this.RaisePropertyChanged("XmlPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public partial class InfologMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Eqstra.VehicleInspection.UILogic.VIService.InfologMessageType InfologMessageTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Eqstra.VehicleInspection.UILogic.VIService.InfologMessageType InfologMessageType {
            get {
                return this.InfologMessageTypeField;
            }
            set {
                if ((this.InfologMessageTypeField.Equals(value) != true)) {
                    this.InfologMessageTypeField = value;
                    this.RaisePropertyChanged("InfologMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessageType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public enum InfologMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", ConfigurationName="VIService.IRequestReplyRouter")]
    public interface IRequestReplyRouter {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestReplyRouterChannel : Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestReplyRouterClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter>, Eqstra.VehicleInspection.UILogic.VIService.IRequestReplyRouter {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestReplyRouterClient() : 
                base(RequestReplyRouterClient.GetDefaultBinding(), RequestReplyRouterClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.reqReplyEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), RequestReplyRouterClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RequestReplyRouterClient.GetBindingForEndpoint(EndpointConfiguration.reqReplyEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RequestReplyRouterClient.GetEndpointAddress(EndpointConfiguration.reqReplyEndpoint);
        }
        
        public enum EndpointConfiguration {
            
            reqReplyEndpoint,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="VIService.MzkVehicleInspectionService")]
    public interface MzkVehicleInspectionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionResponse> readTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorResponse> readTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionResponse> readMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassResponse> readGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readBodywork", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkResponse> readBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readAccessoriesAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesResponse> readAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getTasks", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getTasksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getTasksAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksResponse> getTasksAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getCustDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getCustDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getCustDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspection", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspectionAifFaultFault" +
            "", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionResponse> editTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorResponse> editTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionResponse> editMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassResponse> editGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editBodywork", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkResponse> editBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editAccessory", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editAccessoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editAccessoryAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryResponse> editAccessoryAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTable", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableAifFau" +
            "ltFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollection", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleCollectionAifFaultFau" +
            "lt", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> createVehicleCollectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionResponse> createTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorResponse> createTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> createGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createBodywork", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkResponse> createBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createAccessoriesAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesResponse> createAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/updateStatusList", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/updateStatusListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.UILogic.VIService.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/updateStatusListAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListResponse> updateStatusListAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceReadVehicleDetailsRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadVehicleDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> response;
        
        public MzkVehicleInspectionServiceReadVehicleDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceReadVehicleDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceReadTyreConditionRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadTyreConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> response;
        
        public MzkVehicleInspectionServiceReadTyreConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceReadTyreConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceReadTrimInteriorRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadTrimInteriorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> response;
        
        public MzkVehicleInspectionServiceReadTrimInteriorResponse() {
        }
        
        public MzkVehicleInspectionServiceReadTrimInteriorResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceReadMechConditionRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadMechConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> response;
        
        public MzkVehicleInspectionServiceReadMechConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceReadMechConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceReadGlassRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadGlassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> response;
        
        public MzkVehicleInspectionServiceReadGlassResponse() {
        }
        
        public MzkVehicleInspectionServiceReadGlassResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadBodyworkRequest() {
        }
        
        public MzkVehicleInspectionServiceReadBodyworkRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadBodyworkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> response;
        
        public MzkVehicleInspectionServiceReadBodyworkResponse() {
        }
        
        public MzkVehicleInspectionServiceReadBodyworkResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public MzkVehicleInspectionServiceReadAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceReadAccessoriesRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceReadAccessoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> response;
        
        public MzkVehicleInspectionServiceReadAccessoriesResponse() {
        }
        
        public MzkVehicleInspectionServiceReadAccessoriesResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetTasksRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceGetTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _userID;
        
        public MzkVehicleInspectionServiceGetTasksRequest() {
        }
        
        public MzkVehicleInspectionServiceGetTasksRequest(string _userID) {
            this._userID = _userID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetTasksResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceGetTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> response;
        
        public MzkVehicleInspectionServiceGetTasksResponse() {
        }
        
        public MzkVehicleInspectionServiceGetTasksResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetCustDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceGetCustDetailsRequest {
        
        public MzkVehicleInspectionServiceGetCustDetailsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetCustDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceGetCustDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkCustAddressContract> response;
        
        public MzkVehicleInspectionServiceGetCustDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceGetCustDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkCustAddressContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleInspectionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditVehicleInspectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKVehicleInspectionTableContract> _lstVehicleInsp;
        
        public MzkVehicleInspectionServiceEditVehicleInspectionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleInspectionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            this._lstVehicleInsp = _lstVehicleInsp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleInspectionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditVehicleInspectionResponse {
        
        public MzkVehicleInspectionServiceEditVehicleInspectionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails;
        
        public MzkVehicleInspectionServiceEditVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            this._lstVehicleDetails = _lstVehicleDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditVehicleDetailsResponse {
        
        public MzkVehicleInspectionServiceEditVehicleDetailsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstEditTyreCondition;
        
        public MzkVehicleInspectionServiceEditTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstEditTyreCondition) {
            this._lstEditTyreCondition = _lstEditTyreCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditTyreConditionResponse {
        
        public MzkVehicleInspectionServiceEditTyreConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior;
        
        public MzkVehicleInspectionServiceEditTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior) {
            this._lstTrimInterior = _lstTrimInterior;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditTrimInteriorResponse {
        
        public MzkVehicleInspectionServiceEditTrimInteriorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition;
        
        public MzkVehicleInspectionServiceEditMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            this._lstMechCondition = _lstMechCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditMechConditionResponse {
        
        public MzkVehicleInspectionServiceEditMechConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstEditGlass;
        
        public MzkVehicleInspectionServiceEditGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceEditGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstEditGlass) {
            this._lstEditGlass = _lstEditGlass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditGlassResponse {
        
        public MzkVehicleInspectionServiceEditGlassResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork;
        
        public MzkVehicleInspectionServiceEditBodyworkRequest() {
        }
        
        public MzkVehicleInspectionServiceEditBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork) {
            this._lstBodywork = _lstBodywork;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditBodyworkResponse {
        
        public MzkVehicleInspectionServiceEditBodyworkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditAccessoryRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditAccessoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessory;
        
        public MzkVehicleInspectionServiceEditAccessoryRequest() {
        }
        
        public MzkVehicleInspectionServiceEditAccessoryRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessory) {
            this._lstAccessory = _lstAccessory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditAccessoryResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceEditAccessoryResponse {
        
        public MzkVehicleInspectionServiceEditAccessoryResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract) {
            this.contract = contract;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long response;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse(long response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails;
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            this._lstVehicleDetails = _lstVehicleDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleDetailsResponse {
        
        public MzkVehicleInspectionServiceCreateVehicleDetailsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleCollectionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleCollectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks;
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            this._lstTasks = _lstTasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleCollectionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateVehicleCollectionResponse {
        
        public MzkVehicleInspectionServiceCreateVehicleCollectionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstTyreCondition;
        
        public MzkVehicleInspectionServiceCreateTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstTyreCondition) {
            this._lstTyreCondition = _lstTyreCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateTyreConditionResponse {
        
        public MzkVehicleInspectionServiceCreateTyreConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior;
        
        public MzkVehicleInspectionServiceCreateTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior) {
            this._lstTrimInterior = _lstTrimInterior;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateTrimInteriorResponse {
        
        public MzkVehicleInspectionServiceCreateTrimInteriorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition;
        
        public MzkVehicleInspectionServiceCreateMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            this._lstMechCondition = _lstMechCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateMechConditionResponse {
        
        public MzkVehicleInspectionServiceCreateMechConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstGlass;
        
        public MzkVehicleInspectionServiceCreateGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstGlass) {
            this._lstGlass = _lstGlass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateGlassResponse {
        
        public MzkVehicleInspectionServiceCreateGlassResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork;
        
        public MzkVehicleInspectionServiceCreateBodyworkRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork) {
            this._lstBodywork = _lstBodywork;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateBodyworkResponse {
        
        public MzkVehicleInspectionServiceCreateBodyworkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessories;
        
        public MzkVehicleInspectionServiceCreateAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessories) {
            this._lstAccessories = _lstAccessories;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceCreateAccessoriesResponse {
        
        public MzkVehicleInspectionServiceCreateAccessoriesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateStatusListRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceUpdateStatusListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks;
        
        public MzkVehicleInspectionServiceUpdateStatusListRequest() {
        }
        
        public MzkVehicleInspectionServiceUpdateStatusListRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            this._lstTasks = _lstTasks;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateStatusListResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkVehicleInspectionServiceUpdateStatusListResponse {
        
        public MzkVehicleInspectionServiceUpdateStatusListResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MzkVehicleInspectionServiceChannel : Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MzkVehicleInspectionServiceClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService>, Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MzkVehicleInspectionServiceClient() : 
                base(MzkVehicleInspectionServiceClient.GetDefaultBinding(), MzkVehicleInspectionServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), MzkVehicleInspectionServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsRequest request) {
            return base.Channel.readVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadVehicleDetailsRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionRequest request) {
            return base.Channel.readTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionResponse> readTyreConditionAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTyreConditionRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorRequest request) {
            return base.Channel.readTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorResponse> readTrimInteriorAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadTrimInteriorRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionRequest request) {
            return base.Channel.readMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionResponse> readMechConditionAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadMechConditionRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassRequest request) {
            return base.Channel.readGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassResponse> readGlassAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadGlassRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkRequest request) {
            return base.Channel.readBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkResponse> readBodyworkAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadBodyworkRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.readAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesRequest request) {
            return base.Channel.readAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesResponse> readAccessoriesAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceReadAccessoriesRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).readAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.getTasksAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksRequest request) {
            return base.Channel.getTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksResponse> getTasksAsync(string _userID) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetTasksRequest();
            inValue._userID = _userID;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).getTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.getCustDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsRequest request) {
            return base.Channel.getCustDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync() {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceGetCustDetailsRequest();
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).getCustDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editVehicleInspectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionRequest request) {
            return base.Channel.editVehicleInspectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleInspectionRequest();
            inValue._lstVehicleInsp = _lstVehicleInsp;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editVehicleInspectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsRequest request) {
            return base.Channel.editVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditVehicleDetailsRequest();
            inValue._lstVehicleDetails = _lstVehicleDetails;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionRequest request) {
            return base.Channel.editTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionResponse> editTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstEditTyreCondition) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTyreConditionRequest();
            inValue._lstEditTyreCondition = _lstEditTyreCondition;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorRequest request) {
            return base.Channel.editTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorResponse> editTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditTrimInteriorRequest();
            inValue._lstTrimInterior = _lstTrimInterior;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionRequest request) {
            return base.Channel.editMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionResponse> editMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditMechConditionRequest();
            inValue._lstMechCondition = _lstMechCondition;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassRequest request) {
            return base.Channel.editGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassResponse> editGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstEditGlass) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditGlassRequest();
            inValue._lstEditGlass = _lstEditGlass;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkRequest request) {
            return base.Channel.editBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkResponse> editBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditBodyworkRequest();
            inValue._lstBodywork = _lstBodywork;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.editAccessoryAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryRequest request) {
            return base.Channel.editAccessoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryResponse> editAccessoryAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessory) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceEditAccessoryRequest();
            inValue._lstAccessory = _lstAccessory;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).editAccessoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request) {
            return base.Channel.createVehicleInspectionTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract contract) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest();
            inValue.contract = contract;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleInspectionTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleDetailsAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest request) {
            return base.Channel.createVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleDetailsContract> _lstVehicleDetails) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleDetailsRequest();
            inValue._lstVehicleDetails = _lstVehicleDetails;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createVehicleCollectionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest request) {
            return base.Channel.createVehicleCollectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionResponse> createVehicleCollectionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateVehicleCollectionRequest();
            inValue._lstTasks = _lstTasks;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createVehicleCollectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createTyreConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionRequest request) {
            return base.Channel.createTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionResponse> createTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTyreConditionContract> _lstTyreCondition) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTyreConditionRequest();
            inValue._lstTyreCondition = _lstTyreCondition;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createTrimInteriorAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorRequest request) {
            return base.Channel.createTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorResponse> createTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTrimInteriorContract> _lstTrimInterior) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateTrimInteriorRequest();
            inValue._lstTrimInterior = _lstTrimInterior;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createMechConditionAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest request) {
            return base.Channel.createMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkMechanicalConditionContract> _lstMechCondition) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateMechConditionRequest();
            inValue._lstMechCondition = _lstMechCondition;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createGlassAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest request) {
            return base.Channel.createGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassResponse> createGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkGlassContract> _lstGlass) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateGlassRequest();
            inValue._lstGlass = _lstGlass;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createBodyworkAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkRequest request) {
            return base.Channel.createBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkResponse> createBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkBodyworkContract> _lstBodywork) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateBodyworkRequest();
            inValue._lstBodywork = _lstBodywork;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.createAccessoriesAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesRequest request) {
            return base.Channel.createAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesResponse> createAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkAccessoryContract> _lstAccessories) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceCreateAccessoriesRequest();
            inValue._lstAccessories = _lstAccessories;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).createAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListResponse> Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService.updateStatusListAsync(Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListRequest request) {
            return base.Channel.updateStatusListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListResponse> updateStatusListAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.UILogic.VIService.MzkTasksContract> _lstTasks) {
            Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListRequest inValue = new Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionServiceUpdateStatusListRequest();
            inValue._lstTasks = _lstTasks;
            return ((Eqstra.VehicleInspection.UILogic.VIService.MzkVehicleInspectionService)(this)).updateStatusListAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MzkVehicleInspectionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MzkVehicleInspectionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_MzkVehicleInspectionService,
        }
    }
}
