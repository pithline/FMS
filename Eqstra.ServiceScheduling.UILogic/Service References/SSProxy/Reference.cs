//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Eqstra.ServiceScheduling.UILogic.SSProxy {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class AifFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string customDetailXmlField;
        
        private FaultMessageList[] faultMessageListArrayField;
        
        private InfologMessage[] infologMessageListField;
        
        private string stackTraceField;
        
        private int xppExceptionTypeField;
        
        private bool xppExceptionTypeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string CustomDetailXml {
            get {
                return this.customDetailXmlField;
            }
            set {
                this.customDetailXmlField = value;
                this.RaisePropertyChanged("CustomDetailXml");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=1)]
        public FaultMessageList[] FaultMessageListArray {
            get {
                return this.faultMessageListArrayField;
            }
            set {
                this.faultMessageListArrayField = value;
                this.RaisePropertyChanged("FaultMessageListArray");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
        public InfologMessage[] InfologMessageList {
            get {
                return this.infologMessageListField;
            }
            set {
                this.infologMessageListField = value;
                this.RaisePropertyChanged("InfologMessageList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("StackTrace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int XppExceptionType {
            get {
                return this.xppExceptionTypeField;
            }
            set {
                this.xppExceptionTypeField = value;
                this.RaisePropertyChanged("XppExceptionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XppExceptionTypeSpecified {
            get {
                return this.xppExceptionTypeFieldSpecified;
            }
            set {
                this.xppExceptionTypeFieldSpecified = value;
                this.RaisePropertyChanged("XppExceptionTypeSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessageList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string documentField;
        
        private string documentOperationField;
        
        private FaultMessage[] faultMessageArrayField;
        
        private string fieldField;
        
        private string serviceField;
        
        private string serviceOperationField;
        
        private string serviceOperationParameterField;
        
        private string xPathField;
        
        private string xmlLineField;
        
        private string xmlPositionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
                this.RaisePropertyChanged("Document");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string DocumentOperation {
            get {
                return this.documentOperationField;
            }
            set {
                this.documentOperationField = value;
                this.RaisePropertyChanged("DocumentOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true, Order=2)]
        public FaultMessage[] FaultMessageArray {
            get {
                return this.faultMessageArrayField;
            }
            set {
                this.faultMessageArrayField = value;
                this.RaisePropertyChanged("FaultMessageArray");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string Field {
            get {
                return this.fieldField;
            }
            set {
                this.fieldField = value;
                this.RaisePropertyChanged("Field");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string Service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
                this.RaisePropertyChanged("Service");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string ServiceOperation {
            get {
                return this.serviceOperationField;
            }
            set {
                this.serviceOperationField = value;
                this.RaisePropertyChanged("ServiceOperation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string ServiceOperationParameter {
            get {
                return this.serviceOperationParameterField;
            }
            set {
                this.serviceOperationParameterField = value;
                this.RaisePropertyChanged("ServiceOperationParameter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string XPath {
            get {
                return this.xPathField;
            }
            set {
                this.xPathField = value;
                this.RaisePropertyChanged("XPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string XmlLine {
            get {
                return this.xmlLineField;
            }
            set {
                this.xmlLineField = value;
                this.RaisePropertyChanged("XmlLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=9)]
        public string XmlPosition {
            get {
                return this.xmlPositionField;
            }
            set {
                this.xmlPositionField = value;
                this.RaisePropertyChanged("XmlPosition");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    public partial class FaultMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public partial class InfologMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private InfologMessageType infologMessageTypeField;
        
        private bool infologMessageTypeFieldSpecified;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public InfologMessageType InfologMessageType {
            get {
                return this.infologMessageTypeField;
            }
            set {
                this.infologMessageTypeField = value;
                this.RaisePropertyChanged("InfologMessageType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InfologMessageTypeSpecified {
            get {
                return this.infologMessageTypeFieldSpecified;
            }
            set {
                this.infologMessageTypeFieldSpecified = value;
                this.RaisePropertyChanged("InfologMessageTypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public enum InfologMessageType {
        
        /// <remarks/>
        Info,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MzkValidateUserContract))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MzkServiceSchdTasksContract))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MzkServiceDetailsContract))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MzkLocationTypeContract))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MzkAccountContract))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    public partial class XppObjectBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkValidateUserContract : XppObjectBase {
        
        private string parmCompanyField;
        
        private string parmCompanyNameField;
        
        private string parmUserIDField;
        
        private string parmUserNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string parmCompany {
            get {
                return this.parmCompanyField;
            }
            set {
                this.parmCompanyField = value;
                this.RaisePropertyChanged("parmCompany");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string parmCompanyName {
            get {
                return this.parmCompanyNameField;
            }
            set {
                this.parmCompanyNameField = value;
                this.RaisePropertyChanged("parmCompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string parmUserID {
            get {
                return this.parmUserIDField;
            }
            set {
                this.parmUserIDField = value;
                this.RaisePropertyChanged("parmUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string parmUserName {
            get {
                return this.parmUserNameField;
            }
            set {
                this.parmUserNameField = value;
                this.RaisePropertyChanged("parmUserName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkServiceSchdTasksContract : XppObjectBase {
        
        private string parmCaseCategoryField;
        
        private string parmCaseIDField;
        
        private long parmCaseServiceRecIDField;
        
        private bool parmCaseServiceRecIDFieldSpecified;
        
        private string parmCustAddressField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        private string parmDriverFirstNameField;
        
        private string parmDriverLastNameField;
        
        private string parmDriverPhoneField;
        
        private EEPActionStep parmEEPActionStepField;
        
        private bool parmEEPActionStepFieldSpecified;
        
        private string parmMakeField;
        
        private string parmModelField;
        
        private string parmRegistrationNumField;
        
        private long parmServiceRecIDField;
        
        private bool parmServiceRecIDFieldSpecified;
        
        private string parmStatusField;
        
        private System.DateTime parmStatusDueDateField;
        
        private bool parmStatusDueDateFieldSpecified;
        
        private string parmUserIDField;
        
        private string parmVehicleDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string parmCaseCategory {
            get {
                return this.parmCaseCategoryField;
            }
            set {
                this.parmCaseCategoryField = value;
                this.RaisePropertyChanged("parmCaseCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string parmCaseID {
            get {
                return this.parmCaseIDField;
            }
            set {
                this.parmCaseIDField = value;
                this.RaisePropertyChanged("parmCaseID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long parmCaseServiceRecID {
            get {
                return this.parmCaseServiceRecIDField;
            }
            set {
                this.parmCaseServiceRecIDField = value;
                this.RaisePropertyChanged("parmCaseServiceRecID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmCaseServiceRecIDSpecified {
            get {
                return this.parmCaseServiceRecIDFieldSpecified;
            }
            set {
                this.parmCaseServiceRecIDFieldSpecified = value;
                this.RaisePropertyChanged("parmCaseServiceRecIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                this.parmCustAddressField = value;
                this.RaisePropertyChanged("parmCustAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                this.parmCustNameField = value;
                this.RaisePropertyChanged("parmCustName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                this.parmCustPhoneField = value;
                this.RaisePropertyChanged("parmCustPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public string parmDriverFirstName {
            get {
                return this.parmDriverFirstNameField;
            }
            set {
                this.parmDriverFirstNameField = value;
                this.RaisePropertyChanged("parmDriverFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public string parmDriverLastName {
            get {
                return this.parmDriverLastNameField;
            }
            set {
                this.parmDriverLastNameField = value;
                this.RaisePropertyChanged("parmDriverLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public string parmDriverPhone {
            get {
                return this.parmDriverPhoneField;
            }
            set {
                this.parmDriverPhoneField = value;
                this.RaisePropertyChanged("parmDriverPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public EEPActionStep parmEEPActionStep {
            get {
                return this.parmEEPActionStepField;
            }
            set {
                this.parmEEPActionStepField = value;
                this.RaisePropertyChanged("parmEEPActionStep");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmEEPActionStepSpecified {
            get {
                return this.parmEEPActionStepFieldSpecified;
            }
            set {
                this.parmEEPActionStepFieldSpecified = value;
                this.RaisePropertyChanged("parmEEPActionStepSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                this.parmMakeField = value;
                this.RaisePropertyChanged("parmMake");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public string parmModel {
            get {
                return this.parmModelField;
            }
            set {
                this.parmModelField = value;
                this.RaisePropertyChanged("parmModel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public string parmRegistrationNum {
            get {
                return this.parmRegistrationNumField;
            }
            set {
                this.parmRegistrationNumField = value;
                this.RaisePropertyChanged("parmRegistrationNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public long parmServiceRecID {
            get {
                return this.parmServiceRecIDField;
            }
            set {
                this.parmServiceRecIDField = value;
                this.RaisePropertyChanged("parmServiceRecID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmServiceRecIDSpecified {
            get {
                return this.parmServiceRecIDFieldSpecified;
            }
            set {
                this.parmServiceRecIDFieldSpecified = value;
                this.RaisePropertyChanged("parmServiceRecIDSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public string parmStatus {
            get {
                return this.parmStatusField;
            }
            set {
                this.parmStatusField = value;
                this.RaisePropertyChanged("parmStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public System.DateTime parmStatusDueDate {
            get {
                return this.parmStatusDueDateField;
            }
            set {
                this.parmStatusDueDateField = value;
                this.RaisePropertyChanged("parmStatusDueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmStatusDueDateSpecified {
            get {
                return this.parmStatusDueDateFieldSpecified;
            }
            set {
                this.parmStatusDueDateFieldSpecified = value;
                this.RaisePropertyChanged("parmStatusDueDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=16)]
        public string parmUserID {
            get {
                return this.parmUserIDField;
            }
            set {
                this.parmUserIDField = value;
                this.RaisePropertyChanged("parmUserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=17)]
        public string parmVehicleDescription {
            get {
                return this.parmVehicleDescriptionField;
            }
            set {
                this.parmVehicleDescriptionField = value;
                this.RaisePropertyChanged("parmVehicleDescription");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum EEPActionStep {
        
        /// <remarks/>
        ProcessNone,
        
        /// <remarks/>
        ProcessCBL,
        
        /// <remarks/>
        ProcessLicenseReg,
        
        /// <remarks/>
        GenQuery,
        
        /// <remarks/>
        ServiceSchedulling,
        
        /// <remarks/>
        ProcessEPStep1,
        
        /// <remarks/>
        ProcessEPStep2,
        
        /// <remarks/>
        ProcessEPStep3,
        
        /// <remarks/>
        JobCardDetails,
        
        /// <remarks/>
        WorkComplete,
        
        /// <remarks/>
        MaintenceServiceSheduling,
        
        /// <remarks/>
        SelectSupplier,
        
        /// <remarks/>
        ConfirmDriver,
        
        /// <remarks/>
        CTermQuoteStep1,
        
        /// <remarks/>
        CTermQuoteStep2,
        
        /// <remarks/>
        CTermQuoteStep3,
        
        /// <remarks/>
        DupFuelCard,
        
        /// <remarks/>
        DupFuelCardAddress,
        
        /// <remarks/>
        Procurment,
        
        /// <remarks/>
        Procurment_AccRej,
        
        /// <remarks/>
        AwaitInspectionDetail,
        
        /// <remarks/>
        AwaitInspectionConfirmation,
        
        /// <remarks/>
        AwaitInspectionDataCapture,
        
        /// <remarks/>
        AwaitInspectionAcceptance,
        
        /// <remarks/>
        AwaitDamageConfirmation,
        
        /// <remarks/>
        AwaitServiceDetail,
        
        /// <remarks/>
        AwaitSupplierSelection,
        
        /// <remarks/>
        AwaitServiceConfirmation,
        
        /// <remarks/>
        AwaitJobCardCapture,
        
        /// <remarks/>
        AwaitCollectionDetail,
        
        /// <remarks/>
        AwaitVendorSelection,
        
        /// <remarks/>
        AwaitCollectionConfirmation,
        
        /// <remarks/>
        AwaitCollectionDataCapture,
        
        /// <remarks/>
        ProvideCollectionDetails,
        
        /// <remarks/>
        SelectThirdPartyCollection,
        
        /// <remarks/>
        ConfirmVehicleCollection,
        
        /// <remarks/>
        CaptureInspectionData,
        
        /// <remarks/>
        CustomerApprovals,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkServiceDetailsContract : XppObjectBase {
        
        private string parmAdditionalWorkField;
        
        private string parmAddressField;
        
        private string parmContactPersonNameField;
        
        private string parmContactPersonPhoneField;
        
        private string parmEventDescField;
        
        private string parmLocationTypeField;
        
        private decimal parmODOReadingField;
        
        private bool parmODOReadingFieldSpecified;
        
        private System.DateTime parmODOReadingDateField;
        
        private bool parmODOReadingDateFieldSpecified;
        
        private System.DateTime parmPreferredDateFirstOptionField;
        
        private bool parmPreferredDateFirstOptionFieldSpecified;
        
        private System.DateTime parmPreferredDateSecondOptionField;
        
        private bool parmPreferredDateSecondOptionFieldSpecified;
        
        private string parmServiceTypeField;
        
        private string parmSupplierNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string parmAdditionalWork {
            get {
                return this.parmAdditionalWorkField;
            }
            set {
                this.parmAdditionalWorkField = value;
                this.RaisePropertyChanged("parmAdditionalWork");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string parmAddress {
            get {
                return this.parmAddressField;
            }
            set {
                this.parmAddressField = value;
                this.RaisePropertyChanged("parmAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string parmContactPersonName {
            get {
                return this.parmContactPersonNameField;
            }
            set {
                this.parmContactPersonNameField = value;
                this.RaisePropertyChanged("parmContactPersonName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string parmContactPersonPhone {
            get {
                return this.parmContactPersonPhoneField;
            }
            set {
                this.parmContactPersonPhoneField = value;
                this.RaisePropertyChanged("parmContactPersonPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string parmEventDesc {
            get {
                return this.parmEventDescField;
            }
            set {
                this.parmEventDescField = value;
                this.RaisePropertyChanged("parmEventDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string parmLocationType {
            get {
                return this.parmLocationTypeField;
            }
            set {
                this.parmLocationTypeField = value;
                this.RaisePropertyChanged("parmLocationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public decimal parmODOReading {
            get {
                return this.parmODOReadingField;
            }
            set {
                this.parmODOReadingField = value;
                this.RaisePropertyChanged("parmODOReading");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmODOReadingSpecified {
            get {
                return this.parmODOReadingFieldSpecified;
            }
            set {
                this.parmODOReadingFieldSpecified = value;
                this.RaisePropertyChanged("parmODOReadingSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime parmODOReadingDate {
            get {
                return this.parmODOReadingDateField;
            }
            set {
                this.parmODOReadingDateField = value;
                this.RaisePropertyChanged("parmODOReadingDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmODOReadingDateSpecified {
            get {
                return this.parmODOReadingDateFieldSpecified;
            }
            set {
                this.parmODOReadingDateFieldSpecified = value;
                this.RaisePropertyChanged("parmODOReadingDateSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime parmPreferredDateFirstOption {
            get {
                return this.parmPreferredDateFirstOptionField;
            }
            set {
                this.parmPreferredDateFirstOptionField = value;
                this.RaisePropertyChanged("parmPreferredDateFirstOption");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmPreferredDateFirstOptionSpecified {
            get {
                return this.parmPreferredDateFirstOptionFieldSpecified;
            }
            set {
                this.parmPreferredDateFirstOptionFieldSpecified = value;
                this.RaisePropertyChanged("parmPreferredDateFirstOptionSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public System.DateTime parmPreferredDateSecondOption {
            get {
                return this.parmPreferredDateSecondOptionField;
            }
            set {
                this.parmPreferredDateSecondOptionField = value;
                this.RaisePropertyChanged("parmPreferredDateSecondOption");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmPreferredDateSecondOptionSpecified {
            get {
                return this.parmPreferredDateSecondOptionFieldSpecified;
            }
            set {
                this.parmPreferredDateSecondOptionFieldSpecified = value;
                this.RaisePropertyChanged("parmPreferredDateSecondOptionSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public string parmServiceType {
            get {
                return this.parmServiceTypeField;
            }
            set {
                this.parmServiceTypeField = value;
                this.RaisePropertyChanged("parmServiceType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=11)]
        public string parmSupplierName {
            get {
                return this.parmSupplierNameField;
            }
            set {
                this.parmSupplierNameField = value;
                this.RaisePropertyChanged("parmSupplierName");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkLocationTypeContract : XppObjectBase {
        
        private string parmLocationNameField;
        
        private EXDCaseServiceDestinationType parmLocationTypeField;
        
        private bool parmLocationTypeFieldSpecified;
        
        private long parmRecIDField;
        
        private bool parmRecIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string parmLocationName {
            get {
                return this.parmLocationNameField;
            }
            set {
                this.parmLocationNameField = value;
                this.RaisePropertyChanged("parmLocationName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public EXDCaseServiceDestinationType parmLocationType {
            get {
                return this.parmLocationTypeField;
            }
            set {
                this.parmLocationTypeField = value;
                this.RaisePropertyChanged("parmLocationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmLocationTypeSpecified {
            get {
                return this.parmLocationTypeFieldSpecified;
            }
            set {
                this.parmLocationTypeFieldSpecified = value;
                this.RaisePropertyChanged("parmLocationTypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                this.parmRecIDField = value;
                this.RaisePropertyChanged("parmRecID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmRecIDSpecified {
            get {
                return this.parmRecIDFieldSpecified;
            }
            set {
                this.parmRecIDFieldSpecified = value;
                this.RaisePropertyChanged("parmRecIDSpecified");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum EXDCaseServiceDestinationType {
        
        /// <remarks/>
        Vendor,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        Driver,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        CustomerSpecific,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public partial class MzkAccountContract : XppObjectBase {
        
        private string parmAccountNumField;
        
        private string parmNameField;
        
        private long parmRecIDField;
        
        private bool parmRecIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string parmAccountNum {
            get {
                return this.parmAccountNumField;
            }
            set {
                this.parmAccountNumField = value;
                this.RaisePropertyChanged("parmAccountNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string parmName {
            get {
                return this.parmNameField;
            }
            set {
                this.parmNameField = value;
                this.RaisePropertyChanged("parmName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                this.parmRecIDField = value;
                this.RaisePropertyChanged("parmRecID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool parmRecIDSpecified {
            get {
                return this.parmRecIDFieldSpecified;
            }
            set {
                this.parmRecIDFieldSpecified = value;
                this.RaisePropertyChanged("parmRecIDSpecified");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", ConfigurationName="SSProxy.IRequestReplyRouter")]
    public interface IRequestReplyRouter {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRequestReplyRouterChannel : Eqstra.ServiceScheduling.UILogic.SSProxy.IRequestReplyRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RequestReplyRouterClient : System.ServiceModel.ClientBase<Eqstra.ServiceScheduling.UILogic.SSProxy.IRequestReplyRouter>, Eqstra.ServiceScheduling.UILogic.SSProxy.IRequestReplyRouter {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestReplyRouterClient() : 
                base(RequestReplyRouterClient.GetDefaultBinding(), RequestReplyRouterClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.reqReplyEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), RequestReplyRouterClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/ServiceSchedulingServic" +
                        "e/xppservice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RequestReplyRouterClient.GetBindingForEndpoint(EndpointConfiguration.reqReplyEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RequestReplyRouterClient.GetEndpointAddress(EndpointConfiguration.reqReplyEndpoint);
        }
        
        public enum EndpointConfiguration {
            
            reqReplyEndpoint,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="SSProxy.MzkServiceSchedulingService")]
    public interface MzkServiceSchedulingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getTasks", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getTasksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getTasksAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksResponse> getTasksAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getServiceDetails", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getServiceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getServiceDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsResponse> getServiceDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getServiceTypes", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getServiceTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getServiceTypesAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesResponse> getServiceTypesAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getLocationType", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getLocationTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getLocationTypeAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeResponse> getLocationTypeAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getTasks_Modified", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getTasks_ModifiedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getTasks_ModifiedAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedResponse> getTasks_ModifiedAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/validateUser", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/validateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/validateUserAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserResponse> validateUserAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/insertCustomerAddress", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/insertCustomerAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/insertCustomerAddressAifFaultFault" +
            "", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressResponse> insertCustomerAddressAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/updateStatusList", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/updateStatusListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/updateStatusListAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListResponse> updateStatusListAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/insertDriverAddress", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/insertDriverAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/insertDriverAddressAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressResponse> insertDriverAddressAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/updateConfirmationDates", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/updateConfirmationDatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/updateConfirmationDatesAifFaultFau" +
            "lt", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesResponse> updateConfirmationDatesAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/insertServiceDetails", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/insertServiceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/insertServiceDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsResponse> insertServiceDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getTasksOptimize", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getTasksOptimizeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getTasksOptimizeAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeResponse> getTasksOptimizeAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getCustomers", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getCustomersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getCustomersAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersResponse> getCustomersAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkServiceSchedulingService/getODOReadingDetails", ReplyAction="http://tempuri.org/MzkServiceSchedulingService/getODOReadingDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.ServiceScheduling.UILogic.SSProxy.AifFault), Action="http://tempuri.org/MzkServiceSchedulingService/getODOReadingDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(XppObjectBase))]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsResponse> getODOReadingDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasksRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetTasksRequest() {
        }
        
        public MzkServiceSchedulingServiceGetTasksRequest(string _userID, string _company) {
            this._userID = _userID;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasksResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response;
        
        public MzkServiceSchedulingServiceGetTasksResponse() {
        }
        
        public MzkServiceSchedulingServiceGetTasksResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetServiceDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetServiceDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public long _caseServiceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetServiceDetailsRequest() {
        }
        
        public MzkServiceSchedulingServiceGetServiceDetailsRequest(string _caseId, long _caseServiceRecId, string _company) {
            this._caseId = _caseId;
            this._caseServiceRecId = _caseServiceRecId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetServiceDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetServiceDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract[] response;
        
        public MzkServiceSchedulingServiceGetServiceDetailsResponse() {
        }
        
        public MzkServiceSchedulingServiceGetServiceDetailsResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetServiceTypesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetServiceTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetServiceTypesRequest() {
        }
        
        public MzkServiceSchedulingServiceGetServiceTypesRequest(string _caseId, string _company) {
            this._caseId = _caseId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetServiceTypesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetServiceTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string response;
        
        public MzkServiceSchedulingServiceGetServiceTypesResponse() {
        }
        
        public MzkServiceSchedulingServiceGetServiceTypesResponse(string response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetLocationTypeRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetLocationTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _serviceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetLocationTypeRequest() {
        }
        
        public MzkServiceSchedulingServiceGetLocationTypeRequest(long _serviceRecId, string _company) {
            this._serviceRecId = _serviceRecId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetLocationTypeResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetLocationTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkLocationTypeContract[] response;
        
        public MzkServiceSchedulingServiceGetLocationTypeResponse() {
        }
        
        public MzkServiceSchedulingServiceGetLocationTypeResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkLocationTypeContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasks_ModifiedRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasks_ModifiedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetTasks_ModifiedRequest() {
        }
        
        public MzkServiceSchedulingServiceGetTasks_ModifiedRequest(string _userID, string _company) {
            this._userID = _userID;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasks_ModifiedResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasks_ModifiedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response;
        
        public MzkServiceSchedulingServiceGetTasks_ModifiedResponse() {
        }
        
        public MzkServiceSchedulingServiceGetTasks_ModifiedResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceValidateUserRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceValidateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _password;
        
        public MzkServiceSchedulingServiceValidateUserRequest() {
        }
        
        public MzkServiceSchedulingServiceValidateUserRequest(string _userID, string _password) {
            this._userID = _userID;
            this._password = _password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceValidateUserResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceValidateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkValidateUserContract response;
        
        public MzkServiceSchedulingServiceValidateUserResponse() {
        }
        
        public MzkServiceSchedulingServiceValidateUserResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkValidateUserContract response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertCustomerAddressRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertCustomerAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _custTableRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public long _caseServiceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceInsertCustomerAddressRequest() {
        }
        
        public MzkServiceSchedulingServiceInsertCustomerAddressRequest(long _custTableRecId, long _caseServiceRecId, string _company) {
            this._custTableRecId = _custTableRecId;
            this._caseServiceRecId = _caseServiceRecId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertCustomerAddressResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertCustomerAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.ArrayOfXElement response;
        
        public MzkServiceSchedulingServiceInsertCustomerAddressResponse() {
        }
        
        public MzkServiceSchedulingServiceInsertCustomerAddressResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.ArrayOfXElement response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceUpdateStatusListRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceUpdateStatusListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] _lstTasks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceUpdateStatusListRequest() {
        }
        
        public MzkServiceSchedulingServiceUpdateStatusListRequest(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] _lstTasks, string _company) {
            this._lstTasks = _lstTasks;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceUpdateStatusListResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceUpdateStatusListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response;
        
        public MzkServiceSchedulingServiceUpdateStatusListResponse() {
        }
        
        public MzkServiceSchedulingServiceUpdateStatusListResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertDriverAddressRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertDriverAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _driverTableRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public long _caseServiceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceInsertDriverAddressRequest() {
        }
        
        public MzkServiceSchedulingServiceInsertDriverAddressRequest(long _driverTableRecId, long _caseServiceRecId, string _company) {
            this._driverTableRecId = _driverTableRecId;
            this._caseServiceRecId = _caseServiceRecId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertDriverAddressResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertDriverAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.ArrayOfXElement response;
        
        public MzkServiceSchedulingServiceInsertDriverAddressResponse() {
        }
        
        public MzkServiceSchedulingServiceInsertDriverAddressResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.ArrayOfXElement response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceUpdateConfirmationDatesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceUpdateConfirmationDatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _caseServiceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceUpdateConfirmationDatesRequest() {
        }
        
        public MzkServiceSchedulingServiceUpdateConfirmationDatesRequest(long _caseServiceRecId, Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract, string _company) {
            this._caseServiceRecId = _caseServiceRecId;
            this.contract = contract;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceUpdateConfirmationDatesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceUpdateConfirmationDatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public bool response;
        
        public MzkServiceSchedulingServiceUpdateConfirmationDatesResponse() {
        }
        
        public MzkServiceSchedulingServiceUpdateConfirmationDatesResponse(bool response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertServiceDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertServiceDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public long _caseServiceRecId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceInsertServiceDetailsRequest() {
        }
        
        public MzkServiceSchedulingServiceInsertServiceDetailsRequest(string _caseId, long _caseServiceRecId, Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract, string _company) {
            this._caseId = _caseId;
            this._caseServiceRecId = _caseServiceRecId;
            this.contract = contract;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceInsertServiceDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceInsertServiceDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public bool response;
        
        public MzkServiceSchedulingServiceInsertServiceDetailsResponse() {
        }
        
        public MzkServiceSchedulingServiceInsertServiceDetailsResponse(bool response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasksOptimizeRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasksOptimizeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetTasksOptimizeRequest() {
        }
        
        public MzkServiceSchedulingServiceGetTasksOptimizeRequest(string _userID, string _company) {
            this._userID = _userID;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetTasksOptimizeResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetTasksOptimizeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response;
        
        public MzkServiceSchedulingServiceGetTasksOptimizeResponse() {
        }
        
        public MzkServiceSchedulingServiceGetTasksOptimizeResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetCustomersRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetCustomersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetCustomersRequest() {
        }
        
        public MzkServiceSchedulingServiceGetCustomersRequest(string _company) {
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetCustomersResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetCustomersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkAccountContract[] response;
        
        public MzkServiceSchedulingServiceGetCustomersResponse() {
        }
        
        public MzkServiceSchedulingServiceGetCustomersResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkAccountContract[] response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetODOReadingDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetODOReadingDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string _company;
        
        public MzkServiceSchedulingServiceGetODOReadingDetailsRequest() {
        }
        
        public MzkServiceSchedulingServiceGetODOReadingDetailsRequest(string _caseId, string _company) {
            this._caseId = _caseId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkServiceSchedulingServiceGetODOReadingDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    public partial class MzkServiceSchedulingServiceGetODOReadingDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
        public Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract[] response;
        
        public MzkServiceSchedulingServiceGetODOReadingDetailsResponse() {
        }
        
        public MzkServiceSchedulingServiceGetODOReadingDetailsResponse(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract[] response) {
            this.response = response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MzkServiceSchedulingServiceChannel : Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MzkServiceSchedulingServiceClient : System.ServiceModel.ClientBase<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService>, Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MzkServiceSchedulingServiceClient() : 
                base(MzkServiceSchedulingServiceClient.GetDefaultBinding(), MzkServiceSchedulingServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_MzkServiceSchedulingService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkServiceSchedulingServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MzkServiceSchedulingServiceClient.GetBindingForEndpoint(endpointConfiguration), MzkServiceSchedulingServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkServiceSchedulingServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MzkServiceSchedulingServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkServiceSchedulingServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MzkServiceSchedulingServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkServiceSchedulingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getTasksAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksRequest request) {
            return base.Channel.getTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksResponse> getTasksAsync(string _userID, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksRequest();
            inValue._userID = _userID;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getServiceDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsRequest request) {
            return base.Channel.getServiceDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsResponse> getServiceDetailsAsync(string _caseId, long _caseServiceRecId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceDetailsRequest();
            inValue._caseId = _caseId;
            inValue._caseServiceRecId = _caseServiceRecId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getServiceDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getServiceTypesAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesRequest request) {
            return base.Channel.getServiceTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesResponse> getServiceTypesAsync(string _caseId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetServiceTypesRequest();
            inValue._caseId = _caseId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getServiceTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getLocationTypeAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeRequest request) {
            return base.Channel.getLocationTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeResponse> getLocationTypeAsync(long _serviceRecId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetLocationTypeRequest();
            inValue._serviceRecId = _serviceRecId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getLocationTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getTasks_ModifiedAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedRequest request) {
            return base.Channel.getTasks_ModifiedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedResponse> getTasks_ModifiedAsync(string _userID, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasks_ModifiedRequest();
            inValue._userID = _userID;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getTasks_ModifiedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.validateUserAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserRequest request) {
            return base.Channel.validateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserResponse> validateUserAsync(string _userID, string _password) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceValidateUserRequest();
            inValue._userID = _userID;
            inValue._password = _password;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).validateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.insertCustomerAddressAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressRequest request) {
            return base.Channel.insertCustomerAddressAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressResponse> insertCustomerAddressAsync(long _custTableRecId, long _caseServiceRecId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertCustomerAddressRequest();
            inValue._custTableRecId = _custTableRecId;
            inValue._caseServiceRecId = _caseServiceRecId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).insertCustomerAddressAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.updateStatusListAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListRequest request) {
            return base.Channel.updateStatusListAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListResponse> updateStatusListAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchdTasksContract[] _lstTasks, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateStatusListRequest();
            inValue._lstTasks = _lstTasks;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).updateStatusListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.insertDriverAddressAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressRequest request) {
            return base.Channel.insertDriverAddressAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressResponse> insertDriverAddressAsync(long _driverTableRecId, long _caseServiceRecId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertDriverAddressRequest();
            inValue._driverTableRecId = _driverTableRecId;
            inValue._caseServiceRecId = _caseServiceRecId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).insertDriverAddressAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.updateConfirmationDatesAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesRequest request) {
            return base.Channel.updateConfirmationDatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesResponse> updateConfirmationDatesAsync(long _caseServiceRecId, Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceUpdateConfirmationDatesRequest();
            inValue._caseServiceRecId = _caseServiceRecId;
            inValue.contract = contract;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).updateConfirmationDatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.insertServiceDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsRequest request) {
            return base.Channel.insertServiceDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsResponse> insertServiceDetailsAsync(string _caseId, long _caseServiceRecId, Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceDetailsContract contract, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceInsertServiceDetailsRequest();
            inValue._caseId = _caseId;
            inValue._caseServiceRecId = _caseServiceRecId;
            inValue.contract = contract;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).insertServiceDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getTasksOptimizeAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeRequest request) {
            return base.Channel.getTasksOptimizeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeResponse> getTasksOptimizeAsync(string _userID, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetTasksOptimizeRequest();
            inValue._userID = _userID;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getTasksOptimizeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getCustomersAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersRequest request) {
            return base.Channel.getCustomersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersResponse> getCustomersAsync(string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetCustomersRequest();
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getCustomersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsResponse> Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService.getODOReadingDetailsAsync(Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsRequest request) {
            return base.Channel.getODOReadingDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsResponse> getODOReadingDetailsAsync(string _caseId, string _company) {
            Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsRequest inValue = new Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingServiceGetODOReadingDetailsRequest();
            inValue._caseId = _caseId;
            inValue._company = _company;
            return ((Eqstra.ServiceScheduling.UILogic.SSProxy.MzkServiceSchedulingService)(this)).getODOReadingDetailsAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkServiceSchedulingService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkServiceSchedulingService)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/ServiceSchedulingServic" +
                        "e/xppservice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MzkServiceSchedulingServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_MzkServiceSchedulingService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MzkServiceSchedulingServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_MzkServiceSchedulingService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_MzkServiceSchedulingService,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.ServiceReference.Platforms", "12.0.0.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement() {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes {
            get {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema() {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer) {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            ) {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader) {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            ) {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element)) {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else {
                    reader.Skip();
                }
            }
        }
    }
}
