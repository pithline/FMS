//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Eqstra.VehicleInspection.BackgroundTask.VIProxy {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    internal partial class CallContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyField;
        
        private string LanguageField;
        
        private string LogonAsUserField;
        
        private string MessageIdField;
        
        private System.Collections.Generic.Dictionary<string, string> PropertyBagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LogonAsUser {
            get {
                return this.LogonAsUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonAsUserField, value) != true)) {
                    this.LogonAsUserField = value;
                    this.RaisePropertyChanged("LogonAsUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.Generic.Dictionary<string, string> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiTrailorChassisBodyContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiTrailorChassisBodyContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmABSActivatorField;
        
        private string parmChassisCommentsField;
        
        private string parmChevronCommentsField;
        
        private string parmFictionPlatesField;
        
        private string parmFloorCommentsField;
        
        private string parmHeadBoardCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedABSActivatorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChassisField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChevronField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFictionPlatesField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFloorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadBoardField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedKingpinField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLandingLegsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelFrontField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelLeftField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRearField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRightField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareWheelCarrierField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSuzieFitmentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedUnderRunBumperField;
        
        private string parmKingpinField;
        
        private string parmLandingLegsCommentsField;
        
        private string parmPanelFrontCommentsField;
        
        private string parmPanelLeftCommentsField;
        
        private string parmPanelRearCommentsField;
        
        private string parmPanelRightCommentsField;
        
        private long parmRecIDField;
        
        private string parmSpareWheelCarrierCommentsField;
        
        private string parmSuzieFitmentsField;
        
        private int parmTableIdField;
        
        private string parmUnderRunBumperCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmABSActivator {
            get {
                return this.parmABSActivatorField;
            }
            set {
                if ((object.ReferenceEquals(this.parmABSActivatorField, value) != true)) {
                    this.parmABSActivatorField = value;
                    this.RaisePropertyChanged("parmABSActivator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmChassisComments {
            get {
                return this.parmChassisCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmChassisCommentsField, value) != true)) {
                    this.parmChassisCommentsField = value;
                    this.RaisePropertyChanged("parmChassisComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmChevronComments {
            get {
                return this.parmChevronCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmChevronCommentsField, value) != true)) {
                    this.parmChevronCommentsField = value;
                    this.RaisePropertyChanged("parmChevronComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFictionPlates {
            get {
                return this.parmFictionPlatesField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFictionPlatesField, value) != true)) {
                    this.parmFictionPlatesField = value;
                    this.RaisePropertyChanged("parmFictionPlates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFloorComments {
            get {
                return this.parmFloorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFloorCommentsField, value) != true)) {
                    this.parmFloorCommentsField = value;
                    this.RaisePropertyChanged("parmFloorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHeadBoardComments {
            get {
                return this.parmHeadBoardCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHeadBoardCommentsField, value) != true)) {
                    this.parmHeadBoardCommentsField = value;
                    this.RaisePropertyChanged("parmHeadBoardComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedABSActivator {
            get {
                return this.parmIsDamagedABSActivatorField;
            }
            set {
                if ((this.parmIsDamagedABSActivatorField.Equals(value) != true)) {
                    this.parmIsDamagedABSActivatorField = value;
                    this.RaisePropertyChanged("parmIsDamagedABSActivator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChassis {
            get {
                return this.parmIsDamagedChassisField;
            }
            set {
                if ((this.parmIsDamagedChassisField.Equals(value) != true)) {
                    this.parmIsDamagedChassisField = value;
                    this.RaisePropertyChanged("parmIsDamagedChassis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChevron {
            get {
                return this.parmIsDamagedChevronField;
            }
            set {
                if ((this.parmIsDamagedChevronField.Equals(value) != true)) {
                    this.parmIsDamagedChevronField = value;
                    this.RaisePropertyChanged("parmIsDamagedChevron");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFictionPlates {
            get {
                return this.parmIsDamagedFictionPlatesField;
            }
            set {
                if ((this.parmIsDamagedFictionPlatesField.Equals(value) != true)) {
                    this.parmIsDamagedFictionPlatesField = value;
                    this.RaisePropertyChanged("parmIsDamagedFictionPlates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFloor {
            get {
                return this.parmIsDamagedFloorField;
            }
            set {
                if ((this.parmIsDamagedFloorField.Equals(value) != true)) {
                    this.parmIsDamagedFloorField = value;
                    this.RaisePropertyChanged("parmIsDamagedFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadBoard {
            get {
                return this.parmIsDamagedHeadBoardField;
            }
            set {
                if ((this.parmIsDamagedHeadBoardField.Equals(value) != true)) {
                    this.parmIsDamagedHeadBoardField = value;
                    this.RaisePropertyChanged("parmIsDamagedHeadBoard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedKingpin {
            get {
                return this.parmIsDamagedKingpinField;
            }
            set {
                if ((this.parmIsDamagedKingpinField.Equals(value) != true)) {
                    this.parmIsDamagedKingpinField = value;
                    this.RaisePropertyChanged("parmIsDamagedKingpin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLandingLegs {
            get {
                return this.parmIsDamagedLandingLegsField;
            }
            set {
                if ((this.parmIsDamagedLandingLegsField.Equals(value) != true)) {
                    this.parmIsDamagedLandingLegsField = value;
                    this.RaisePropertyChanged("parmIsDamagedLandingLegs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelFront {
            get {
                return this.parmIsDamagedPanelFrontField;
            }
            set {
                if ((this.parmIsDamagedPanelFrontField.Equals(value) != true)) {
                    this.parmIsDamagedPanelFrontField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelFront");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelLeft {
            get {
                return this.parmIsDamagedPanelLeftField;
            }
            set {
                if ((this.parmIsDamagedPanelLeftField.Equals(value) != true)) {
                    this.parmIsDamagedPanelLeftField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRear {
            get {
                return this.parmIsDamagedPanelRearField;
            }
            set {
                if ((this.parmIsDamagedPanelRearField.Equals(value) != true)) {
                    this.parmIsDamagedPanelRearField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelRear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRight {
            get {
                return this.parmIsDamagedPanelRightField;
            }
            set {
                if ((this.parmIsDamagedPanelRightField.Equals(value) != true)) {
                    this.parmIsDamagedPanelRightField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareWheelCarrier {
            get {
                return this.parmIsDamagedSpareWheelCarrierField;
            }
            set {
                if ((this.parmIsDamagedSpareWheelCarrierField.Equals(value) != true)) {
                    this.parmIsDamagedSpareWheelCarrierField = value;
                    this.RaisePropertyChanged("parmIsDamagedSpareWheelCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSuzieFitments {
            get {
                return this.parmIsDamagedSuzieFitmentsField;
            }
            set {
                if ((this.parmIsDamagedSuzieFitmentsField.Equals(value) != true)) {
                    this.parmIsDamagedSuzieFitmentsField = value;
                    this.RaisePropertyChanged("parmIsDamagedSuzieFitments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedUnderRunBumper {
            get {
                return this.parmIsDamagedUnderRunBumperField;
            }
            set {
                if ((this.parmIsDamagedUnderRunBumperField.Equals(value) != true)) {
                    this.parmIsDamagedUnderRunBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedUnderRunBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmKingpin {
            get {
                return this.parmKingpinField;
            }
            set {
                if ((object.ReferenceEquals(this.parmKingpinField, value) != true)) {
                    this.parmKingpinField = value;
                    this.RaisePropertyChanged("parmKingpin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLandingLegsComments {
            get {
                return this.parmLandingLegsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLandingLegsCommentsField, value) != true)) {
                    this.parmLandingLegsCommentsField = value;
                    this.RaisePropertyChanged("parmLandingLegsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelFrontComments {
            get {
                return this.parmPanelFrontCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelFrontCommentsField, value) != true)) {
                    this.parmPanelFrontCommentsField = value;
                    this.RaisePropertyChanged("parmPanelFrontComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelLeftComments {
            get {
                return this.parmPanelLeftCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelLeftCommentsField, value) != true)) {
                    this.parmPanelLeftCommentsField = value;
                    this.RaisePropertyChanged("parmPanelLeftComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelRearComments {
            get {
                return this.parmPanelRearCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelRearCommentsField, value) != true)) {
                    this.parmPanelRearCommentsField = value;
                    this.RaisePropertyChanged("parmPanelRearComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelRightComments {
            get {
                return this.parmPanelRightCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelRightCommentsField, value) != true)) {
                    this.parmPanelRightCommentsField = value;
                    this.RaisePropertyChanged("parmPanelRightComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareWheelCarrierComments {
            get {
                return this.parmSpareWheelCarrierCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareWheelCarrierCommentsField, value) != true)) {
                    this.parmSpareWheelCarrierCommentsField = value;
                    this.RaisePropertyChanged("parmSpareWheelCarrierComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSuzieFitments {
            get {
                return this.parmSuzieFitmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSuzieFitmentsField, value) != true)) {
                    this.parmSuzieFitmentsField = value;
                    this.RaisePropertyChanged("parmSuzieFitments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUnderRunBumperComments {
            get {
                return this.parmUnderRunBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUnderRunBumperCommentsField, value) != true)) {
                    this.parmUnderRunBumperCommentsField = value;
                    this.RaisePropertyChanged("parmUnderRunBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.Mzk_ImageContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkCustAddressContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkInspectionHistoryContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorProofOfInspection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkValidateUserContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract))]
    internal partial class XppObjectBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mzk_ImageContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class Mzk_ImageContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCaseNumberField;
        
        private string parmFileNameField;
        
        private string parmImageField;
        
        private string parmImageDataField;
        
        private string parmImageNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseNumber {
            get {
                return this.parmCaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseNumberField, value) != true)) {
                    this.parmCaseNumberField = value;
                    this.RaisePropertyChanged("parmCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFileName {
            get {
                return this.parmFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFileNameField, value) != true)) {
                    this.parmFileNameField = value;
                    this.RaisePropertyChanged("parmFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmImage {
            get {
                return this.parmImageField;
            }
            set {
                if ((object.ReferenceEquals(this.parmImageField, value) != true)) {
                    this.parmImageField = value;
                    this.RaisePropertyChanged("parmImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmImageData {
            get {
                return this.parmImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.parmImageDataField, value) != true)) {
                    this.parmImageDataField = value;
                    this.RaisePropertyChanged("parmImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmImageName {
            get {
                return this.parmImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmImageNameField, value) != true)) {
                    this.parmImageNameField = value;
                    this.RaisePropertyChanged("parmImageName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCustAddressContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkCustAddressContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCustAddressField;
        
        private string parmCustEmailField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustEmail {
            get {
                return this.parmCustEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustEmailField, value) != true)) {
                    this.parmCustEmailField = value;
                    this.RaisePropertyChanged("parmCustEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkDrivingTimeContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkDrivingTimeContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private System.DateTime parmArrivalTimeField;
        
        private string parmCaseIDField;
        
        private System.DateTime parmStartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmArrivalTime {
            get {
                return this.parmArrivalTimeField;
            }
            set {
                if ((this.parmArrivalTimeField.Equals(value) != true)) {
                    this.parmArrivalTimeField = value;
                    this.RaisePropertyChanged("parmArrivalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseID {
            get {
                return this.parmCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIDField, value) != true)) {
                    this.parmCaseIDField = value;
                    this.RaisePropertyChanged("parmCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmStartTime {
            get {
                return this.parmStartTimeField;
            }
            set {
                if ((this.parmStartTimeField.Equals(value) != true)) {
                    this.parmStartTimeField = value;
                    this.RaisePropertyChanged("parmStartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkInspectionHistoryContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkInspectionHistoryContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private System.DateTime parmConfirmedDueDateField;
        
        private string parmUserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmConfirmedDueDate {
            get {
                return this.parmConfirmedDueDateField;
            }
            set {
                if ((this.parmConfirmedDueDateField.Equals(value) != true)) {
                    this.parmConfirmedDueDateField = value;
                    this.RaisePropertyChanged("parmConfirmedDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUserID {
            get {
                return this.parmUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserIDField, value) != true)) {
                    this.parmUserIDField = value;
                    this.RaisePropertyChanged("parmUserID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiCommercialAccessoriesContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiCommercialAccessoriesContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmBullbarCommentsField;
        
        private string parmEngineProtectionUnitCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasBullbarField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasDecalsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasEngineProtectionUnitField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasJackField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasReflectiveTapeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasServiceBookField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasToolsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTrackingDeviceField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBullbarField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEngineProtectionUnitField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedJackField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectiveTapeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedServicesBookField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSignWritingField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedToolsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTrackingDeviceField;
        
        private string parmJackCommentsField;
        
        private long parmRecIDField;
        
        private string parmReflectiveTapeCommentsField;
        
        private string parmServiceBooksCommentsField;
        
        private string parmSignWritingCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private string parmToolCommentsField;
        
        private string parmTrackingDeviceCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBullbarComments {
            get {
                return this.parmBullbarCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBullbarCommentsField, value) != true)) {
                    this.parmBullbarCommentsField = value;
                    this.RaisePropertyChanged("parmBullbarComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmEngineProtectionUnitComments {
            get {
                return this.parmEngineProtectionUnitCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineProtectionUnitCommentsField, value) != true)) {
                    this.parmEngineProtectionUnitCommentsField = value;
                    this.RaisePropertyChanged("parmEngineProtectionUnitComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasBullbar {
            get {
                return this.parmHasBullbarField;
            }
            set {
                if ((this.parmHasBullbarField.Equals(value) != true)) {
                    this.parmHasBullbarField = value;
                    this.RaisePropertyChanged("parmHasBullbar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasDecals {
            get {
                return this.parmHasDecalsField;
            }
            set {
                if ((this.parmHasDecalsField.Equals(value) != true)) {
                    this.parmHasDecalsField = value;
                    this.RaisePropertyChanged("parmHasDecals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasEngineProtectionUnit {
            get {
                return this.parmHasEngineProtectionUnitField;
            }
            set {
                if ((this.parmHasEngineProtectionUnitField.Equals(value) != true)) {
                    this.parmHasEngineProtectionUnitField = value;
                    this.RaisePropertyChanged("parmHasEngineProtectionUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasJack {
            get {
                return this.parmHasJackField;
            }
            set {
                if ((this.parmHasJackField.Equals(value) != true)) {
                    this.parmHasJackField = value;
                    this.RaisePropertyChanged("parmHasJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasReflectiveTape {
            get {
                return this.parmHasReflectiveTapeField;
            }
            set {
                if ((this.parmHasReflectiveTapeField.Equals(value) != true)) {
                    this.parmHasReflectiveTapeField = value;
                    this.RaisePropertyChanged("parmHasReflectiveTape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasServiceBook {
            get {
                return this.parmHasServiceBookField;
            }
            set {
                if ((this.parmHasServiceBookField.Equals(value) != true)) {
                    this.parmHasServiceBookField = value;
                    this.RaisePropertyChanged("parmHasServiceBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTools {
            get {
                return this.parmHasToolsField;
            }
            set {
                if ((this.parmHasToolsField.Equals(value) != true)) {
                    this.parmHasToolsField = value;
                    this.RaisePropertyChanged("parmHasTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTrackingDevice {
            get {
                return this.parmHasTrackingDeviceField;
            }
            set {
                if ((this.parmHasTrackingDeviceField.Equals(value) != true)) {
                    this.parmHasTrackingDeviceField = value;
                    this.RaisePropertyChanged("parmHasTrackingDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBullbar {
            get {
                return this.parmIsDamagedBullbarField;
            }
            set {
                if ((this.parmIsDamagedBullbarField.Equals(value) != true)) {
                    this.parmIsDamagedBullbarField = value;
                    this.RaisePropertyChanged("parmIsDamagedBullbar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEngineProtectionUnit {
            get {
                return this.parmIsDamagedEngineProtectionUnitField;
            }
            set {
                if ((this.parmIsDamagedEngineProtectionUnitField.Equals(value) != true)) {
                    this.parmIsDamagedEngineProtectionUnitField = value;
                    this.RaisePropertyChanged("parmIsDamagedEngineProtectionUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedJack {
            get {
                return this.parmIsDamagedJackField;
            }
            set {
                if ((this.parmIsDamagedJackField.Equals(value) != true)) {
                    this.parmIsDamagedJackField = value;
                    this.RaisePropertyChanged("parmIsDamagedJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectiveTape {
            get {
                return this.parmIsDamagedReflectiveTapeField;
            }
            set {
                if ((this.parmIsDamagedReflectiveTapeField.Equals(value) != true)) {
                    this.parmIsDamagedReflectiveTapeField = value;
                    this.RaisePropertyChanged("parmIsDamagedReflectiveTape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedServicesBook {
            get {
                return this.parmIsDamagedServicesBookField;
            }
            set {
                if ((this.parmIsDamagedServicesBookField.Equals(value) != true)) {
                    this.parmIsDamagedServicesBookField = value;
                    this.RaisePropertyChanged("parmIsDamagedServicesBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSignWriting {
            get {
                return this.parmIsDamagedSignWritingField;
            }
            set {
                if ((this.parmIsDamagedSignWritingField.Equals(value) != true)) {
                    this.parmIsDamagedSignWritingField = value;
                    this.RaisePropertyChanged("parmIsDamagedSignWriting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTools {
            get {
                return this.parmIsDamagedToolsField;
            }
            set {
                if ((this.parmIsDamagedToolsField.Equals(value) != true)) {
                    this.parmIsDamagedToolsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTrackingDevice {
            get {
                return this.parmIsDamagedTrackingDeviceField;
            }
            set {
                if ((this.parmIsDamagedTrackingDeviceField.Equals(value) != true)) {
                    this.parmIsDamagedTrackingDeviceField = value;
                    this.RaisePropertyChanged("parmIsDamagedTrackingDevice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmJackComments {
            get {
                return this.parmJackCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJackCommentsField, value) != true)) {
                    this.parmJackCommentsField = value;
                    this.RaisePropertyChanged("parmJackComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmReflectiveTapeComments {
            get {
                return this.parmReflectiveTapeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmReflectiveTapeCommentsField, value) != true)) {
                    this.parmReflectiveTapeCommentsField = value;
                    this.RaisePropertyChanged("parmReflectiveTapeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmServiceBooksComments {
            get {
                return this.parmServiceBooksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmServiceBooksCommentsField, value) != true)) {
                    this.parmServiceBooksCommentsField = value;
                    this.RaisePropertyChanged("parmServiceBooksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSignWritingComments {
            get {
                return this.parmSignWritingCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSignWritingCommentsField, value) != true)) {
                    this.parmSignWritingCommentsField = value;
                    this.RaisePropertyChanged("parmSignWritingComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmToolComments {
            get {
                return this.parmToolCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmToolCommentsField, value) != true)) {
                    this.parmToolCommentsField = value;
                    this.RaisePropertyChanged("parmToolComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTrackingDeviceComments {
            get {
                return this.parmTrackingDeviceCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTrackingDeviceCommentsField, value) != true)) {
                    this.parmTrackingDeviceCommentsField = value;
                    this.RaisePropertyChanged("parmTrackingDeviceComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiCommercialChassisBodyContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiCommercialChassisBodyContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmChassisCommentsField;
        
        private string parmChevronCommentsField;
        
        private string parmDoorsCommentsField;
        
        private string parmFloorCommentsField;
        
        private string parmFuelTanksCommentsField;
        
        private string parmHeadBoardCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChassisField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChevronField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFloorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFuelTanksField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadBoardField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLandingLegsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelFrontField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelLeftField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRearField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRightField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareWheelCarrierField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedUnderRunBumperField;
        
        private string parmLandingLegsCommentsField;
        
        private string parmPanelFrontCommentsField;
        
        private string parmPanelLeftCommentsField;
        
        private string parmPanelRearCommentsField;
        
        private string parmPanelRightCommentsField;
        
        private long parmRecIDField;
        
        private string parmSpareWheelCarrierCommentsField;
        
        private int parmTableIdField;
        
        private string parmUnderRunBumperCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmChassisComments {
            get {
                return this.parmChassisCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmChassisCommentsField, value) != true)) {
                    this.parmChassisCommentsField = value;
                    this.RaisePropertyChanged("parmChassisComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmChevronComments {
            get {
                return this.parmChevronCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmChevronCommentsField, value) != true)) {
                    this.parmChevronCommentsField = value;
                    this.RaisePropertyChanged("parmChevronComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDoorsComments {
            get {
                return this.parmDoorsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDoorsCommentsField, value) != true)) {
                    this.parmDoorsCommentsField = value;
                    this.RaisePropertyChanged("parmDoorsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFloorComments {
            get {
                return this.parmFloorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFloorCommentsField, value) != true)) {
                    this.parmFloorCommentsField = value;
                    this.RaisePropertyChanged("parmFloorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFuelTanksComments {
            get {
                return this.parmFuelTanksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFuelTanksCommentsField, value) != true)) {
                    this.parmFuelTanksCommentsField = value;
                    this.RaisePropertyChanged("parmFuelTanksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHeadBoardComments {
            get {
                return this.parmHeadBoardCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHeadBoardCommentsField, value) != true)) {
                    this.parmHeadBoardCommentsField = value;
                    this.RaisePropertyChanged("parmHeadBoardComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChassis {
            get {
                return this.parmIsDamagedChassisField;
            }
            set {
                if ((this.parmIsDamagedChassisField.Equals(value) != true)) {
                    this.parmIsDamagedChassisField = value;
                    this.RaisePropertyChanged("parmIsDamagedChassis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedChevron {
            get {
                return this.parmIsDamagedChevronField;
            }
            set {
                if ((this.parmIsDamagedChevronField.Equals(value) != true)) {
                    this.parmIsDamagedChevronField = value;
                    this.RaisePropertyChanged("parmIsDamagedChevron");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoors {
            get {
                return this.parmIsDamagedDoorsField;
            }
            set {
                if ((this.parmIsDamagedDoorsField.Equals(value) != true)) {
                    this.parmIsDamagedDoorsField = value;
                    this.RaisePropertyChanged("parmIsDamagedDoors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFloor {
            get {
                return this.parmIsDamagedFloorField;
            }
            set {
                if ((this.parmIsDamagedFloorField.Equals(value) != true)) {
                    this.parmIsDamagedFloorField = value;
                    this.RaisePropertyChanged("parmIsDamagedFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFuelTanks {
            get {
                return this.parmIsDamagedFuelTanksField;
            }
            set {
                if ((this.parmIsDamagedFuelTanksField.Equals(value) != true)) {
                    this.parmIsDamagedFuelTanksField = value;
                    this.RaisePropertyChanged("parmIsDamagedFuelTanks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadBoard {
            get {
                return this.parmIsDamagedHeadBoardField;
            }
            set {
                if ((this.parmIsDamagedHeadBoardField.Equals(value) != true)) {
                    this.parmIsDamagedHeadBoardField = value;
                    this.RaisePropertyChanged("parmIsDamagedHeadBoard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLandingLegs {
            get {
                return this.parmIsDamagedLandingLegsField;
            }
            set {
                if ((this.parmIsDamagedLandingLegsField.Equals(value) != true)) {
                    this.parmIsDamagedLandingLegsField = value;
                    this.RaisePropertyChanged("parmIsDamagedLandingLegs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelFront {
            get {
                return this.parmIsDamagedPanelFrontField;
            }
            set {
                if ((this.parmIsDamagedPanelFrontField.Equals(value) != true)) {
                    this.parmIsDamagedPanelFrontField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelFront");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelLeft {
            get {
                return this.parmIsDamagedPanelLeftField;
            }
            set {
                if ((this.parmIsDamagedPanelLeftField.Equals(value) != true)) {
                    this.parmIsDamagedPanelLeftField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRear {
            get {
                return this.parmIsDamagedPanelRearField;
            }
            set {
                if ((this.parmIsDamagedPanelRearField.Equals(value) != true)) {
                    this.parmIsDamagedPanelRearField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelRear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPanelRight {
            get {
                return this.parmIsDamagedPanelRightField;
            }
            set {
                if ((this.parmIsDamagedPanelRightField.Equals(value) != true)) {
                    this.parmIsDamagedPanelRightField = value;
                    this.RaisePropertyChanged("parmIsDamagedPanelRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareWheelCarrier {
            get {
                return this.parmIsDamagedSpareWheelCarrierField;
            }
            set {
                if ((this.parmIsDamagedSpareWheelCarrierField.Equals(value) != true)) {
                    this.parmIsDamagedSpareWheelCarrierField = value;
                    this.RaisePropertyChanged("parmIsDamagedSpareWheelCarrier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedUnderRunBumper {
            get {
                return this.parmIsDamagedUnderRunBumperField;
            }
            set {
                if ((this.parmIsDamagedUnderRunBumperField.Equals(value) != true)) {
                    this.parmIsDamagedUnderRunBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedUnderRunBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLandingLegsComments {
            get {
                return this.parmLandingLegsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLandingLegsCommentsField, value) != true)) {
                    this.parmLandingLegsCommentsField = value;
                    this.RaisePropertyChanged("parmLandingLegsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelFrontComments {
            get {
                return this.parmPanelFrontCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelFrontCommentsField, value) != true)) {
                    this.parmPanelFrontCommentsField = value;
                    this.RaisePropertyChanged("parmPanelFrontComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelLeftComments {
            get {
                return this.parmPanelLeftCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelLeftCommentsField, value) != true)) {
                    this.parmPanelLeftCommentsField = value;
                    this.RaisePropertyChanged("parmPanelLeftComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelRearComments {
            get {
                return this.parmPanelRearCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelRearCommentsField, value) != true)) {
                    this.parmPanelRearCommentsField = value;
                    this.RaisePropertyChanged("parmPanelRearComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPanelRightComments {
            get {
                return this.parmPanelRightCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPanelRightCommentsField, value) != true)) {
                    this.parmPanelRightCommentsField = value;
                    this.RaisePropertyChanged("parmPanelRightComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareWheelCarrierComments {
            get {
                return this.parmSpareWheelCarrierCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareWheelCarrierCommentsField, value) != true)) {
                    this.parmSpareWheelCarrierCommentsField = value;
                    this.RaisePropertyChanged("parmSpareWheelCarrierComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUnderRunBumperComments {
            get {
                return this.parmUnderRunBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUnderRunBumperCommentsField, value) != true)) {
                    this.parmUnderRunBumperCommentsField = value;
                    this.RaisePropertyChanged("parmUnderRunBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiCommercialMechConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiCommercialMechConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmAutoTransmissionCommentsField;
        
        private string parmBatteryCommentsField;
        
        private string parmDifferentialCommentsField;
        
        private string parmEngineCommentsField;
        
        private string parmExhaustCommentsField;
        
        private string parmFootBrakeCommentsField;
        
        private string parmFrontSuppressionCommentsField;
        
        private string parmGearBoxCommentsField;
        
        private string parmHandBrakeCommentsField;
        
        private string parmHydraulicPowerSteeringCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAutoTransmissionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBatteryCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDifferentialField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEngineField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedExhaustField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFootBrakeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontSuppressionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedGearBoxField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHandBrakeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHydraulicPowerSteeringField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedOilLeeksField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSuppressionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSteeringField;
        
        private string parmOilLeaksCommentsField;
        
        private string parmRearSuppressionCommentsField;
        
        private long parmRecIDField;
        
        private string parmSteeringCommentsField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmAutoTransmissionComments {
            get {
                return this.parmAutoTransmissionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAutoTransmissionCommentsField, value) != true)) {
                    this.parmAutoTransmissionCommentsField = value;
                    this.RaisePropertyChanged("parmAutoTransmissionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBatteryComments {
            get {
                return this.parmBatteryCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBatteryCommentsField, value) != true)) {
                    this.parmBatteryCommentsField = value;
                    this.RaisePropertyChanged("parmBatteryComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDifferentialComments {
            get {
                return this.parmDifferentialCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDifferentialCommentsField, value) != true)) {
                    this.parmDifferentialCommentsField = value;
                    this.RaisePropertyChanged("parmDifferentialComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmEngineComments {
            get {
                return this.parmEngineCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineCommentsField, value) != true)) {
                    this.parmEngineCommentsField = value;
                    this.RaisePropertyChanged("parmEngineComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmExhaustComments {
            get {
                return this.parmExhaustCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmExhaustCommentsField, value) != true)) {
                    this.parmExhaustCommentsField = value;
                    this.RaisePropertyChanged("parmExhaustComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFootBrakeComments {
            get {
                return this.parmFootBrakeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFootBrakeCommentsField, value) != true)) {
                    this.parmFootBrakeCommentsField = value;
                    this.RaisePropertyChanged("parmFootBrakeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFrontSuppressionComments {
            get {
                return this.parmFrontSuppressionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFrontSuppressionCommentsField, value) != true)) {
                    this.parmFrontSuppressionCommentsField = value;
                    this.RaisePropertyChanged("parmFrontSuppressionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmGearBoxComments {
            get {
                return this.parmGearBoxCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmGearBoxCommentsField, value) != true)) {
                    this.parmGearBoxCommentsField = value;
                    this.RaisePropertyChanged("parmGearBoxComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHandBrakeComments {
            get {
                return this.parmHandBrakeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHandBrakeCommentsField, value) != true)) {
                    this.parmHandBrakeCommentsField = value;
                    this.RaisePropertyChanged("parmHandBrakeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHydraulicPowerSteeringComments {
            get {
                return this.parmHydraulicPowerSteeringCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHydraulicPowerSteeringCommentsField, value) != true)) {
                    this.parmHydraulicPowerSteeringCommentsField = value;
                    this.RaisePropertyChanged("parmHydraulicPowerSteeringComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAutoTransmission {
            get {
                return this.parmIsDamagedAutoTransmissionField;
            }
            set {
                if ((this.parmIsDamagedAutoTransmissionField.Equals(value) != true)) {
                    this.parmIsDamagedAutoTransmissionField = value;
                    this.RaisePropertyChanged("parmIsDamagedAutoTransmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBatteryComments {
            get {
                return this.parmIsDamagedBatteryCommentsField;
            }
            set {
                if ((this.parmIsDamagedBatteryCommentsField.Equals(value) != true)) {
                    this.parmIsDamagedBatteryCommentsField = value;
                    this.RaisePropertyChanged("parmIsDamagedBatteryComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDifferential {
            get {
                return this.parmIsDamagedDifferentialField;
            }
            set {
                if ((this.parmIsDamagedDifferentialField.Equals(value) != true)) {
                    this.parmIsDamagedDifferentialField = value;
                    this.RaisePropertyChanged("parmIsDamagedDifferential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEngine {
            get {
                return this.parmIsDamagedEngineField;
            }
            set {
                if ((this.parmIsDamagedEngineField.Equals(value) != true)) {
                    this.parmIsDamagedEngineField = value;
                    this.RaisePropertyChanged("parmIsDamagedEngine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedExhaust {
            get {
                return this.parmIsDamagedExhaustField;
            }
            set {
                if ((this.parmIsDamagedExhaustField.Equals(value) != true)) {
                    this.parmIsDamagedExhaustField = value;
                    this.RaisePropertyChanged("parmIsDamagedExhaust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFootBrake {
            get {
                return this.parmIsDamagedFootBrakeField;
            }
            set {
                if ((this.parmIsDamagedFootBrakeField.Equals(value) != true)) {
                    this.parmIsDamagedFootBrakeField = value;
                    this.RaisePropertyChanged("parmIsDamagedFootBrake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontSuppression {
            get {
                return this.parmIsDamagedFrontSuppressionField;
            }
            set {
                if ((this.parmIsDamagedFrontSuppressionField.Equals(value) != true)) {
                    this.parmIsDamagedFrontSuppressionField = value;
                    this.RaisePropertyChanged("parmIsDamagedFrontSuppression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedGearBox {
            get {
                return this.parmIsDamagedGearBoxField;
            }
            set {
                if ((this.parmIsDamagedGearBoxField.Equals(value) != true)) {
                    this.parmIsDamagedGearBoxField = value;
                    this.RaisePropertyChanged("parmIsDamagedGearBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHandBrake {
            get {
                return this.parmIsDamagedHandBrakeField;
            }
            set {
                if ((this.parmIsDamagedHandBrakeField.Equals(value) != true)) {
                    this.parmIsDamagedHandBrakeField = value;
                    this.RaisePropertyChanged("parmIsDamagedHandBrake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHydraulicPowerSteering {
            get {
                return this.parmIsDamagedHydraulicPowerSteeringField;
            }
            set {
                if ((this.parmIsDamagedHydraulicPowerSteeringField.Equals(value) != true)) {
                    this.parmIsDamagedHydraulicPowerSteeringField = value;
                    this.RaisePropertyChanged("parmIsDamagedHydraulicPowerSteering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedOilLeeks {
            get {
                return this.parmIsDamagedOilLeeksField;
            }
            set {
                if ((this.parmIsDamagedOilLeeksField.Equals(value) != true)) {
                    this.parmIsDamagedOilLeeksField = value;
                    this.RaisePropertyChanged("parmIsDamagedOilLeeks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSuppression {
            get {
                return this.parmIsDamagedRearSuppressionField;
            }
            set {
                if ((this.parmIsDamagedRearSuppressionField.Equals(value) != true)) {
                    this.parmIsDamagedRearSuppressionField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearSuppression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSteering {
            get {
                return this.parmIsDamagedSteeringField;
            }
            set {
                if ((this.parmIsDamagedSteeringField.Equals(value) != true)) {
                    this.parmIsDamagedSteeringField = value;
                    this.RaisePropertyChanged("parmIsDamagedSteering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmOilLeaksComments {
            get {
                return this.parmOilLeaksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmOilLeaksCommentsField, value) != true)) {
                    this.parmOilLeaksCommentsField = value;
                    this.RaisePropertyChanged("parmOilLeaksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRearSuppressionComments {
            get {
                return this.parmRearSuppressionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearSuppressionCommentsField, value) != true)) {
                    this.parmRearSuppressionCommentsField = value;
                    this.RaisePropertyChanged("parmRearSuppressionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSteeringComments {
            get {
                return this.parmSteeringCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSteeringCommentsField, value) != true)) {
                    this.parmSteeringCommentsField = value;
                    this.RaisePropertyChanged("parmSteeringComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKMobiCommercialTrimInteriorContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MZKMobiCommercialTrimInteriorContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmBackupWarningCommentsField;
        
        private string parmBumperCommentsField;
        
        private string parmControlLeverCommentsField;
        
        private string parmDashboardCommentsField;
        
        private string parmDoorHandleLeftCommentsField;
        
        private string parmDoorHandleRightCommentsField;
        
        private string parmDriverSeatCommentsField;
        
        private string parmEmblemCommentsField;
        
        private string parmForksCommentsField;
        
        private string parmFrontViewCommentsField;
        
        private string parmGrillCommentsField;
        
        private string parmInstrumentClusterCommentsField;
        
        private string parmInternalTriesCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBackupWarningsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBumperField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedControlLeversField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDashboardField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandleLeftField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandleRightField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDriversSeatField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEmblemsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedForksField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontviewField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedGrillField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInstrumentClusterField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInternalTriesField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFQuarterPanelField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRQuarterPanelField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLeftDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMaskHydraulicsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMastField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMatsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedOverheadGuardField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPassengerSeatField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFQuarterPanelField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRQuarterPanelField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRainGuardField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearViewMirrorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRightDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRoofField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSteeringWheelsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWheelArchesLeftField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWheelArchesRightField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWipersField;
        
        private string parmLFQuarterPanelCommentsField;
        
        private string parmLRQuarterPanelCommentsField;
        
        private string parmLeftDoorCommentsField;
        
        private string parmMastCommentsField;
        
        private string parmMastHydraulicsCommentsField;
        
        private string parmMatsCommentsField;
        
        private string parmOverheadGuardCommentsField;
        
        private string parmPassengerSeatCommentsField;
        
        private string parmRFQuarterPanelCommentsField;
        
        private string parmRRQuarterPanelCommentsField;
        
        private string parmRainGuardCommentsField;
        
        private string parmRearViewMirrorCommentsField;
        
        private long parmRecIDField;
        
        private string parmRightDoorCommentsField;
        
        private string parmRoofCommentsField;
        
        private string parmSteeringWheelCommentsField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private string parmWheelArchesLeftCommentsField;
        
        private string parmWheelArchesRightCommentsField;
        
        private string parmWipersCommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBackupWarningComments {
            get {
                return this.parmBackupWarningCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBackupWarningCommentsField, value) != true)) {
                    this.parmBackupWarningCommentsField = value;
                    this.RaisePropertyChanged("parmBackupWarningComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBumperComments {
            get {
                return this.parmBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBumperCommentsField, value) != true)) {
                    this.parmBumperCommentsField = value;
                    this.RaisePropertyChanged("parmBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmControlLeverComments {
            get {
                return this.parmControlLeverCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmControlLeverCommentsField, value) != true)) {
                    this.parmControlLeverCommentsField = value;
                    this.RaisePropertyChanged("parmControlLeverComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDashboardComments {
            get {
                return this.parmDashboardCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDashboardCommentsField, value) != true)) {
                    this.parmDashboardCommentsField = value;
                    this.RaisePropertyChanged("parmDashboardComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDoorHandleLeftComments {
            get {
                return this.parmDoorHandleLeftCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDoorHandleLeftCommentsField, value) != true)) {
                    this.parmDoorHandleLeftCommentsField = value;
                    this.RaisePropertyChanged("parmDoorHandleLeftComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDoorHandleRightComments {
            get {
                return this.parmDoorHandleRightCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDoorHandleRightCommentsField, value) != true)) {
                    this.parmDoorHandleRightCommentsField = value;
                    this.RaisePropertyChanged("parmDoorHandleRightComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDriverSeatComments {
            get {
                return this.parmDriverSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDriverSeatCommentsField, value) != true)) {
                    this.parmDriverSeatCommentsField = value;
                    this.RaisePropertyChanged("parmDriverSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmEmblemComments {
            get {
                return this.parmEmblemCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEmblemCommentsField, value) != true)) {
                    this.parmEmblemCommentsField = value;
                    this.RaisePropertyChanged("parmEmblemComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmForksComments {
            get {
                return this.parmForksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmForksCommentsField, value) != true)) {
                    this.parmForksCommentsField = value;
                    this.RaisePropertyChanged("parmForksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFrontViewComments {
            get {
                return this.parmFrontViewCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFrontViewCommentsField, value) != true)) {
                    this.parmFrontViewCommentsField = value;
                    this.RaisePropertyChanged("parmFrontViewComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmGrillComments {
            get {
                return this.parmGrillCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmGrillCommentsField, value) != true)) {
                    this.parmGrillCommentsField = value;
                    this.RaisePropertyChanged("parmGrillComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmInstrumentClusterComments {
            get {
                return this.parmInstrumentClusterCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmInstrumentClusterCommentsField, value) != true)) {
                    this.parmInstrumentClusterCommentsField = value;
                    this.RaisePropertyChanged("parmInstrumentClusterComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmInternalTriesComments {
            get {
                return this.parmInternalTriesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmInternalTriesCommentsField, value) != true)) {
                    this.parmInternalTriesCommentsField = value;
                    this.RaisePropertyChanged("parmInternalTriesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBackupWarnings {
            get {
                return this.parmIsDamagedBackupWarningsField;
            }
            set {
                if ((this.parmIsDamagedBackupWarningsField.Equals(value) != true)) {
                    this.parmIsDamagedBackupWarningsField = value;
                    this.RaisePropertyChanged("parmIsDamagedBackupWarnings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBumper {
            get {
                return this.parmIsDamagedBumperField;
            }
            set {
                if ((this.parmIsDamagedBumperField.Equals(value) != true)) {
                    this.parmIsDamagedBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedControlLevers {
            get {
                return this.parmIsDamagedControlLeversField;
            }
            set {
                if ((this.parmIsDamagedControlLeversField.Equals(value) != true)) {
                    this.parmIsDamagedControlLeversField = value;
                    this.RaisePropertyChanged("parmIsDamagedControlLevers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDashboard {
            get {
                return this.parmIsDamagedDashboardField;
            }
            set {
                if ((this.parmIsDamagedDashboardField.Equals(value) != true)) {
                    this.parmIsDamagedDashboardField = value;
                    this.RaisePropertyChanged("parmIsDamagedDashboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandleLeft {
            get {
                return this.parmIsDamagedDoorHandleLeftField;
            }
            set {
                if ((this.parmIsDamagedDoorHandleLeftField.Equals(value) != true)) {
                    this.parmIsDamagedDoorHandleLeftField = value;
                    this.RaisePropertyChanged("parmIsDamagedDoorHandleLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandleRight {
            get {
                return this.parmIsDamagedDoorHandleRightField;
            }
            set {
                if ((this.parmIsDamagedDoorHandleRightField.Equals(value) != true)) {
                    this.parmIsDamagedDoorHandleRightField = value;
                    this.RaisePropertyChanged("parmIsDamagedDoorHandleRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDriversSeat {
            get {
                return this.parmIsDamagedDriversSeatField;
            }
            set {
                if ((this.parmIsDamagedDriversSeatField.Equals(value) != true)) {
                    this.parmIsDamagedDriversSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedDriversSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedEmblems {
            get {
                return this.parmIsDamagedEmblemsField;
            }
            set {
                if ((this.parmIsDamagedEmblemsField.Equals(value) != true)) {
                    this.parmIsDamagedEmblemsField = value;
                    this.RaisePropertyChanged("parmIsDamagedEmblems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedForks {
            get {
                return this.parmIsDamagedForksField;
            }
            set {
                if ((this.parmIsDamagedForksField.Equals(value) != true)) {
                    this.parmIsDamagedForksField = value;
                    this.RaisePropertyChanged("parmIsDamagedForks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontview {
            get {
                return this.parmIsDamagedFrontviewField;
            }
            set {
                if ((this.parmIsDamagedFrontviewField.Equals(value) != true)) {
                    this.parmIsDamagedFrontviewField = value;
                    this.RaisePropertyChanged("parmIsDamagedFrontview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedGrill {
            get {
                return this.parmIsDamagedGrillField;
            }
            set {
                if ((this.parmIsDamagedGrillField.Equals(value) != true)) {
                    this.parmIsDamagedGrillField = value;
                    this.RaisePropertyChanged("parmIsDamagedGrill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInstrumentCluster {
            get {
                return this.parmIsDamagedInstrumentClusterField;
            }
            set {
                if ((this.parmIsDamagedInstrumentClusterField.Equals(value) != true)) {
                    this.parmIsDamagedInstrumentClusterField = value;
                    this.RaisePropertyChanged("parmIsDamagedInstrumentCluster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInternalTries {
            get {
                return this.parmIsDamagedInternalTriesField;
            }
            set {
                if ((this.parmIsDamagedInternalTriesField.Equals(value) != true)) {
                    this.parmIsDamagedInternalTriesField = value;
                    this.RaisePropertyChanged("parmIsDamagedInternalTries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFQuarterPanel {
            get {
                return this.parmIsDamagedLFQuarterPanelField;
            }
            set {
                if ((this.parmIsDamagedLFQuarterPanelField.Equals(value) != true)) {
                    this.parmIsDamagedLFQuarterPanelField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFQuarterPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRQuarterPanel {
            get {
                return this.parmIsDamagedLRQuarterPanelField;
            }
            set {
                if ((this.parmIsDamagedLRQuarterPanelField.Equals(value) != true)) {
                    this.parmIsDamagedLRQuarterPanelField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRQuarterPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLeftDoor {
            get {
                return this.parmIsDamagedLeftDoorField;
            }
            set {
                if ((this.parmIsDamagedLeftDoorField.Equals(value) != true)) {
                    this.parmIsDamagedLeftDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedLeftDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMaskHydraulics {
            get {
                return this.parmIsDamagedMaskHydraulicsField;
            }
            set {
                if ((this.parmIsDamagedMaskHydraulicsField.Equals(value) != true)) {
                    this.parmIsDamagedMaskHydraulicsField = value;
                    this.RaisePropertyChanged("parmIsDamagedMaskHydraulics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMast {
            get {
                return this.parmIsDamagedMastField;
            }
            set {
                if ((this.parmIsDamagedMastField.Equals(value) != true)) {
                    this.parmIsDamagedMastField = value;
                    this.RaisePropertyChanged("parmIsDamagedMast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMats {
            get {
                return this.parmIsDamagedMatsField;
            }
            set {
                if ((this.parmIsDamagedMatsField.Equals(value) != true)) {
                    this.parmIsDamagedMatsField = value;
                    this.RaisePropertyChanged("parmIsDamagedMats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedOverheadGuard {
            get {
                return this.parmIsDamagedOverheadGuardField;
            }
            set {
                if ((this.parmIsDamagedOverheadGuardField.Equals(value) != true)) {
                    this.parmIsDamagedOverheadGuardField = value;
                    this.RaisePropertyChanged("parmIsDamagedOverheadGuard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPassengerSeat {
            get {
                return this.parmIsDamagedPassengerSeatField;
            }
            set {
                if ((this.parmIsDamagedPassengerSeatField.Equals(value) != true)) {
                    this.parmIsDamagedPassengerSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedPassengerSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFQuarterPanel {
            get {
                return this.parmIsDamagedRFQuarterPanelField;
            }
            set {
                if ((this.parmIsDamagedRFQuarterPanelField.Equals(value) != true)) {
                    this.parmIsDamagedRFQuarterPanelField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFQuarterPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRQuarterPanel {
            get {
                return this.parmIsDamagedRRQuarterPanelField;
            }
            set {
                if ((this.parmIsDamagedRRQuarterPanelField.Equals(value) != true)) {
                    this.parmIsDamagedRRQuarterPanelField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRQuarterPanel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRainGuard {
            get {
                return this.parmIsDamagedRainGuardField;
            }
            set {
                if ((this.parmIsDamagedRainGuardField.Equals(value) != true)) {
                    this.parmIsDamagedRainGuardField = value;
                    this.RaisePropertyChanged("parmIsDamagedRainGuard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearViewMirror {
            get {
                return this.parmIsDamagedRearViewMirrorField;
            }
            set {
                if ((this.parmIsDamagedRearViewMirrorField.Equals(value) != true)) {
                    this.parmIsDamagedRearViewMirrorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearViewMirror");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRightDoor {
            get {
                return this.parmIsDamagedRightDoorField;
            }
            set {
                if ((this.parmIsDamagedRightDoorField.Equals(value) != true)) {
                    this.parmIsDamagedRightDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRightDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRoof {
            get {
                return this.parmIsDamagedRoofField;
            }
            set {
                if ((this.parmIsDamagedRoofField.Equals(value) != true)) {
                    this.parmIsDamagedRoofField = value;
                    this.RaisePropertyChanged("parmIsDamagedRoof");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSteeringWheels {
            get {
                return this.parmIsDamagedSteeringWheelsField;
            }
            set {
                if ((this.parmIsDamagedSteeringWheelsField.Equals(value) != true)) {
                    this.parmIsDamagedSteeringWheelsField = value;
                    this.RaisePropertyChanged("parmIsDamagedSteeringWheels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWheelArchesLeft {
            get {
                return this.parmIsDamagedWheelArchesLeftField;
            }
            set {
                if ((this.parmIsDamagedWheelArchesLeftField.Equals(value) != true)) {
                    this.parmIsDamagedWheelArchesLeftField = value;
                    this.RaisePropertyChanged("parmIsDamagedWheelArchesLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWheelArchesRight {
            get {
                return this.parmIsDamagedWheelArchesRightField;
            }
            set {
                if ((this.parmIsDamagedWheelArchesRightField.Equals(value) != true)) {
                    this.parmIsDamagedWheelArchesRightField = value;
                    this.RaisePropertyChanged("parmIsDamagedWheelArchesRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWipers {
            get {
                return this.parmIsDamagedWipersField;
            }
            set {
                if ((this.parmIsDamagedWipersField.Equals(value) != true)) {
                    this.parmIsDamagedWipersField = value;
                    this.RaisePropertyChanged("parmIsDamagedWipers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFQuarterPanelComments {
            get {
                return this.parmLFQuarterPanelCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFQuarterPanelCommentsField, value) != true)) {
                    this.parmLFQuarterPanelCommentsField = value;
                    this.RaisePropertyChanged("parmLFQuarterPanelComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRQuarterPanelComments {
            get {
                return this.parmLRQuarterPanelCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRQuarterPanelCommentsField, value) != true)) {
                    this.parmLRQuarterPanelCommentsField = value;
                    this.RaisePropertyChanged("parmLRQuarterPanelComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLeftDoorComments {
            get {
                return this.parmLeftDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLeftDoorCommentsField, value) != true)) {
                    this.parmLeftDoorCommentsField = value;
                    this.RaisePropertyChanged("parmLeftDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMastComments {
            get {
                return this.parmMastCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMastCommentsField, value) != true)) {
                    this.parmMastCommentsField = value;
                    this.RaisePropertyChanged("parmMastComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMastHydraulicsComments {
            get {
                return this.parmMastHydraulicsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMastHydraulicsCommentsField, value) != true)) {
                    this.parmMastHydraulicsCommentsField = value;
                    this.RaisePropertyChanged("parmMastHydraulicsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMatsComments {
            get {
                return this.parmMatsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMatsCommentsField, value) != true)) {
                    this.parmMatsCommentsField = value;
                    this.RaisePropertyChanged("parmMatsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmOverheadGuardComments {
            get {
                return this.parmOverheadGuardCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmOverheadGuardCommentsField, value) != true)) {
                    this.parmOverheadGuardCommentsField = value;
                    this.RaisePropertyChanged("parmOverheadGuardComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPassengerSeatComments {
            get {
                return this.parmPassengerSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPassengerSeatCommentsField, value) != true)) {
                    this.parmPassengerSeatCommentsField = value;
                    this.RaisePropertyChanged("parmPassengerSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFQuarterPanelComments {
            get {
                return this.parmRFQuarterPanelCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFQuarterPanelCommentsField, value) != true)) {
                    this.parmRFQuarterPanelCommentsField = value;
                    this.RaisePropertyChanged("parmRFQuarterPanelComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRQuarterPanelComments {
            get {
                return this.parmRRQuarterPanelCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRQuarterPanelCommentsField, value) != true)) {
                    this.parmRRQuarterPanelCommentsField = value;
                    this.RaisePropertyChanged("parmRRQuarterPanelComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRainGuardComments {
            get {
                return this.parmRainGuardCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRainGuardCommentsField, value) != true)) {
                    this.parmRainGuardCommentsField = value;
                    this.RaisePropertyChanged("parmRainGuardComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRearViewMirrorComments {
            get {
                return this.parmRearViewMirrorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearViewMirrorCommentsField, value) != true)) {
                    this.parmRearViewMirrorCommentsField = value;
                    this.RaisePropertyChanged("parmRearViewMirrorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRightDoorComments {
            get {
                return this.parmRightDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRightDoorCommentsField, value) != true)) {
                    this.parmRightDoorCommentsField = value;
                    this.RaisePropertyChanged("parmRightDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRoofComments {
            get {
                return this.parmRoofCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRoofCommentsField, value) != true)) {
                    this.parmRoofCommentsField = value;
                    this.RaisePropertyChanged("parmRoofComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSteeringWheelComments {
            get {
                return this.parmSteeringWheelCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSteeringWheelCommentsField, value) != true)) {
                    this.parmSteeringWheelCommentsField = value;
                    this.RaisePropertyChanged("parmSteeringWheelComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmWheelArchesLeftComments {
            get {
                return this.parmWheelArchesLeftCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWheelArchesLeftCommentsField, value) != true)) {
                    this.parmWheelArchesLeftCommentsField = value;
                    this.RaisePropertyChanged("parmWheelArchesLeftComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmWheelArchesRightComments {
            get {
                return this.parmWheelArchesRightCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWheelArchesRightCommentsField, value) != true)) {
                    this.parmWheelArchesRightCommentsField = value;
                    this.RaisePropertyChanged("parmWheelArchesRightComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmWipersComments {
            get {
                return this.parmWipersCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWipersCommentsField, value) != true)) {
                    this.parmWipersCommentsField = value;
                    this.RaisePropertyChanged("parmWipersComments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiCommercialTyresContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiCommercialTyresContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmLFCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLFConditionField;
        
        private string parmLInnerAxleInCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLInnerAxleInConditionField;
        
        private string parmLInnerAxleOutCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLInnerAxleOutConditionField;
        
        private string parmLRInnerCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLRInnerConditionField;
        
        private string parmLROuterCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLROuterConditionField;
        
        private string parmRFCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRFConditionField;
        
        private string parmRInnerAxleInCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRInnerAxleInConditionField;
        
        private string parmRInnerAxleOutCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRInnerAxleOutConditionField;
        
        private string parmRRInnerCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRRInnerConditionField;
        
        private string parmRROuterCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRROuterConditionField;
        
        private long parmRecIDField;
        
        private string parmSpareCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmSpareConditionField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFComments {
            get {
                return this.parmLFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFCommentsField, value) != true)) {
                    this.parmLFCommentsField = value;
                    this.RaisePropertyChanged("parmLFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLFCondition {
            get {
                return this.parmLFConditionField;
            }
            set {
                if ((this.parmLFConditionField.Equals(value) != true)) {
                    this.parmLFConditionField = value;
                    this.RaisePropertyChanged("parmLFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLInnerAxleInComments {
            get {
                return this.parmLInnerAxleInCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLInnerAxleInCommentsField, value) != true)) {
                    this.parmLInnerAxleInCommentsField = value;
                    this.RaisePropertyChanged("parmLInnerAxleInComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLInnerAxleInCondition {
            get {
                return this.parmLInnerAxleInConditionField;
            }
            set {
                if ((this.parmLInnerAxleInConditionField.Equals(value) != true)) {
                    this.parmLInnerAxleInConditionField = value;
                    this.RaisePropertyChanged("parmLInnerAxleInCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLInnerAxleOutComments {
            get {
                return this.parmLInnerAxleOutCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLInnerAxleOutCommentsField, value) != true)) {
                    this.parmLInnerAxleOutCommentsField = value;
                    this.RaisePropertyChanged("parmLInnerAxleOutComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLInnerAxleOutCondition {
            get {
                return this.parmLInnerAxleOutConditionField;
            }
            set {
                if ((this.parmLInnerAxleOutConditionField.Equals(value) != true)) {
                    this.parmLInnerAxleOutConditionField = value;
                    this.RaisePropertyChanged("parmLInnerAxleOutCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRInnerComments {
            get {
                return this.parmLRInnerCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRInnerCommentsField, value) != true)) {
                    this.parmLRInnerCommentsField = value;
                    this.RaisePropertyChanged("parmLRInnerComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLRInnerCondition {
            get {
                return this.parmLRInnerConditionField;
            }
            set {
                if ((this.parmLRInnerConditionField.Equals(value) != true)) {
                    this.parmLRInnerConditionField = value;
                    this.RaisePropertyChanged("parmLRInnerCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLROuterComments {
            get {
                return this.parmLROuterCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLROuterCommentsField, value) != true)) {
                    this.parmLROuterCommentsField = value;
                    this.RaisePropertyChanged("parmLROuterComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLROuterCondition {
            get {
                return this.parmLROuterConditionField;
            }
            set {
                if ((this.parmLROuterConditionField.Equals(value) != true)) {
                    this.parmLROuterConditionField = value;
                    this.RaisePropertyChanged("parmLROuterCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFComments {
            get {
                return this.parmRFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFCommentsField, value) != true)) {
                    this.parmRFCommentsField = value;
                    this.RaisePropertyChanged("parmRFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRFCondition {
            get {
                return this.parmRFConditionField;
            }
            set {
                if ((this.parmRFConditionField.Equals(value) != true)) {
                    this.parmRFConditionField = value;
                    this.RaisePropertyChanged("parmRFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRInnerAxleInComments {
            get {
                return this.parmRInnerAxleInCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRInnerAxleInCommentsField, value) != true)) {
                    this.parmRInnerAxleInCommentsField = value;
                    this.RaisePropertyChanged("parmRInnerAxleInComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRInnerAxleInCondition {
            get {
                return this.parmRInnerAxleInConditionField;
            }
            set {
                if ((this.parmRInnerAxleInConditionField.Equals(value) != true)) {
                    this.parmRInnerAxleInConditionField = value;
                    this.RaisePropertyChanged("parmRInnerAxleInCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRInnerAxleOutComments {
            get {
                return this.parmRInnerAxleOutCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRInnerAxleOutCommentsField, value) != true)) {
                    this.parmRInnerAxleOutCommentsField = value;
                    this.RaisePropertyChanged("parmRInnerAxleOutComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRInnerAxleOutCondition {
            get {
                return this.parmRInnerAxleOutConditionField;
            }
            set {
                if ((this.parmRInnerAxleOutConditionField.Equals(value) != true)) {
                    this.parmRInnerAxleOutConditionField = value;
                    this.RaisePropertyChanged("parmRInnerAxleOutCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRInnerComments {
            get {
                return this.parmRRInnerCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRInnerCommentsField, value) != true)) {
                    this.parmRRInnerCommentsField = value;
                    this.RaisePropertyChanged("parmRRInnerComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRRInnerCondition {
            get {
                return this.parmRRInnerConditionField;
            }
            set {
                if ((this.parmRRInnerConditionField.Equals(value) != true)) {
                    this.parmRRInnerConditionField = value;
                    this.RaisePropertyChanged("parmRRInnerCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRROuterComments {
            get {
                return this.parmRROuterCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRROuterCommentsField, value) != true)) {
                    this.parmRROuterCommentsField = value;
                    this.RaisePropertyChanged("parmRROuterComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRROuterCondition {
            get {
                return this.parmRROuterConditionField;
            }
            set {
                if ((this.parmRROuterConditionField.Equals(value) != true)) {
                    this.parmRROuterConditionField = value;
                    this.RaisePropertyChanged("parmRROuterCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareComments {
            get {
                return this.parmSpareCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareCommentsField, value) != true)) {
                    this.parmSpareCommentsField = value;
                    this.RaisePropertyChanged("parmSpareComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmSpareCondition {
            get {
                return this.parmSpareConditionField;
            }
            set {
                if ((this.parmSpareConditionField.Equals(value) != true)) {
                    this.parmSpareConditionField = value;
                    this.RaisePropertyChanged("parmSpareCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerAccessoriesContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiPassengerAccessoriesContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmAirconCommentsField;
        
        private string parmAlarmCommentsField;
        
        private string parmCDShuttleCommentsField;
        
        private string parmCanopyCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasAirconField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasAlarmField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasCDShuttleField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasCanopyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasJackField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasKeyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasMapsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasNavigationField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasOthersField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasRadioField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasServicesBookField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasSpareTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasSparekeyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasToolsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTrackingUnitField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAirconField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAlarmField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCDShuttleField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCanopyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedJackField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedKeyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMapsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedNavigationField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRadioField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedServicesBookField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSparekeyField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedToolsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTrackingUnitField;
        
        private string parmJackCommentsField;
        
        private string parmKeyCommentsField;
        
        private string parmMapsCommentsField;
        
        private string parmNavigationCommentsField;
        
        private string parmOtherCommentsField;
        
        private string parmRadioCommentsField;
        
        private long parmRecIDField;
        
        private string parmServiceBooksCommentsField;
        
        private string parmSpareKeysCommentsField;
        
        private string parmSpareTypeCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private string parmToolCommentsField;
        
        private string parmTrackLineCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmAirconComments {
            get {
                return this.parmAirconCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAirconCommentsField, value) != true)) {
                    this.parmAirconCommentsField = value;
                    this.RaisePropertyChanged("parmAirconComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmAlarmComments {
            get {
                return this.parmAlarmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAlarmCommentsField, value) != true)) {
                    this.parmAlarmCommentsField = value;
                    this.RaisePropertyChanged("parmAlarmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCDShuttleComments {
            get {
                return this.parmCDShuttleCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCDShuttleCommentsField, value) != true)) {
                    this.parmCDShuttleCommentsField = value;
                    this.RaisePropertyChanged("parmCDShuttleComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCanopyComments {
            get {
                return this.parmCanopyCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCanopyCommentsField, value) != true)) {
                    this.parmCanopyCommentsField = value;
                    this.RaisePropertyChanged("parmCanopyComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasAircon {
            get {
                return this.parmHasAirconField;
            }
            set {
                if ((this.parmHasAirconField.Equals(value) != true)) {
                    this.parmHasAirconField = value;
                    this.RaisePropertyChanged("parmHasAircon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasAlarm {
            get {
                return this.parmHasAlarmField;
            }
            set {
                if ((this.parmHasAlarmField.Equals(value) != true)) {
                    this.parmHasAlarmField = value;
                    this.RaisePropertyChanged("parmHasAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasCDShuttle {
            get {
                return this.parmHasCDShuttleField;
            }
            set {
                if ((this.parmHasCDShuttleField.Equals(value) != true)) {
                    this.parmHasCDShuttleField = value;
                    this.RaisePropertyChanged("parmHasCDShuttle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasCanopy {
            get {
                return this.parmHasCanopyField;
            }
            set {
                if ((this.parmHasCanopyField.Equals(value) != true)) {
                    this.parmHasCanopyField = value;
                    this.RaisePropertyChanged("parmHasCanopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasJack {
            get {
                return this.parmHasJackField;
            }
            set {
                if ((this.parmHasJackField.Equals(value) != true)) {
                    this.parmHasJackField = value;
                    this.RaisePropertyChanged("parmHasJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasKey {
            get {
                return this.parmHasKeyField;
            }
            set {
                if ((this.parmHasKeyField.Equals(value) != true)) {
                    this.parmHasKeyField = value;
                    this.RaisePropertyChanged("parmHasKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasMaps {
            get {
                return this.parmHasMapsField;
            }
            set {
                if ((this.parmHasMapsField.Equals(value) != true)) {
                    this.parmHasMapsField = value;
                    this.RaisePropertyChanged("parmHasMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasNavigation {
            get {
                return this.parmHasNavigationField;
            }
            set {
                if ((this.parmHasNavigationField.Equals(value) != true)) {
                    this.parmHasNavigationField = value;
                    this.RaisePropertyChanged("parmHasNavigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasOthers {
            get {
                return this.parmHasOthersField;
            }
            set {
                if ((this.parmHasOthersField.Equals(value) != true)) {
                    this.parmHasOthersField = value;
                    this.RaisePropertyChanged("parmHasOthers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasRadio {
            get {
                return this.parmHasRadioField;
            }
            set {
                if ((this.parmHasRadioField.Equals(value) != true)) {
                    this.parmHasRadioField = value;
                    this.RaisePropertyChanged("parmHasRadio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasServicesBook {
            get {
                return this.parmHasServicesBookField;
            }
            set {
                if ((this.parmHasServicesBookField.Equals(value) != true)) {
                    this.parmHasServicesBookField = value;
                    this.RaisePropertyChanged("parmHasServicesBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasSpareType {
            get {
                return this.parmHasSpareTypeField;
            }
            set {
                if ((this.parmHasSpareTypeField.Equals(value) != true)) {
                    this.parmHasSpareTypeField = value;
                    this.RaisePropertyChanged("parmHasSpareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasSparekey {
            get {
                return this.parmHasSparekeyField;
            }
            set {
                if ((this.parmHasSparekeyField.Equals(value) != true)) {
                    this.parmHasSparekeyField = value;
                    this.RaisePropertyChanged("parmHasSparekey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTools {
            get {
                return this.parmHasToolsField;
            }
            set {
                if ((this.parmHasToolsField.Equals(value) != true)) {
                    this.parmHasToolsField = value;
                    this.RaisePropertyChanged("parmHasTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasTrackingUnit {
            get {
                return this.parmHasTrackingUnitField;
            }
            set {
                if ((this.parmHasTrackingUnitField.Equals(value) != true)) {
                    this.parmHasTrackingUnitField = value;
                    this.RaisePropertyChanged("parmHasTrackingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAircon {
            get {
                return this.parmIsDamagedAirconField;
            }
            set {
                if ((this.parmIsDamagedAirconField.Equals(value) != true)) {
                    this.parmIsDamagedAirconField = value;
                    this.RaisePropertyChanged("parmIsDamagedAircon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedAlarm {
            get {
                return this.parmIsDamagedAlarmField;
            }
            set {
                if ((this.parmIsDamagedAlarmField.Equals(value) != true)) {
                    this.parmIsDamagedAlarmField = value;
                    this.RaisePropertyChanged("parmIsDamagedAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCDShuttle {
            get {
                return this.parmIsDamagedCDShuttleField;
            }
            set {
                if ((this.parmIsDamagedCDShuttleField.Equals(value) != true)) {
                    this.parmIsDamagedCDShuttleField = value;
                    this.RaisePropertyChanged("parmIsDamagedCDShuttle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCanopy {
            get {
                return this.parmIsDamagedCanopyField;
            }
            set {
                if ((this.parmIsDamagedCanopyField.Equals(value) != true)) {
                    this.parmIsDamagedCanopyField = value;
                    this.RaisePropertyChanged("parmIsDamagedCanopy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedJack {
            get {
                return this.parmIsDamagedJackField;
            }
            set {
                if ((this.parmIsDamagedJackField.Equals(value) != true)) {
                    this.parmIsDamagedJackField = value;
                    this.RaisePropertyChanged("parmIsDamagedJack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedKey {
            get {
                return this.parmIsDamagedKeyField;
            }
            set {
                if ((this.parmIsDamagedKeyField.Equals(value) != true)) {
                    this.parmIsDamagedKeyField = value;
                    this.RaisePropertyChanged("parmIsDamagedKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedMaps {
            get {
                return this.parmIsDamagedMapsField;
            }
            set {
                if ((this.parmIsDamagedMapsField.Equals(value) != true)) {
                    this.parmIsDamagedMapsField = value;
                    this.RaisePropertyChanged("parmIsDamagedMaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedNavigation {
            get {
                return this.parmIsDamagedNavigationField;
            }
            set {
                if ((this.parmIsDamagedNavigationField.Equals(value) != true)) {
                    this.parmIsDamagedNavigationField = value;
                    this.RaisePropertyChanged("parmIsDamagedNavigation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRadio {
            get {
                return this.parmIsDamagedRadioField;
            }
            set {
                if ((this.parmIsDamagedRadioField.Equals(value) != true)) {
                    this.parmIsDamagedRadioField = value;
                    this.RaisePropertyChanged("parmIsDamagedRadio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedServicesBook {
            get {
                return this.parmIsDamagedServicesBookField;
            }
            set {
                if ((this.parmIsDamagedServicesBookField.Equals(value) != true)) {
                    this.parmIsDamagedServicesBookField = value;
                    this.RaisePropertyChanged("parmIsDamagedServicesBook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSpareType {
            get {
                return this.parmIsDamagedSpareTypeField;
            }
            set {
                if ((this.parmIsDamagedSpareTypeField.Equals(value) != true)) {
                    this.parmIsDamagedSpareTypeField = value;
                    this.RaisePropertyChanged("parmIsDamagedSpareType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSparekey {
            get {
                return this.parmIsDamagedSparekeyField;
            }
            set {
                if ((this.parmIsDamagedSparekeyField.Equals(value) != true)) {
                    this.parmIsDamagedSparekeyField = value;
                    this.RaisePropertyChanged("parmIsDamagedSparekey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTools {
            get {
                return this.parmIsDamagedToolsField;
            }
            set {
                if ((this.parmIsDamagedToolsField.Equals(value) != true)) {
                    this.parmIsDamagedToolsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTools");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTrackingUnit {
            get {
                return this.parmIsDamagedTrackingUnitField;
            }
            set {
                if ((this.parmIsDamagedTrackingUnitField.Equals(value) != true)) {
                    this.parmIsDamagedTrackingUnitField = value;
                    this.RaisePropertyChanged("parmIsDamagedTrackingUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmJackComments {
            get {
                return this.parmJackCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJackCommentsField, value) != true)) {
                    this.parmJackCommentsField = value;
                    this.RaisePropertyChanged("parmJackComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmKeyComments {
            get {
                return this.parmKeyCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmKeyCommentsField, value) != true)) {
                    this.parmKeyCommentsField = value;
                    this.RaisePropertyChanged("parmKeyComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMapsComments {
            get {
                return this.parmMapsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMapsCommentsField, value) != true)) {
                    this.parmMapsCommentsField = value;
                    this.RaisePropertyChanged("parmMapsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmNavigationComments {
            get {
                return this.parmNavigationCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmNavigationCommentsField, value) != true)) {
                    this.parmNavigationCommentsField = value;
                    this.RaisePropertyChanged("parmNavigationComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmOtherComments {
            get {
                return this.parmOtherCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmOtherCommentsField, value) != true)) {
                    this.parmOtherCommentsField = value;
                    this.RaisePropertyChanged("parmOtherComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRadioComments {
            get {
                return this.parmRadioCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRadioCommentsField, value) != true)) {
                    this.parmRadioCommentsField = value;
                    this.RaisePropertyChanged("parmRadioComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmServiceBooksComments {
            get {
                return this.parmServiceBooksCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmServiceBooksCommentsField, value) != true)) {
                    this.parmServiceBooksCommentsField = value;
                    this.RaisePropertyChanged("parmServiceBooksComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareKeysComments {
            get {
                return this.parmSpareKeysCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareKeysCommentsField, value) != true)) {
                    this.parmSpareKeysCommentsField = value;
                    this.RaisePropertyChanged("parmSpareKeysComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareTypeComments {
            get {
                return this.parmSpareTypeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareTypeCommentsField, value) != true)) {
                    this.parmSpareTypeCommentsField = value;
                    this.RaisePropertyChanged("parmSpareTypeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmToolComments {
            get {
                return this.parmToolCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmToolCommentsField, value) != true)) {
                    this.parmToolCommentsField = value;
                    this.RaisePropertyChanged("parmToolComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTrackLineComments {
            get {
                return this.parmTrackLineCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTrackLineCommentsField, value) != true)) {
                    this.parmTrackLineCommentsField = value;
                    this.RaisePropertyChanged("parmTrackLineComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerBodyworkContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiPassengerBodyworkContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmBonetCommentsField;
        
        private string parmBootCommentsField;
        
        private string parmDoorHandlesCommentsField;
        
        private string parmHailDamageCommentsField;
        
        private string parmHubcapsCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBonnetField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBootField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandlesField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHailDamageField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHubcapsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFBumperField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFWheelArchField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRBumperField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRWheelArchField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLeftSideField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFBumperField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFWheelArchField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRBumperField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRDoorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRWheelArchField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRightSideField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRoofField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWipersField;
        
        private string parmLFDoorCommentsField;
        
        private string parmLFWheelArchCommentsField;
        
        private string parmLRBumperCommentsField;
        
        private string parmLRDoorCommentsField;
        
        private string parmLRWheelArchCommentsField;
        
        private string parmRFBumperCommentsField;
        
        private string parmRFDoorCommentsField;
        
        private string parmRFWheelArchCommentsField;
        
        private string parmRRBumperCommentsField;
        
        private string parmRRDoorCommentsField;
        
        private string parmRRWheelArchCommentsField;
        
        private long parmRecIDField;
        
        private string parmRightSideCommentsField;
        
        private string parmRoofCommentsField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private string parmWipersCommentsField;
        
        private string parmlFBumperCommentsField;
        
        private string parmleftSideCommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBonetComments {
            get {
                return this.parmBonetCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBonetCommentsField, value) != true)) {
                    this.parmBonetCommentsField = value;
                    this.RaisePropertyChanged("parmBonetComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmBootComments {
            get {
                return this.parmBootCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmBootCommentsField, value) != true)) {
                    this.parmBootCommentsField = value;
                    this.RaisePropertyChanged("parmBootComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDoorHandlesComments {
            get {
                return this.parmDoorHandlesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDoorHandlesCommentsField, value) != true)) {
                    this.parmDoorHandlesCommentsField = value;
                    this.RaisePropertyChanged("parmDoorHandlesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHailDamageComments {
            get {
                return this.parmHailDamageCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHailDamageCommentsField, value) != true)) {
                    this.parmHailDamageCommentsField = value;
                    this.RaisePropertyChanged("parmHailDamageComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHubcapsComments {
            get {
                return this.parmHubcapsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHubcapsCommentsField, value) != true)) {
                    this.parmHubcapsCommentsField = value;
                    this.RaisePropertyChanged("parmHubcapsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBonnet {
            get {
                return this.parmIsDamagedBonnetField;
            }
            set {
                if ((this.parmIsDamagedBonnetField.Equals(value) != true)) {
                    this.parmIsDamagedBonnetField = value;
                    this.RaisePropertyChanged("parmIsDamagedBonnet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedBoot {
            get {
                return this.parmIsDamagedBootField;
            }
            set {
                if ((this.parmIsDamagedBootField.Equals(value) != true)) {
                    this.parmIsDamagedBootField = value;
                    this.RaisePropertyChanged("parmIsDamagedBoot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDoorHandles {
            get {
                return this.parmIsDamagedDoorHandlesField;
            }
            set {
                if ((this.parmIsDamagedDoorHandlesField.Equals(value) != true)) {
                    this.parmIsDamagedDoorHandlesField = value;
                    this.RaisePropertyChanged("parmIsDamagedDoorHandles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHailDamage {
            get {
                return this.parmIsDamagedHailDamageField;
            }
            set {
                if ((this.parmIsDamagedHailDamageField.Equals(value) != true)) {
                    this.parmIsDamagedHailDamageField = value;
                    this.RaisePropertyChanged("parmIsDamagedHailDamage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHubcaps {
            get {
                return this.parmIsDamagedHubcapsField;
            }
            set {
                if ((this.parmIsDamagedHubcapsField.Equals(value) != true)) {
                    this.parmIsDamagedHubcapsField = value;
                    this.RaisePropertyChanged("parmIsDamagedHubcaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFBumper {
            get {
                return this.parmIsDamagedLFBumperField;
            }
            set {
                if ((this.parmIsDamagedLFBumperField.Equals(value) != true)) {
                    this.parmIsDamagedLFBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFDoor {
            get {
                return this.parmIsDamagedLFDoorField;
            }
            set {
                if ((this.parmIsDamagedLFDoorField.Equals(value) != true)) {
                    this.parmIsDamagedLFDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFWheelArch {
            get {
                return this.parmIsDamagedLFWheelArchField;
            }
            set {
                if ((this.parmIsDamagedLFWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedLFWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRBumper {
            get {
                return this.parmIsDamagedLRBumperField;
            }
            set {
                if ((this.parmIsDamagedLRBumperField.Equals(value) != true)) {
                    this.parmIsDamagedLRBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRDoor {
            get {
                return this.parmIsDamagedLRDoorField;
            }
            set {
                if ((this.parmIsDamagedLRDoorField.Equals(value) != true)) {
                    this.parmIsDamagedLRDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRWheelArch {
            get {
                return this.parmIsDamagedLRWheelArchField;
            }
            set {
                if ((this.parmIsDamagedLRWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedLRWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLeftSide {
            get {
                return this.parmIsDamagedLeftSideField;
            }
            set {
                if ((this.parmIsDamagedLeftSideField.Equals(value) != true)) {
                    this.parmIsDamagedLeftSideField = value;
                    this.RaisePropertyChanged("parmIsDamagedLeftSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFBumper {
            get {
                return this.parmIsDamagedRFBumperField;
            }
            set {
                if ((this.parmIsDamagedRFBumperField.Equals(value) != true)) {
                    this.parmIsDamagedRFBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFDoor {
            get {
                return this.parmIsDamagedRFDoorField;
            }
            set {
                if ((this.parmIsDamagedRFDoorField.Equals(value) != true)) {
                    this.parmIsDamagedRFDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFWheelArch {
            get {
                return this.parmIsDamagedRFWheelArchField;
            }
            set {
                if ((this.parmIsDamagedRFWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedRFWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRBumper {
            get {
                return this.parmIsDamagedRRBumperField;
            }
            set {
                if ((this.parmIsDamagedRRBumperField.Equals(value) != true)) {
                    this.parmIsDamagedRRBumperField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRBumper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRDoor {
            get {
                return this.parmIsDamagedRRDoorField;
            }
            set {
                if ((this.parmIsDamagedRRDoorField.Equals(value) != true)) {
                    this.parmIsDamagedRRDoorField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRDoor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRWheelArch {
            get {
                return this.parmIsDamagedRRWheelArchField;
            }
            set {
                if ((this.parmIsDamagedRRWheelArchField.Equals(value) != true)) {
                    this.parmIsDamagedRRWheelArchField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRWheelArch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRightSide {
            get {
                return this.parmIsDamagedRightSideField;
            }
            set {
                if ((this.parmIsDamagedRightSideField.Equals(value) != true)) {
                    this.parmIsDamagedRightSideField = value;
                    this.RaisePropertyChanged("parmIsDamagedRightSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRoof {
            get {
                return this.parmIsDamagedRoofField;
            }
            set {
                if ((this.parmIsDamagedRoofField.Equals(value) != true)) {
                    this.parmIsDamagedRoofField = value;
                    this.RaisePropertyChanged("parmIsDamagedRoof");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWipers {
            get {
                return this.parmIsDamagedWipersField;
            }
            set {
                if ((this.parmIsDamagedWipersField.Equals(value) != true)) {
                    this.parmIsDamagedWipersField = value;
                    this.RaisePropertyChanged("parmIsDamagedWipers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFDoorComments {
            get {
                return this.parmLFDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDoorCommentsField, value) != true)) {
                    this.parmLFDoorCommentsField = value;
                    this.RaisePropertyChanged("parmLFDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFWheelArchComments {
            get {
                return this.parmLFWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFWheelArchCommentsField, value) != true)) {
                    this.parmLFWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmLFWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRBumperComments {
            get {
                return this.parmLRBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRBumperCommentsField, value) != true)) {
                    this.parmLRBumperCommentsField = value;
                    this.RaisePropertyChanged("parmLRBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRDoorComments {
            get {
                return this.parmLRDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDoorCommentsField, value) != true)) {
                    this.parmLRDoorCommentsField = value;
                    this.RaisePropertyChanged("parmLRDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRWheelArchComments {
            get {
                return this.parmLRWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRWheelArchCommentsField, value) != true)) {
                    this.parmLRWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmLRWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFBumperComments {
            get {
                return this.parmRFBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFBumperCommentsField, value) != true)) {
                    this.parmRFBumperCommentsField = value;
                    this.RaisePropertyChanged("parmRFBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFDoorComments {
            get {
                return this.parmRFDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDoorCommentsField, value) != true)) {
                    this.parmRFDoorCommentsField = value;
                    this.RaisePropertyChanged("parmRFDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFWheelArchComments {
            get {
                return this.parmRFWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFWheelArchCommentsField, value) != true)) {
                    this.parmRFWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmRFWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRBumperComments {
            get {
                return this.parmRRBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRBumperCommentsField, value) != true)) {
                    this.parmRRBumperCommentsField = value;
                    this.RaisePropertyChanged("parmRRBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRDoorComments {
            get {
                return this.parmRRDoorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDoorCommentsField, value) != true)) {
                    this.parmRRDoorCommentsField = value;
                    this.RaisePropertyChanged("parmRRDoorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRWheelArchComments {
            get {
                return this.parmRRWheelArchCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRWheelArchCommentsField, value) != true)) {
                    this.parmRRWheelArchCommentsField = value;
                    this.RaisePropertyChanged("parmRRWheelArchComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRightSideComments {
            get {
                return this.parmRightSideCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRightSideCommentsField, value) != true)) {
                    this.parmRightSideCommentsField = value;
                    this.RaisePropertyChanged("parmRightSideComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRoofComments {
            get {
                return this.parmRoofCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRoofCommentsField, value) != true)) {
                    this.parmRoofCommentsField = value;
                    this.RaisePropertyChanged("parmRoofComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmWipersComments {
            get {
                return this.parmWipersCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWipersCommentsField, value) != true)) {
                    this.parmWipersCommentsField = value;
                    this.RaisePropertyChanged("parmWipersComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmlFBumperComments {
            get {
                return this.parmlFBumperCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmlFBumperCommentsField, value) != true)) {
                    this.parmlFBumperCommentsField = value;
                    this.RaisePropertyChanged("parmlFBumperComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmleftSideComments {
            get {
                return this.parmleftSideCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmleftSideCommentsField, value) != true)) {
                    this.parmleftSideCommentsField = value;
                    this.RaisePropertyChanged("parmleftSideComments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerGlassContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiPassengerGlassContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmExitRearViewMirrorCommentsField;
        
        private string parmHeadLightsCommentsField;
        
        private string parmIndicatorLensesCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedExitRearViewMirrorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadLightsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedIndicatorLensesField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearGlassField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSideGlassField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTailLightsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWindScreenField;
        
        private string parmRearGlassCommentsField;
        
        private long parmRecIDField;
        
        private string parmSideGlassCommentsField;
        
        private int parmTableIdField;
        
        private string parmTailLightsCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleTypeField;
        
        private string parmWindScreenCommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmExitRearViewMirrorComments {
            get {
                return this.parmExitRearViewMirrorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmExitRearViewMirrorCommentsField, value) != true)) {
                    this.parmExitRearViewMirrorCommentsField = value;
                    this.RaisePropertyChanged("parmExitRearViewMirrorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHeadLightsComments {
            get {
                return this.parmHeadLightsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHeadLightsCommentsField, value) != true)) {
                    this.parmHeadLightsCommentsField = value;
                    this.RaisePropertyChanged("parmHeadLightsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmIndicatorLensesComments {
            get {
                return this.parmIndicatorLensesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmIndicatorLensesCommentsField, value) != true)) {
                    this.parmIndicatorLensesCommentsField = value;
                    this.RaisePropertyChanged("parmIndicatorLensesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedExitRearViewMirror {
            get {
                return this.parmIsDamagedExitRearViewMirrorField;
            }
            set {
                if ((this.parmIsDamagedExitRearViewMirrorField.Equals(value) != true)) {
                    this.parmIsDamagedExitRearViewMirrorField = value;
                    this.RaisePropertyChanged("parmIsDamagedExitRearViewMirror");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHeadLights {
            get {
                return this.parmIsDamagedHeadLightsField;
            }
            set {
                if ((this.parmIsDamagedHeadLightsField.Equals(value) != true)) {
                    this.parmIsDamagedHeadLightsField = value;
                    this.RaisePropertyChanged("parmIsDamagedHeadLights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedIndicatorLenses {
            get {
                return this.parmIsDamagedIndicatorLensesField;
            }
            set {
                if ((this.parmIsDamagedIndicatorLensesField.Equals(value) != true)) {
                    this.parmIsDamagedIndicatorLensesField = value;
                    this.RaisePropertyChanged("parmIsDamagedIndicatorLenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearGlass {
            get {
                return this.parmIsDamagedRearGlassField;
            }
            set {
                if ((this.parmIsDamagedRearGlassField.Equals(value) != true)) {
                    this.parmIsDamagedRearGlassField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearGlass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSideGlass {
            get {
                return this.parmIsDamagedSideGlassField;
            }
            set {
                if ((this.parmIsDamagedSideGlassField.Equals(value) != true)) {
                    this.parmIsDamagedSideGlassField = value;
                    this.RaisePropertyChanged("parmIsDamagedSideGlass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTailLights {
            get {
                return this.parmIsDamagedTailLightsField;
            }
            set {
                if ((this.parmIsDamagedTailLightsField.Equals(value) != true)) {
                    this.parmIsDamagedTailLightsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTailLights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedWindScreen {
            get {
                return this.parmIsDamagedWindScreenField;
            }
            set {
                if ((this.parmIsDamagedWindScreenField.Equals(value) != true)) {
                    this.parmIsDamagedWindScreenField = value;
                    this.RaisePropertyChanged("parmIsDamagedWindScreen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRearGlassComments {
            get {
                return this.parmRearGlassCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearGlassCommentsField, value) != true)) {
                    this.parmRearGlassCommentsField = value;
                    this.RaisePropertyChanged("parmRearGlassComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSideGlassComments {
            get {
                return this.parmSideGlassCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSideGlassCommentsField, value) != true)) {
                    this.parmSideGlassCommentsField = value;
                    this.RaisePropertyChanged("parmSideGlassComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTailLightsComments {
            get {
                return this.parmTailLightsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTailLightsCommentsField, value) != true)) {
                    this.parmTailLightsCommentsField = value;
                    this.RaisePropertyChanged("parmTailLightsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmWindScreenComments {
            get {
                return this.parmWindScreenCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmWindScreenCommentsField, value) != true)) {
                    this.parmWindScreenCommentsField = value;
                    this.RaisePropertyChanged("parmWindScreenComments");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerMechConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiPassengerMechConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private long parmRecIDField;
        
        private string parmRemarksField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRemarks {
            get {
                return this.parmRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRemarksField, value) != true)) {
                    this.parmRemarksField = value;
                    this.RaisePropertyChanged("parmRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiPassengerTrimInteriorContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiPassengerTrimInteriorContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCarpetsCommentsField;
        
        private string parmDashCommentsField;
        
        private string parmDriversSeatCommentsField;
        
        private string parmInternalTrimCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCarpetsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDashField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDriversSeatField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInternalTrimField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFDoorTrimField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRDoorTrimField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPassengerSeatField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFDoorTrimField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRDoorTrimField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSeatField;
        
        private string parmLFDoorTrimCommentsField;
        
        private string parmLRDoorTrimCommentsField;
        
        private string parmPassengerSeatCommentsField;
        
        private string parmRFDoorTrimCommentsField;
        
        private string parmRRDoorTrimCommentsField;
        
        private string parmRearSeatCommentsField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCarpetsComments {
            get {
                return this.parmCarpetsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCarpetsCommentsField, value) != true)) {
                    this.parmCarpetsCommentsField = value;
                    this.RaisePropertyChanged("parmCarpetsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDashComments {
            get {
                return this.parmDashCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDashCommentsField, value) != true)) {
                    this.parmDashCommentsField = value;
                    this.RaisePropertyChanged("parmDashComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDriversSeatComments {
            get {
                return this.parmDriversSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDriversSeatCommentsField, value) != true)) {
                    this.parmDriversSeatCommentsField = value;
                    this.RaisePropertyChanged("parmDriversSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmInternalTrimComments {
            get {
                return this.parmInternalTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmInternalTrimCommentsField, value) != true)) {
                    this.parmInternalTrimCommentsField = value;
                    this.RaisePropertyChanged("parmInternalTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedCarpets {
            get {
                return this.parmIsDamagedCarpetsField;
            }
            set {
                if ((this.parmIsDamagedCarpetsField.Equals(value) != true)) {
                    this.parmIsDamagedCarpetsField = value;
                    this.RaisePropertyChanged("parmIsDamagedCarpets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDash {
            get {
                return this.parmIsDamagedDashField;
            }
            set {
                if ((this.parmIsDamagedDashField.Equals(value) != true)) {
                    this.parmIsDamagedDashField = value;
                    this.RaisePropertyChanged("parmIsDamagedDash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedDriversSeat {
            get {
                return this.parmIsDamagedDriversSeatField;
            }
            set {
                if ((this.parmIsDamagedDriversSeatField.Equals(value) != true)) {
                    this.parmIsDamagedDriversSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedDriversSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedInternalTrim {
            get {
                return this.parmIsDamagedInternalTrimField;
            }
            set {
                if ((this.parmIsDamagedInternalTrimField.Equals(value) != true)) {
                    this.parmIsDamagedInternalTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedInternalTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLFDoorTrim {
            get {
                return this.parmIsDamagedLFDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedLFDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedLFDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedLFDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedLRDoorTrim {
            get {
                return this.parmIsDamagedLRDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedLRDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedLRDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedLRDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedPassengerSeat {
            get {
                return this.parmIsDamagedPassengerSeatField;
            }
            set {
                if ((this.parmIsDamagedPassengerSeatField.Equals(value) != true)) {
                    this.parmIsDamagedPassengerSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedPassengerSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRFDoorTrim {
            get {
                return this.parmIsDamagedRFDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedRFDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedRFDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedRFDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRRDoorTrim {
            get {
                return this.parmIsDamagedRRDoorTrimField;
            }
            set {
                if ((this.parmIsDamagedRRDoorTrimField.Equals(value) != true)) {
                    this.parmIsDamagedRRDoorTrimField = value;
                    this.RaisePropertyChanged("parmIsDamagedRRDoorTrim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSeat {
            get {
                return this.parmIsDamagedRearSeatField;
            }
            set {
                if ((this.parmIsDamagedRearSeatField.Equals(value) != true)) {
                    this.parmIsDamagedRearSeatField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearSeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFDoorTrimComments {
            get {
                return this.parmLFDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDoorTrimCommentsField, value) != true)) {
                    this.parmLFDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmLFDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRDoorTrimComments {
            get {
                return this.parmLRDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDoorTrimCommentsField, value) != true)) {
                    this.parmLRDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmLRDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPassengerSeatComments {
            get {
                return this.parmPassengerSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPassengerSeatCommentsField, value) != true)) {
                    this.parmPassengerSeatCommentsField = value;
                    this.RaisePropertyChanged("parmPassengerSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFDoorTrimComments {
            get {
                return this.parmRFDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDoorTrimCommentsField, value) != true)) {
                    this.parmRFDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmRFDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRDoorTrimComments {
            get {
                return this.parmRRDoorTrimCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDoorTrimCommentsField, value) != true)) {
                    this.parmRRDoorTrimCommentsField = value;
                    this.RaisePropertyChanged("parmRRDoorTrimComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRearSeatComments {
            get {
                return this.parmRearSeatCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearSeatCommentsField, value) != true)) {
                    this.parmRearSeatCommentsField = value;
                    this.RaisePropertyChanged("parmRearSeatComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKMobiPassengerTyreConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MZKMobiPassengerTyreConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmLFCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLFConditionField;
        
        private string parmLFDepthField;
        
        private string parmLFMakeField;
        
        private string parmLRCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLRConditionField;
        
        private string parmLRDepthField;
        
        private string parmLRMakeField;
        
        private string parmRFCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRFConditionField;
        
        private string parmRFDepthField;
        
        private string parmRFMakeField;
        
        private string parmRRCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRRConditionField;
        
        private string parmRRDepthField;
        
        private string parmRRMakeField;
        
        private long parmRecIDField;
        
        private string parmSpareCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmSpareConditionField;
        
        private string parmSpareDepthField;
        
        private string parmSpareMakeField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFComments {
            get {
                return this.parmLFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFCommentsField, value) != true)) {
                    this.parmLFCommentsField = value;
                    this.RaisePropertyChanged("parmLFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLFCondition {
            get {
                return this.parmLFConditionField;
            }
            set {
                if ((this.parmLFConditionField.Equals(value) != true)) {
                    this.parmLFConditionField = value;
                    this.RaisePropertyChanged("parmLFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFDepth {
            get {
                return this.parmLFDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFDepthField, value) != true)) {
                    this.parmLFDepthField = value;
                    this.RaisePropertyChanged("parmLFDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLFMake {
            get {
                return this.parmLFMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLFMakeField, value) != true)) {
                    this.parmLFMakeField = value;
                    this.RaisePropertyChanged("parmLFMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRComments {
            get {
                return this.parmLRCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRCommentsField, value) != true)) {
                    this.parmLRCommentsField = value;
                    this.RaisePropertyChanged("parmLRComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmLRCondition {
            get {
                return this.parmLRConditionField;
            }
            set {
                if ((this.parmLRConditionField.Equals(value) != true)) {
                    this.parmLRConditionField = value;
                    this.RaisePropertyChanged("parmLRCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRDepth {
            get {
                return this.parmLRDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRDepthField, value) != true)) {
                    this.parmLRDepthField = value;
                    this.RaisePropertyChanged("parmLRDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmLRMake {
            get {
                return this.parmLRMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmLRMakeField, value) != true)) {
                    this.parmLRMakeField = value;
                    this.RaisePropertyChanged("parmLRMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFComments {
            get {
                return this.parmRFCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFCommentsField, value) != true)) {
                    this.parmRFCommentsField = value;
                    this.RaisePropertyChanged("parmRFComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRFCondition {
            get {
                return this.parmRFConditionField;
            }
            set {
                if ((this.parmRFConditionField.Equals(value) != true)) {
                    this.parmRFConditionField = value;
                    this.RaisePropertyChanged("parmRFCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFDepth {
            get {
                return this.parmRFDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFDepthField, value) != true)) {
                    this.parmRFDepthField = value;
                    this.RaisePropertyChanged("parmRFDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRFMake {
            get {
                return this.parmRFMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRFMakeField, value) != true)) {
                    this.parmRFMakeField = value;
                    this.RaisePropertyChanged("parmRFMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRComments {
            get {
                return this.parmRRCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRCommentsField, value) != true)) {
                    this.parmRRCommentsField = value;
                    this.RaisePropertyChanged("parmRRComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmRRCondition {
            get {
                return this.parmRRConditionField;
            }
            set {
                if ((this.parmRRConditionField.Equals(value) != true)) {
                    this.parmRRConditionField = value;
                    this.RaisePropertyChanged("parmRRCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRDepth {
            get {
                return this.parmRRDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRDepthField, value) != true)) {
                    this.parmRRDepthField = value;
                    this.RaisePropertyChanged("parmRRDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRRMake {
            get {
                return this.parmRRMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRRMakeField, value) != true)) {
                    this.parmRRMakeField = value;
                    this.RaisePropertyChanged("parmRRMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareComments {
            get {
                return this.parmSpareCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareCommentsField, value) != true)) {
                    this.parmSpareCommentsField = value;
                    this.RaisePropertyChanged("parmSpareComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmSpareCondition {
            get {
                return this.parmSpareConditionField;
            }
            set {
                if ((this.parmSpareConditionField.Equals(value) != true)) {
                    this.parmSpareConditionField = value;
                    this.RaisePropertyChanged("parmSpareCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareDepth {
            get {
                return this.parmSpareDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareDepthField, value) != true)) {
                    this.parmSpareDepthField = value;
                    this.RaisePropertyChanged("parmSpareDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSpareMake {
            get {
                return this.parmSpareMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSpareMakeField, value) != true)) {
                    this.parmSpareMakeField = value;
                    this.RaisePropertyChanged("parmSpareMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiTrailorAccessoriesContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiTrailorAccessoriesContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasDecalsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasReflectiveTapeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectiveTapeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSignWritingField;
        
        private long parmRecIDField;
        
        private string parmReflectiveTapeCommentsField;
        
        private string parmSignWritingCommentsField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasDecals {
            get {
                return this.parmHasDecalsField;
            }
            set {
                if ((this.parmHasDecalsField.Equals(value) != true)) {
                    this.parmHasDecalsField = value;
                    this.RaisePropertyChanged("parmHasDecals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmHasReflectiveTape {
            get {
                return this.parmHasReflectiveTapeField;
            }
            set {
                if ((this.parmHasReflectiveTapeField.Equals(value) != true)) {
                    this.parmHasReflectiveTapeField = value;
                    this.RaisePropertyChanged("parmHasReflectiveTape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectiveTape {
            get {
                return this.parmIsDamagedReflectiveTapeField;
            }
            set {
                if ((this.parmIsDamagedReflectiveTapeField.Equals(value) != true)) {
                    this.parmIsDamagedReflectiveTapeField = value;
                    this.RaisePropertyChanged("parmIsDamagedReflectiveTape");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedSignWriting {
            get {
                return this.parmIsDamagedSignWritingField;
            }
            set {
                if ((this.parmIsDamagedSignWritingField.Equals(value) != true)) {
                    this.parmIsDamagedSignWritingField = value;
                    this.RaisePropertyChanged("parmIsDamagedSignWriting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmReflectiveTapeComments {
            get {
                return this.parmReflectiveTapeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmReflectiveTapeCommentsField, value) != true)) {
                    this.parmReflectiveTapeCommentsField = value;
                    this.RaisePropertyChanged("parmReflectiveTapeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmSignWritingComments {
            get {
                return this.parmSignWritingCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmSignWritingCommentsField, value) != true)) {
                    this.parmSignWritingCommentsField = value;
                    this.RaisePropertyChanged("parmSignWritingComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiTrailorGlassContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiTrailorGlassContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmIndicatorLensesCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedIndicatorLensesField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectorsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTailLightsField;
        
        private long parmRecIDField;
        
        private string parmReflectorsCommentsField;
        
        private int parmTableIdField;
        
        private string parmTailLightsCommentsField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmIndicatorLensesComments {
            get {
                return this.parmIndicatorLensesCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmIndicatorLensesCommentsField, value) != true)) {
                    this.parmIndicatorLensesCommentsField = value;
                    this.RaisePropertyChanged("parmIndicatorLensesComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedIndicatorLenses {
            get {
                return this.parmIsDamagedIndicatorLensesField;
            }
            set {
                if ((this.parmIsDamagedIndicatorLensesField.Equals(value) != true)) {
                    this.parmIsDamagedIndicatorLensesField = value;
                    this.RaisePropertyChanged("parmIsDamagedIndicatorLenses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedReflectors {
            get {
                return this.parmIsDamagedReflectorsField;
            }
            set {
                if ((this.parmIsDamagedReflectorsField.Equals(value) != true)) {
                    this.parmIsDamagedReflectorsField = value;
                    this.RaisePropertyChanged("parmIsDamagedReflectors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedTailLights {
            get {
                return this.parmIsDamagedTailLightsField;
            }
            set {
                if ((this.parmIsDamagedTailLightsField.Equals(value) != true)) {
                    this.parmIsDamagedTailLightsField = value;
                    this.RaisePropertyChanged("parmIsDamagedTailLights");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmReflectorsComments {
            get {
                return this.parmReflectorsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmReflectorsCommentsField, value) != true)) {
                    this.parmReflectorsCommentsField = value;
                    this.RaisePropertyChanged("parmReflectorsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTailLightsComments {
            get {
                return this.parmTailLightsCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTailLightsCommentsField, value) != true)) {
                    this.parmTailLightsCommentsField = value;
                    this.RaisePropertyChanged("parmTailLightsComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMobiTrailorMechConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMobiTrailorMechConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmFootBrakeCommentsField;
        
        private string parmFrontSuppressionCommentsField;
        
        private string parmHandBrakeCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFootBrakeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontSuppressionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHandBrakeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSuppressionField;
        
        private string parmRearSuppressionCommentsField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFootBrakeComments {
            get {
                return this.parmFootBrakeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFootBrakeCommentsField, value) != true)) {
                    this.parmFootBrakeCommentsField = value;
                    this.RaisePropertyChanged("parmFootBrakeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmFrontSuppressionComments {
            get {
                return this.parmFrontSuppressionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmFrontSuppressionCommentsField, value) != true)) {
                    this.parmFrontSuppressionCommentsField = value;
                    this.RaisePropertyChanged("parmFrontSuppressionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmHandBrakeComments {
            get {
                return this.parmHandBrakeCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmHandBrakeCommentsField, value) != true)) {
                    this.parmHandBrakeCommentsField = value;
                    this.RaisePropertyChanged("parmHandBrakeComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFootBrake {
            get {
                return this.parmIsDamagedFootBrakeField;
            }
            set {
                if ((this.parmIsDamagedFootBrakeField.Equals(value) != true)) {
                    this.parmIsDamagedFootBrakeField = value;
                    this.RaisePropertyChanged("parmIsDamagedFootBrake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedFrontSuppression {
            get {
                return this.parmIsDamagedFrontSuppressionField;
            }
            set {
                if ((this.parmIsDamagedFrontSuppressionField.Equals(value) != true)) {
                    this.parmIsDamagedFrontSuppressionField = value;
                    this.RaisePropertyChanged("parmIsDamagedFrontSuppression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedHandBrake {
            get {
                return this.parmIsDamagedHandBrakeField;
            }
            set {
                if ((this.parmIsDamagedHandBrakeField.Equals(value) != true)) {
                    this.parmIsDamagedHandBrakeField = value;
                    this.RaisePropertyChanged("parmIsDamagedHandBrake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmIsDamagedRearSuppression {
            get {
                return this.parmIsDamagedRearSuppressionField;
            }
            set {
                if ((this.parmIsDamagedRearSuppressionField.Equals(value) != true)) {
                    this.parmIsDamagedRearSuppressionField = value;
                    this.RaisePropertyChanged("parmIsDamagedRearSuppression");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRearSuppressionComments {
            get {
                return this.parmRearSuppressionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRearSuppressionCommentsField, value) != true)) {
                    this.parmRearSuppressionCommentsField = value;
                    this.RaisePropertyChanged("parmRearSuppressionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKVehicleInspectionTableContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorProofOfInspection))]
    internal partial class MZKVehicleInspectionTableContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCaseIdField;
        
        private string parmCommentsField;
        
        private System.DateTime parmCompanyRepSignDateTimeField;
        
        private string parmCustomerCommentsField;
        
        private System.DateTime parmCustomerRepSignDateTimeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmGeneralConditionField;
        
        private long parmRecIDField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKRecommendationEnum parmRecommendationField;
        
        private string parmTaskIdField;
        
        private long parmVehicleInspectorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseId {
            get {
                return this.parmCaseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIdField, value) != true)) {
                    this.parmCaseIdField = value;
                    this.RaisePropertyChanged("parmCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCompanyRepSignDateTime {
            get {
                return this.parmCompanyRepSignDateTimeField;
            }
            set {
                if ((this.parmCompanyRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCompanyRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCompanyRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustomerComments {
            get {
                return this.parmCustomerCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustomerCommentsField, value) != true)) {
                    this.parmCustomerCommentsField = value;
                    this.RaisePropertyChanged("parmCustomerComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCustomerRepSignDateTime {
            get {
                return this.parmCustomerRepSignDateTimeField;
            }
            set {
                if ((this.parmCustomerRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCustomerRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCustomerRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmGeneralCondition {
            get {
                return this.parmGeneralConditionField;
            }
            set {
                if ((this.parmGeneralConditionField.Equals(value) != true)) {
                    this.parmGeneralConditionField = value;
                    this.RaisePropertyChanged("parmGeneralCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKRecommendationEnum parmRecommendation {
            get {
                return this.parmRecommendationField;
            }
            set {
                if ((this.parmRecommendationField.Equals(value) != true)) {
                    this.parmRecommendationField = value;
                    this.RaisePropertyChanged("parmRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTaskId {
            get {
                return this.parmTaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTaskIdField, value) != true)) {
                    this.parmTaskIdField = value;
                    this.RaisePropertyChanged("parmTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInspector {
            get {
                return this.parmVehicleInspectorField;
            }
            set {
                if ((this.parmVehicleInspectorField.Equals(value) != true)) {
                    this.parmVehicleInspectorField = value;
                    this.RaisePropertyChanged("parmVehicleInspector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKMobiTrailorProofOfInspection", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MZKMobiTrailorProofOfInspection : Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract {
        
        private System.DateTime parmCompanyRepSignDateTime1Field;
        
        private System.DateTime parmCustomerRepSignDateTime1Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCompanyRepSignDateTime1 {
            get {
                return this.parmCompanyRepSignDateTime1Field;
            }
            set {
                if ((this.parmCompanyRepSignDateTime1Field.Equals(value) != true)) {
                    this.parmCompanyRepSignDateTime1Field = value;
                    this.RaisePropertyChanged("parmCompanyRepSignDateTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCustomerRepSignDateTime1 {
            get {
                return this.parmCustomerRepSignDateTime1Field;
            }
            set {
                if ((this.parmCustomerRepSignDateTime1Field.Equals(value) != true)) {
                    this.parmCustomerRepSignDateTime1Field = value;
                    this.RaisePropertyChanged("parmCustomerRepSignDateTime1");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKMobiTrailorTyreConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MZKMobiTrailorTyreConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCommentField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmConditionField;
        
        private string parmDepthField;
        
        private string parmMakeField;
        
        private string parmPositionField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComment {
            get {
                return this.parmCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentField, value) != true)) {
                    this.parmCommentField = value;
                    this.RaisePropertyChanged("parmComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKConditionEnum parmCondition {
            get {
                return this.parmConditionField;
            }
            set {
                if ((this.parmConditionField.Equals(value) != true)) {
                    this.parmConditionField = value;
                    this.RaisePropertyChanged("parmCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmDepth {
            get {
                return this.parmDepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmDepthField, value) != true)) {
                    this.parmDepthField = value;
                    this.RaisePropertyChanged("parmDepth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmPosition {
            get {
                return this.parmPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.parmPositionField, value) != true)) {
                    this.parmPositionField = value;
                    this.RaisePropertyChanged("parmPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTasksContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkTasksContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmCaseCategoryField;
        
        private string parmCaseIDField;
        
        private long parmCaseServiceRecIdField;
        
        private string parmCategoryTypeField;
        
        private long parmCollectionRecIdField;
        
        private string parmCommentsField;
        
        private System.DateTime parmConfirmedDueDateField;
        
        private string parmContactPersonAddressField;
        
        private string parmContactPersonNameField;
        
        private string parmContactPersonPhoneField;
        
        private string parmCustAddressField;
        
        private string parmCustEmailField;
        
        private string parmCustIdField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.EEPActionStep parmEEPActionStepField;
        
        private string parmProcessStepField;
        
        private long parmProcessStepRecIDField;
        
        private long parmRecIDField;
        
        private string parmRegistrationNumField;
        
        private long parmServiceRecIdField;
        
        private string parmStatusField;
        
        private System.DateTime parmStatusDueDateField;
        
        private int parmTableIdField;
        
        private string parmTaskIDField;
        
        private string parmUserIDField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleCollectionAction parmVehicleCollectionActionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseCategory {
            get {
                return this.parmCaseCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseCategoryField, value) != true)) {
                    this.parmCaseCategoryField = value;
                    this.RaisePropertyChanged("parmCaseCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseID {
            get {
                return this.parmCaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIDField, value) != true)) {
                    this.parmCaseIDField = value;
                    this.RaisePropertyChanged("parmCaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmCaseServiceRecId {
            get {
                return this.parmCaseServiceRecIdField;
            }
            set {
                if ((this.parmCaseServiceRecIdField.Equals(value) != true)) {
                    this.parmCaseServiceRecIdField = value;
                    this.RaisePropertyChanged("parmCaseServiceRecId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCategoryType {
            get {
                return this.parmCategoryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCategoryTypeField, value) != true)) {
                    this.parmCategoryTypeField = value;
                    this.RaisePropertyChanged("parmCategoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmCollectionRecId {
            get {
                return this.parmCollectionRecIdField;
            }
            set {
                if ((this.parmCollectionRecIdField.Equals(value) != true)) {
                    this.parmCollectionRecIdField = value;
                    this.RaisePropertyChanged("parmCollectionRecId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmConfirmedDueDate {
            get {
                return this.parmConfirmedDueDateField;
            }
            set {
                if ((this.parmConfirmedDueDateField.Equals(value) != true)) {
                    this.parmConfirmedDueDateField = value;
                    this.RaisePropertyChanged("parmConfirmedDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmContactPersonAddress {
            get {
                return this.parmContactPersonAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmContactPersonAddressField, value) != true)) {
                    this.parmContactPersonAddressField = value;
                    this.RaisePropertyChanged("parmContactPersonAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmContactPersonName {
            get {
                return this.parmContactPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmContactPersonNameField, value) != true)) {
                    this.parmContactPersonNameField = value;
                    this.RaisePropertyChanged("parmContactPersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmContactPersonPhone {
            get {
                return this.parmContactPersonPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmContactPersonPhoneField, value) != true)) {
                    this.parmContactPersonPhoneField = value;
                    this.RaisePropertyChanged("parmContactPersonPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustEmail {
            get {
                return this.parmCustEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustEmailField, value) != true)) {
                    this.parmCustEmailField = value;
                    this.RaisePropertyChanged("parmCustEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustId {
            get {
                return this.parmCustIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustIdField, value) != true)) {
                    this.parmCustIdField = value;
                    this.RaisePropertyChanged("parmCustId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.EEPActionStep parmEEPActionStep {
            get {
                return this.parmEEPActionStepField;
            }
            set {
                if ((this.parmEEPActionStepField.Equals(value) != true)) {
                    this.parmEEPActionStepField = value;
                    this.RaisePropertyChanged("parmEEPActionStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmProcessStep {
            get {
                return this.parmProcessStepField;
            }
            set {
                if ((object.ReferenceEquals(this.parmProcessStepField, value) != true)) {
                    this.parmProcessStepField = value;
                    this.RaisePropertyChanged("parmProcessStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmProcessStepRecID {
            get {
                return this.parmProcessStepRecIDField;
            }
            set {
                if ((this.parmProcessStepRecIDField.Equals(value) != true)) {
                    this.parmProcessStepRecIDField = value;
                    this.RaisePropertyChanged("parmProcessStepRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRegistrationNum {
            get {
                return this.parmRegistrationNumField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRegistrationNumField, value) != true)) {
                    this.parmRegistrationNumField = value;
                    this.RaisePropertyChanged("parmRegistrationNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmServiceRecId {
            get {
                return this.parmServiceRecIdField;
            }
            set {
                if ((this.parmServiceRecIdField.Equals(value) != true)) {
                    this.parmServiceRecIdField = value;
                    this.RaisePropertyChanged("parmServiceRecId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmStatus {
            get {
                return this.parmStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.parmStatusField, value) != true)) {
                    this.parmStatusField = value;
                    this.RaisePropertyChanged("parmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmStatusDueDate {
            get {
                return this.parmStatusDueDateField;
            }
            set {
                if ((this.parmStatusDueDateField.Equals(value) != true)) {
                    this.parmStatusDueDateField = value;
                    this.RaisePropertyChanged("parmStatusDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTaskID {
            get {
                return this.parmTaskIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTaskIDField, value) != true)) {
                    this.parmTaskIDField = value;
                    this.RaisePropertyChanged("parmTaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUserID {
            get {
                return this.parmUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserIDField, value) != true)) {
                    this.parmUserIDField = value;
                    this.RaisePropertyChanged("parmUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleCollectionAction parmVehicleCollectionAction {
            get {
                return this.parmVehicleCollectionActionField;
            }
            set {
                if ((this.parmVehicleCollectionActionField.Equals(value) != true)) {
                    this.parmVehicleCollectionActionField = value;
                    this.RaisePropertyChanged("parmVehicleCollectionAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkValidateUserContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkValidateUserContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmAddressField;
        
        private string parmCompanyField;
        
        private string parmCompanyNameField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkLoginType parmLoginTypeField;
        
        private string parmUserIDField;
        
        private string parmUserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmAddress {
            get {
                return this.parmAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmAddressField, value) != true)) {
                    this.parmAddressField = value;
                    this.RaisePropertyChanged("parmAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCompany {
            get {
                return this.parmCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCompanyField, value) != true)) {
                    this.parmCompanyField = value;
                    this.RaisePropertyChanged("parmCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCompanyName {
            get {
                return this.parmCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCompanyNameField, value) != true)) {
                    this.parmCompanyNameField = value;
                    this.RaisePropertyChanged("parmCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkLoginType parmLoginType {
            get {
                return this.parmLoginTypeField;
            }
            set {
                if ((this.parmLoginTypeField.Equals(value) != true)) {
                    this.parmLoginTypeField = value;
                    this.RaisePropertyChanged("parmLoginType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUserID {
            get {
                return this.parmUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserIDField, value) != true)) {
                    this.parmUserIDField = value;
                    this.RaisePropertyChanged("parmUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmUserName {
            get {
                return this.parmUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmUserNameField, value) != true)) {
                    this.parmUserNameField = value;
                    this.RaisePropertyChanged("parmUserName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleDetailsContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkVehicleDetailsContract : Eqstra.VehicleInspection.BackgroundTask.VIProxy.XppObjectBase {
        
        private string parmChassisNumberField;
        
        private string parmColorField;
        
        private string parmEngineNumberField;
        
        private string parmJobCardNumberField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmLisenceDiscCurrentField;
        
        private string parmMakeField;
        
        private string parmModelField;
        
        private decimal parmODOReadingField;
        
        private long parmRecIDField;
        
        private string parmRegNoField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleTypeField;
        
        private System.DateTime parmlisenceDiscExpiryDateField;
        
        private System.DateTime parmyearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmChassisNumber {
            get {
                return this.parmChassisNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmChassisNumberField, value) != true)) {
                    this.parmChassisNumberField = value;
                    this.RaisePropertyChanged("parmChassisNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmColor {
            get {
                return this.parmColorField;
            }
            set {
                if ((object.ReferenceEquals(this.parmColorField, value) != true)) {
                    this.parmColorField = value;
                    this.RaisePropertyChanged("parmColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmEngineNumber {
            get {
                return this.parmEngineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineNumberField, value) != true)) {
                    this.parmEngineNumberField = value;
                    this.RaisePropertyChanged("parmEngineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmJobCardNumber {
            get {
                return this.parmJobCardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmJobCardNumberField, value) != true)) {
                    this.parmJobCardNumberField = value;
                    this.RaisePropertyChanged("parmJobCardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmLisenceDiscCurrent {
            get {
                return this.parmLisenceDiscCurrentField;
            }
            set {
                if ((this.parmLisenceDiscCurrentField.Equals(value) != true)) {
                    this.parmLisenceDiscCurrentField = value;
                    this.RaisePropertyChanged("parmLisenceDiscCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmModel {
            get {
                return this.parmModelField;
            }
            set {
                if ((object.ReferenceEquals(this.parmModelField, value) != true)) {
                    this.parmModelField = value;
                    this.RaisePropertyChanged("parmModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal decimal parmODOReading {
            get {
                return this.parmODOReadingField;
            }
            set {
                if ((this.parmODOReadingField.Equals(value) != true)) {
                    this.parmODOReadingField = value;
                    this.RaisePropertyChanged("parmODOReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRegNo {
            get {
                return this.parmRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRegNoField, value) != true)) {
                    this.parmRegNoField = value;
                    this.RaisePropertyChanged("parmRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmlisenceDiscExpiryDate {
            get {
                return this.parmlisenceDiscExpiryDateField;
            }
            set {
                if ((this.parmlisenceDiscExpiryDateField.Equals(value) != true)) {
                    this.parmlisenceDiscExpiryDateField = value;
                    this.RaisePropertyChanged("parmlisenceDiscExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmyear {
            get {
                return this.parmyearField;
            }
            set {
                if ((this.parmyearField.Equals(value) != true)) {
                    this.parmyearField = value;
                    this.RaisePropertyChanged("parmyear");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoYes", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum NoYes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKConditionEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MZKConditionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Poor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fair = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkVehicleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Passenger = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Trailer = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKRecommendationEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MZKRecommendationEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFeasible = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retain = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EEPActionStep", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum EEPActionStep : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessNone = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessCBL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessLicenseReg = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenQuery = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceSchedulling = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessEPStep1 = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessEPStep2 = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessEPStep3 = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobCardDetails = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkComplete = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintenceServiceSheduling = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectSupplier = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmDriver = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CTermQuoteStep1 = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CTermQuoteStep2 = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CTermQuoteStep3 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Procurment = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Procurment_AccRej = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitInspectionDetail = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitInspectionConfirmation = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitInspectionDataCapture = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitInspectionAcceptance = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDamageConfirmation = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitServiceBookingDetail = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitSupplierSelection = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitServiceBookingConfirmation = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCollectionDetail = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitVendorSelection = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCollectionConfirmation = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCollectionDataCapture = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProvideCollectionDetails = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectThirdPartyCollection = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmVehicleCollection = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaptureInspectionData = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerApprovals = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UploadDrives = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateDrivers = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Live = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UploadDevices = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateDevices = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageContract_Customer = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageContract_Contract = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManageContract_AccRej = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaptureFuelCardDetails = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConfirmDeliveryAddress = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiveFuelCard = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDriverCollection = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDeliveryConfirmation = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCourierCollection = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitInvoice = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaptureETagReplacementReason = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiveETag = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDeliverytoHyper = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProvideVehicleInspectionDetails = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerApprovalETD = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalvageOfferApprove = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitTechnicalInspection = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalvageOfferReject = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerRejection = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerRejectionETD = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintenanceRechargeApprove = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaintenanceRechargeReject = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalvageOfferRejectAddInfo = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewSalvager = 152,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleCollectionAction", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkVehicleCollectionAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCollectionConfirmation = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDeliverytoHyper = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitCollectionDataCapture = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitDamageConfirmation = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkLoginType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkLoginType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Driver = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Courier = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Customer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class AifFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomDetailXmlField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.FaultMessageList> FaultMessageListArrayField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.InfologMessage> InfologMessageListField;
        
        private string StackTraceField;
        
        private int XppExceptionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CustomDetailXml {
            get {
                return this.CustomDetailXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailXmlField, value) != true)) {
                    this.CustomDetailXmlField = value;
                    this.RaisePropertyChanged("CustomDetailXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.FaultMessageList> FaultMessageListArray {
            get {
                return this.FaultMessageListArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageListArrayField, value) != true)) {
                    this.FaultMessageListArrayField = value;
                    this.RaisePropertyChanged("FaultMessageListArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.InfologMessage> InfologMessageList {
            get {
                return this.InfologMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfologMessageListField, value) != true)) {
                    this.InfologMessageListField = value;
                    this.RaisePropertyChanged("InfologMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int XppExceptionType {
            get {
                return this.XppExceptionTypeField;
            }
            set {
                if ((this.XppExceptionTypeField.Equals(value) != true)) {
                    this.XppExceptionTypeField = value;
                    this.RaisePropertyChanged("XppExceptionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessageList", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class FaultMessageList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentField;
        
        private string DocumentOperationField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.FaultMessage> FaultMessageArrayField;
        
        private string FieldField;
        
        private string ServiceField;
        
        private string ServiceOperationField;
        
        private string ServiceOperationParameterField;
        
        private string XPathField;
        
        private string XmlLineField;
        
        private string XmlPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentOperation {
            get {
                return this.DocumentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentOperationField, value) != true)) {
                    this.DocumentOperationField = value;
                    this.RaisePropertyChanged("DocumentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.FaultMessage> FaultMessageArray {
            get {
                return this.FaultMessageArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageArrayField, value) != true)) {
                    this.FaultMessageArrayField = value;
                    this.RaisePropertyChanged("FaultMessageArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ServiceOperation {
            get {
                return this.ServiceOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationField, value) != true)) {
                    this.ServiceOperationField = value;
                    this.RaisePropertyChanged("ServiceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ServiceOperationParameter {
            get {
                return this.ServiceOperationParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationParameterField, value) != true)) {
                    this.ServiceOperationParameterField = value;
                    this.RaisePropertyChanged("ServiceOperationParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XPath {
            get {
                return this.XPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XPathField, value) != true)) {
                    this.XPathField = value;
                    this.RaisePropertyChanged("XPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XmlLine {
            get {
                return this.XmlLineField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlLineField, value) != true)) {
                    this.XmlLineField = value;
                    this.RaisePropertyChanged("XmlLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XmlPosition {
            get {
                return this.XmlPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPositionField, value) != true)) {
                    this.XmlPositionField = value;
                    this.RaisePropertyChanged("XmlPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    internal partial class InfologMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Eqstra.VehicleInspection.BackgroundTask.VIProxy.InfologMessageType InfologMessageTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIProxy.InfologMessageType InfologMessageType {
            get {
                return this.InfologMessageTypeField;
            }
            set {
                if ((this.InfologMessageTypeField.Equals(value) != true)) {
                    this.InfologMessageTypeField = value;
                    this.RaisePropertyChanged("InfologMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class FaultMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessageType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    internal enum InfologMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", ConfigurationName="VIProxy.IRequestReplyRouter")]
    internal interface IRequestReplyRouter {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IRequestReplyRouterChannel : global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.IRequestReplyRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class RequestReplyRouterClient : System.ServiceModel.ClientBase<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.IRequestReplyRouter>, global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.IRequestReplyRouter {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestReplyRouterClient() : 
                base(RequestReplyRouterClient.GetDefaultBinding(), RequestReplyRouterClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.reqReplyEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), RequestReplyRouterClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.reqReplyEndpoint)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RequestReplyRouterClient.GetBindingForEndpoint(EndpointConfiguration.reqReplyEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RequestReplyRouterClient.GetEndpointAddress(EndpointConfiguration.reqReplyEndpoint);
        }
        
        public enum EndpointConfiguration {
            
            reqReplyEndpoint,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="VIProxy.MzkVehicleInspectionService")]
    internal interface MzkVehicleInspectionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorChassisBody", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrailorChassisBodyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorChassisBodyAifFaultFaul" +
            "t", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyResponse> editTrailorChassisBodyAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerBodywork", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editPassengerBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerBodyworkAifFaultFault" +
            "", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkResponse> editPassengerBodyworkAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readDrivingTime", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readDrivingTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readDrivingTimeAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeResponse> readDrivingTimeAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/saveImage", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/saveImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/saveImageAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageResponse> saveImageAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrailorAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorAccessoriesAifFaultFaul" +
            "t", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesResponse> editTrailorAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrailorGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassResponse> editTrailorGlassAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editCommercialTyreConditionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialTyreConditionAifFaul" +
            "tFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionResponse> editCommercialTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getInspectionHistory", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getInspectionHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getInspectionHistoryAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryResponse> getInspectionHistoryAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/validateUser", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/validateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/validateUserAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserResponse> validateUserAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editGlass", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassResponse> editGlassAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrailorMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorMechConditionAifFaultFa" +
            "ult", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionResponse> editTrailorMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editPassengerAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerAccessoriesAifFaultFa" +
            "ult", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesResponse> editPassengerAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/updateConfirmationDate", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/updateConfirmationDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/updateConfirmationDateAifFaultFaul" +
            "t", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateResponse> updateConfirmationDateAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspection", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleInspectionAifFaultFault" +
            "", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTable", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/createVehicleInspectionTableAifFau" +
            "ltFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editPassengerMechConditionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerMechConditionAifFault" +
            "Fault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionResponse> editPassengerMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editPassengerTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerTrimInteriorAifFaultF" +
            "ault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse> editPassengerTrimInteriorAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editTrailorTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editTrailorTyreConditionAifFaultFa" +
            "ult", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionResponse> editTrailorTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialAccessories", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editCommercialAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialAccessoriesAifFaultF" +
            "ault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesResponse> editCommercialAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getTasks", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getTasksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getTasksAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksResponse> getTasksAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/readVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerTyreCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editPassengerTyreConditionResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editPassengerTyreConditionAifFault" +
            "Fault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionResponse> editPassengerTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/updateDrivingTime", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/updateDrivingTimeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/updateDrivingTimeAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeResponse> updateDrivingTimeAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialTrimInterior", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editCommercialTrimInteriorResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialTrimInteriorAifFault" +
            "Fault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse> editCommercialTrimInteriorAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getUserDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getUserDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getUserDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsResponse> getUserDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/getCustDetails", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/getCustDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/getCustDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/updateStatusList", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/updateStatusListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/updateStatusListAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListResponse> updateStatusListAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialChassisBody", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editCommercialChassisBodyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialChassisBodyAifFaultF" +
            "ault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyResponse> editCommercialChassisBodyAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialMechCondition", ReplyAction="http://tempuri.org/MzkVehicleInspectionService/editCommercialMechConditionRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIProxy.AifFault), Action="http://tempuri.org/MzkVehicleInspectionService/editCommercialMechConditionAifFaul" +
            "tFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionResponse> editCommercialMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorChassisBodyRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorChassisBodyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract> _lstTrailorBody;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditTrailorChassisBodyRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorChassisBodyRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract> _lstTrailorBody, string _company) {
            this._lstTrailorBody = _lstTrailorBody;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorChassisBodyResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorChassisBodyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract> response;
        
        public MzkVehicleInspectionServiceEditTrailorChassisBodyResponse() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorChassisBodyResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditPassengerBodyworkRequest() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork, string _company) {
            this._lstPassengerBodywork = _lstPassengerBodywork;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerBodyworkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract> response;
        
        public MzkVehicleInspectionServiceEditPassengerBodyworkResponse() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerBodyworkResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadDrivingTimeRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceReadDrivingTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<string> _lstcase;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceReadDrivingTimeRequest() {
        }
        
        public MzkVehicleInspectionServiceReadDrivingTimeRequest(System.Collections.ObjectModel.ObservableCollection<string> _lstcase, string _company) {
            this._lstcase = _lstcase;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadDrivingTimeResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceReadDrivingTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract> response;
        
        public MzkVehicleInspectionServiceReadDrivingTimeResponse() {
        }
        
        public MzkVehicleInspectionServiceReadDrivingTimeResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceSaveImageRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceSaveImageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.Mzk_ImageContract> _imageInfo;
        
        public MzkVehicleInspectionServiceSaveImageRequest() {
        }
        
        public MzkVehicleInspectionServiceSaveImageRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.Mzk_ImageContract> _imageInfo) {
            this._imageInfo = _imageInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceSaveImageResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceSaveImageResponse {
        
        public MzkVehicleInspectionServiceSaveImageResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract> _lstTrailorAccessory;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditTrailorAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract> _lstTrailorAccessory, string _company) {
            this._lstTrailorAccessory = _lstTrailorAccessory;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorAccessoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract> response;
        
        public MzkVehicleInspectionServiceEditTrailorAccessoriesResponse() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorAccessoriesResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract> _lstTrailorGlass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditTrailorGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract> _lstTrailorGlass, string _company) {
            this._lstTrailorGlass = _lstTrailorGlass;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorGlassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract> response;
        
        public MzkVehicleInspectionServiceEditTrailorGlassResponse() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorGlassResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract> _lstCommercialTyreCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditCommercialTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract> _lstCommercialTyreCondition, string _company) {
            this._lstCommercialTyreCondition = _lstCommercialTyreCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialTyreConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract> response;
        
        public MzkVehicleInspectionServiceEditCommercialTyreConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialTyreConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetInspectionHistoryRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetInspectionHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _regNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceGetInspectionHistoryRequest() {
        }
        
        public MzkVehicleInspectionServiceGetInspectionHistoryRequest(string _regNo, string _company) {
            this._regNo = _regNo;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetInspectionHistoryResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetInspectionHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkInspectionHistoryContract> response;
        
        public MzkVehicleInspectionServiceGetInspectionHistoryResponse() {
        }
        
        public MzkVehicleInspectionServiceGetInspectionHistoryResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkInspectionHistoryContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceValidateUserRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceValidateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _userID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _password;
        
        public MzkVehicleInspectionServiceValidateUserRequest() {
        }
        
        public MzkVehicleInspectionServiceValidateUserRequest(string _userID, string _password) {
            this._userID = _userID;
            this._password = _password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceValidateUserResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceValidateUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public bool response;
        
        public MzkVehicleInspectionServiceValidateUserResponse() {
        }
        
        public MzkVehicleInspectionServiceValidateUserResponse(bool response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract> _lstGlass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditGlassRequest() {
        }
        
        public MzkVehicleInspectionServiceEditGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract> _lstGlass, string _company) {
            this._lstGlass = _lstGlass;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditGlassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract> response;
        
        public MzkVehicleInspectionServiceEditGlassResponse() {
        }
        
        public MzkVehicleInspectionServiceEditGlassResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract> _lstTrailorMechCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditTrailorMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract> _lstTrailorMechCondition, string _company) {
            this._lstTrailorMechCondition = _lstTrailorMechCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorMechConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract> response;
        
        public MzkVehicleInspectionServiceEditTrailorMechConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorMechConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessory;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditPassengerAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessory, string _company) {
            this._lstPassengerAccessory = _lstPassengerAccessory;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerAccessoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract> response;
        
        public MzkVehicleInspectionServiceEditPassengerAccessoriesResponse() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerAccessoriesResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateConfirmationDateRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateConfirmationDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceUpdateConfirmationDateRequest() {
        }
        
        public MzkVehicleInspectionServiceUpdateConfirmationDateRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks, string _company) {
            this._lstTasks = _lstTasks;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateConfirmationDateResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateConfirmationDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response;
        
        public MzkVehicleInspectionServiceUpdateConfirmationDateResponse() {
        }
        
        public MzkVehicleInspectionServiceUpdateConfirmationDateResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleInspectionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditVehicleInspectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp;
        
        public MzkVehicleInspectionServiceEditVehicleInspectionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleInspectionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            this._lstVehicleInsp = _lstVehicleInsp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleInspectionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditVehicleInspectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract> response;
        
        public MzkVehicleInspectionServiceEditVehicleInspectionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleInspectionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract contract;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract contract) {
            this.contract = contract;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long response;
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse() {
        }
        
        public MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse(long response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract> _lstPassengerMechCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditPassengerMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract> _lstPassengerMechCondition, string _company) {
            this._lstPassengerMechCondition = _lstPassengerMechCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerMechConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract> response;
        
        public MzkVehicleInspectionServiceEditPassengerMechConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerMechConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior, string _company) {
            this._lstPassengerTrimInterior = _lstPassengerTrimInterior;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract> response;
        
        public MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract> _lstTrailorTyreCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditTrailorTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract> _lstTrailorTyreCondition, string _company) {
            this._lstTrailorTyreCondition = _lstTrailorTyreCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditTrailorTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditTrailorTyreConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract> response;
        
        public MzkVehicleInspectionServiceEditTrailorTyreConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditTrailorTyreConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract> _lstCommercialAccessory;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditCommercialAccessoriesRequest() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract> _lstCommercialAccessory, string _company) {
            this._lstCommercialAccessory = _lstCommercialAccessory;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialAccessoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract> response;
        
        public MzkVehicleInspectionServiceEditCommercialAccessoriesResponse() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialAccessoriesResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> _lstPassengerVehicleDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> _lstPassengerVehicleDetails, string _company) {
            this._lstPassengerVehicleDetails = _lstPassengerVehicleDetails;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditVehicleDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> response;
        
        public MzkVehicleInspectionServiceEditVehicleDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceEditVehicleDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetTasksRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetTasksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _company;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _userID;
        
        public MzkVehicleInspectionServiceGetTasksRequest() {
        }
        
        public MzkVehicleInspectionServiceGetTasksRequest(string _company, string _userID) {
            this._company = _company;
            this._userID = _userID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetTasksResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetTasksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response;
        
        public MzkVehicleInspectionServiceGetTasksResponse() {
        }
        
        public MzkVehicleInspectionServiceGetTasksResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceReadVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceReadVehicleDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceReadVehicleDetailsRequest(string _caseId, string _company) {
            this._caseId = _caseId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceReadVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceReadVehicleDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> response;
        
        public MzkVehicleInspectionServiceReadVehicleDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceReadVehicleDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditPassengerTyreConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition, string _company) {
            this._lstPassengerTyreCondition = _lstPassengerTyreCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditPassengerTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditPassengerTyreConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract> response;
        
        public MzkVehicleInspectionServiceEditPassengerTyreConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditPassengerTyreConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateDrivingTimeRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateDrivingTimeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract> _drivingTimeList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceUpdateDrivingTimeRequest() {
        }
        
        public MzkVehicleInspectionServiceUpdateDrivingTimeRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract> _drivingTimeList, string _company) {
            this._drivingTimeList = _drivingTimeList;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateDrivingTimeResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateDrivingTimeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public bool response;
        
        public MzkVehicleInspectionServiceUpdateDrivingTimeResponse() {
        }
        
        public MzkVehicleInspectionServiceUpdateDrivingTimeResponse(bool response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract> _lstCommercialtrimInterior;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract> _lstCommercialtrimInterior, string _company) {
            this._lstCommercialtrimInterior = _lstCommercialtrimInterior;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract> response;
        
        public MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetUserDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetUserDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _userID;
        
        public MzkVehicleInspectionServiceGetUserDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceGetUserDetailsRequest(string _userID) {
            this._userID = _userID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetUserDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetUserDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkValidateUserContract response;
        
        public MzkVehicleInspectionServiceGetUserDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceGetUserDetailsResponse(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkValidateUserContract response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetCustDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetCustDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _custId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceGetCustDetailsRequest() {
        }
        
        public MzkVehicleInspectionServiceGetCustDetailsRequest(string _custId, string _company) {
            this._custId = _custId;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceGetCustDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceGetCustDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkCustAddressContract> response;
        
        public MzkVehicleInspectionServiceGetCustDetailsResponse() {
        }
        
        public MzkVehicleInspectionServiceGetCustDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkCustAddressContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateStatusListRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateStatusListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceUpdateStatusListRequest() {
        }
        
        public MzkVehicleInspectionServiceUpdateStatusListRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks, string _company) {
            this._lstTasks = _lstTasks;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceUpdateStatusListResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceUpdateStatusListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response;
        
        public MzkVehicleInspectionServiceUpdateStatusListResponse() {
        }
        
        public MzkVehicleInspectionServiceUpdateStatusListResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialChassisBodyRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialChassisBodyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract> _lstCommercialChassisBody;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditCommercialChassisBodyRequest() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialChassisBodyRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract> _lstCommercialChassisBody, string _company) {
            this._lstCommercialChassisBody = _lstCommercialChassisBody;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialChassisBodyResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialChassisBodyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract> response;
        
        public MzkVehicleInspectionServiceEditCommercialChassisBodyResponse() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialChassisBodyResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract> _lstCommercialMechCondition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _company;
        
        public MzkVehicleInspectionServiceEditCommercialMechConditionRequest() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract> _lstCommercialMechCondition, string _company) {
            this._lstCommercialMechCondition = _lstCommercialMechCondition;
            this._company = _company;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MzkVehicleInspectionServiceEditCommercialMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class MzkVehicleInspectionServiceEditCommercialMechConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract> response;
        
        public MzkVehicleInspectionServiceEditCommercialMechConditionResponse() {
        }
        
        public MzkVehicleInspectionServiceEditCommercialMechConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface MzkVehicleInspectionServiceChannel : global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class MzkVehicleInspectionServiceClient : System.ServiceModel.ClientBase<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService>, global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MzkVehicleInspectionServiceClient() : 
                base(MzkVehicleInspectionServiceClient.GetDefaultBinding(), MzkVehicleInspectionServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), MzkVehicleInspectionServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MzkVehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MzkVehicleInspectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editTrailorChassisBodyAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyRequest request) {
            return base.Channel.editTrailorChassisBodyAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyResponse> editTrailorChassisBodyAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorChassisBodyContract> _lstTrailorBody, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorChassisBodyRequest();
            inValue._lstTrailorBody = _lstTrailorBody;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editTrailorChassisBodyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editPassengerBodyworkAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkRequest request) {
            return base.Channel.editPassengerBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkResponse> editPassengerBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerBodyworkContract> _lstPassengerBodywork, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerBodyworkRequest();
            inValue._lstPassengerBodywork = _lstPassengerBodywork;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editPassengerBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.readDrivingTimeAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeRequest request) {
            return base.Channel.readDrivingTimeAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeResponse> readDrivingTimeAsync(System.Collections.ObjectModel.ObservableCollection<string> _lstcase, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadDrivingTimeRequest();
            inValue._lstcase = _lstcase;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).readDrivingTimeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.saveImageAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageRequest request) {
            return base.Channel.saveImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageResponse> saveImageAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.Mzk_ImageContract> _imageInfo) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceSaveImageRequest();
            inValue._imageInfo = _imageInfo;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).saveImageAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editTrailorAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesRequest request) {
            return base.Channel.editTrailorAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesResponse> editTrailorAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorAccessoriesContract> _lstTrailorAccessory, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorAccessoriesRequest();
            inValue._lstTrailorAccessory = _lstTrailorAccessory;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editTrailorAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editTrailorGlassAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassRequest request) {
            return base.Channel.editTrailorGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassResponse> editTrailorGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorGlassContract> _lstTrailorGlass, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorGlassRequest();
            inValue._lstTrailorGlass = _lstTrailorGlass;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editTrailorGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editCommercialTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionRequest request) {
            return base.Channel.editCommercialTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionResponse> editCommercialTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialTyresContract> _lstCommercialTyreCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTyreConditionRequest();
            inValue._lstCommercialTyreCondition = _lstCommercialTyreCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editCommercialTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.getInspectionHistoryAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryRequest request) {
            return base.Channel.getInspectionHistoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryResponse> getInspectionHistoryAsync(string _regNo, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetInspectionHistoryRequest();
            inValue._regNo = _regNo;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).getInspectionHistoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.validateUserAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserRequest request) {
            return base.Channel.validateUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserResponse> validateUserAsync(string _userID, string _password) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceValidateUserRequest();
            inValue._userID = _userID;
            inValue._password = _password;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).validateUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editGlassAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassRequest request) {
            return base.Channel.editGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassResponse> editGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerGlassContract> _lstGlass, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditGlassRequest();
            inValue._lstGlass = _lstGlass;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editTrailorMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionRequest request) {
            return base.Channel.editTrailorMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionResponse> editTrailorMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiTrailorMechConditionContract> _lstTrailorMechCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorMechConditionRequest();
            inValue._lstTrailorMechCondition = _lstTrailorMechCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editTrailorMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editPassengerAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesRequest request) {
            return base.Channel.editPassengerAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesResponse> editPassengerAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerAccessoriesContract> _lstPassengerAccessory, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerAccessoriesRequest();
            inValue._lstPassengerAccessory = _lstPassengerAccessory;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editPassengerAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.updateConfirmationDateAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateRequest request) {
            return base.Channel.updateConfirmationDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateResponse> updateConfirmationDateAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateConfirmationDateRequest();
            inValue._lstTasks = _lstTasks;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).updateConfirmationDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editVehicleInspectionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionRequest request) {
            return base.Channel.editVehicleInspectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleInspectionRequest();
            inValue._lstVehicleInsp = _lstVehicleInsp;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editVehicleInspectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.createVehicleInspectionTableAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest request) {
            return base.Channel.createVehicleInspectionTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract contract) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceCreateVehicleInspectionTableRequest();
            inValue.contract = contract;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).createVehicleInspectionTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editPassengerMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionRequest request) {
            return base.Channel.editPassengerMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionResponse> editPassengerMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerMechConditionContract> _lstPassengerMechCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerMechConditionRequest();
            inValue._lstPassengerMechCondition = _lstPassengerMechCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editPassengerMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editPassengerTrimInteriorAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest request) {
            return base.Channel.editPassengerTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorResponse> editPassengerTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiPassengerTrimInteriorContract> _lstPassengerTrimInterior, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTrimInteriorRequest();
            inValue._lstPassengerTrimInterior = _lstPassengerTrimInterior;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editPassengerTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editTrailorTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionRequest request) {
            return base.Channel.editTrailorTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionResponse> editTrailorTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiTrailorTyreConditionContract> _lstTrailorTyreCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditTrailorTyreConditionRequest();
            inValue._lstTrailorTyreCondition = _lstTrailorTyreCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editTrailorTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editCommercialAccessoriesAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesRequest request) {
            return base.Channel.editCommercialAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesResponse> editCommercialAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialAccessoriesContract> _lstCommercialAccessory, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialAccessoriesRequest();
            inValue._lstCommercialAccessory = _lstCommercialAccessory;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editCommercialAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editVehicleDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsRequest request) {
            return base.Channel.editVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleDetailsContract> _lstPassengerVehicleDetails, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditVehicleDetailsRequest();
            inValue._lstPassengerVehicleDetails = _lstPassengerVehicleDetails;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.getTasksAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksRequest request) {
            return base.Channel.getTasksAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksResponse> getTasksAsync(string _company, string _userID) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetTasksRequest();
            inValue._company = _company;
            inValue._userID = _userID;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).getTasksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.readVehicleDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsRequest request) {
            return base.Channel.readVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(string _caseId, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceReadVehicleDetailsRequest();
            inValue._caseId = _caseId;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).readVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editPassengerTyreConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionRequest request) {
            return base.Channel.editPassengerTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionResponse> editPassengerTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiPassengerTyreConditionContract> _lstPassengerTyreCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditPassengerTyreConditionRequest();
            inValue._lstPassengerTyreCondition = _lstPassengerTyreCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editPassengerTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.updateDrivingTimeAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeRequest request) {
            return base.Channel.updateDrivingTimeAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeResponse> updateDrivingTimeAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkDrivingTimeContract> _drivingTimeList, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateDrivingTimeRequest();
            inValue._drivingTimeList = _drivingTimeList;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).updateDrivingTimeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editCommercialTrimInteriorAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest request) {
            return base.Channel.editCommercialTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorResponse> editCommercialTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MZKMobiCommercialTrimInteriorContract> _lstCommercialtrimInterior, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialTrimInteriorRequest();
            inValue._lstCommercialtrimInterior = _lstCommercialtrimInterior;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editCommercialTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.getUserDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsRequest request) {
            return base.Channel.getUserDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsResponse> getUserDetailsAsync(string _userID) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetUserDetailsRequest();
            inValue._userID = _userID;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).getUserDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.getCustDetailsAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsRequest request) {
            return base.Channel.getCustDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync(string _custId, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceGetCustDetailsRequest();
            inValue._custId = _custId;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).getCustDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.updateStatusListAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListRequest request) {
            return base.Channel.updateStatusListAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListResponse> updateStatusListAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkTasksContract> _lstTasks, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceUpdateStatusListRequest();
            inValue._lstTasks = _lstTasks;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).updateStatusListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editCommercialChassisBodyAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyRequest request) {
            return base.Channel.editCommercialChassisBodyAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyResponse> editCommercialChassisBodyAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialChassisBodyContract> _lstCommercialChassisBody, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialChassisBodyRequest();
            inValue._lstCommercialChassisBody = _lstCommercialChassisBody;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editCommercialChassisBodyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionResponse> global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService.editCommercialMechConditionAsync(global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionRequest request) {
            return base.Channel.editCommercialMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionResponse> editCommercialMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkMobiCommercialMechConditionContract> _lstCommercialMechCondition, string _company) {
            global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionRequest inValue = new global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionServiceEditCommercialMechConditionRequest();
            inValue._lstCommercialMechCondition = _lstCommercialMechCondition;
            inValue._company = _company;
            return ((global::Eqstra.VehicleInspection.BackgroundTask.VIProxy.MzkVehicleInspectionService)(this)).editCommercialMechConditionAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService)) {
                return new System.ServiceModel.EndpointAddress("http://srfmlbispstg01.lfmd.co.za/MicrosoftDynamicsAXAif60/VehicleInspection/xppse" +
                        "rvice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return MzkVehicleInspectionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return MzkVehicleInspectionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_MzkVehicleInspectionService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_MzkVehicleInspectionService,
        }
    }
}
