//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    internal partial class CallContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyField;
        
        private string LanguageField;
        
        private string LogonAsUserField;
        
        private string MessageIdField;
        
        private string PartitionKeyField;
        
        private System.Collections.Generic.Dictionary<string, string> PropertyBagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string LogonAsUser {
            get {
                return this.LogonAsUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonAsUserField, value) != true)) {
                    this.LogonAsUserField = value;
                    this.RaisePropertyChanged("LogonAsUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.Generic.Dictionary<string, string> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkGlassContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkGlassContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassType parmGlassTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamagedField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassType parmGlassType {
            get {
                return this.parmGlassTypeField;
            }
            set {
                if ((this.parmGlassTypeField.Equals(value) != true)) {
                    this.parmGlassTypeField = value;
                    this.RaisePropertyChanged("parmGlassType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCustAddressContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKVehicleInspectionTableContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract))]
    internal partial class XppObjectBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkAccessoryContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkAccessoryContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerAccessories parmAccessoryTypeField;
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialAccessories parmCommercialAccessoryTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerAccessories parmPassengerAccessoryField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerAccessories parmAccessoryType {
            get {
                return this.parmAccessoryTypeField;
            }
            set {
                if ((this.parmAccessoryTypeField.Equals(value) != true)) {
                    this.parmAccessoryTypeField = value;
                    this.RaisePropertyChanged("parmAccessoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialAccessories parmCommercialAccessoryType {
            get {
                return this.parmCommercialAccessoryTypeField;
            }
            set {
                if ((this.parmCommercialAccessoryTypeField.Equals(value) != true)) {
                    this.parmCommercialAccessoryTypeField = value;
                    this.RaisePropertyChanged("parmCommercialAccessoryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerAccessories parmPassengerAccessory {
            get {
                return this.parmPassengerAccessoryField;
            }
            set {
                if ((this.parmPassengerAccessoryField.Equals(value) != true)) {
                    this.parmPassengerAccessoryField = value;
                    this.RaisePropertyChanged("parmPassengerAccessory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkBodyworkContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkBodyworkContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialBodywork parmCommercialBodyworkField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerBodywork parmPassengerBodyworkField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialBodywork parmCommercialBodywork {
            get {
                return this.parmCommercialBodyworkField;
            }
            set {
                if ((this.parmCommercialBodyworkField.Equals(value) != true)) {
                    this.parmCommercialBodyworkField = value;
                    this.RaisePropertyChanged("parmCommercialBodywork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerBodywork parmPassengerBodywork {
            get {
                return this.parmPassengerBodyworkField;
            }
            set {
                if ((this.parmPassengerBodyworkField.Equals(value) != true)) {
                    this.parmPassengerBodyworkField = value;
                    this.RaisePropertyChanged("parmPassengerBodywork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCustAddressContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkCustAddressContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCustAddressField;
        
        private string parmCustNameField;
        
        private string parmCustPhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustAddress {
            get {
                return this.parmCustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustAddressField, value) != true)) {
                    this.parmCustAddressField = value;
                    this.RaisePropertyChanged("parmCustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustName {
            get {
                return this.parmCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustNameField, value) != true)) {
                    this.parmCustNameField = value;
                    this.RaisePropertyChanged("parmCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCustPhone {
            get {
                return this.parmCustPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCustPhoneField, value) != true)) {
                    this.parmCustPhoneField = value;
                    this.RaisePropertyChanged("parmCustPhone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkMechanicalConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkMechanicalConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialMechanicalCondition parmCommercialMechConditionField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKEngineTypeEnum parmEngineTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsRunningField;
        
        private long parmRecIDField;
        
        private string parmRemarksField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialMechanicalCondition parmCommercialMechCondition {
            get {
                return this.parmCommercialMechConditionField;
            }
            set {
                if ((this.parmCommercialMechConditionField.Equals(value) != true)) {
                    this.parmCommercialMechConditionField = value;
                    this.RaisePropertyChanged("parmCommercialMechCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKEngineTypeEnum parmEngineType {
            get {
                return this.parmEngineTypeField;
            }
            set {
                if ((this.parmEngineTypeField.Equals(value) != true)) {
                    this.parmEngineTypeField = value;
                    this.RaisePropertyChanged("parmEngineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsRunning {
            get {
                return this.parmIsRunningField;
            }
            set {
                if ((this.parmIsRunningField.Equals(value) != true)) {
                    this.parmIsRunningField = value;
                    this.RaisePropertyChanged("parmIsRunning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRemarks {
            get {
                return this.parmRemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRemarksField, value) != true)) {
                    this.parmRemarksField = value;
                    this.RaisePropertyChanged("parmRemarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTrimInteriorContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkTrimInteriorContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialTrimInterior parmCommercialTrimInteriorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamagedField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerInteriorTrim parmPassengerTrimInteriorField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialTrimInterior parmCommercialTrimInterior {
            get {
                return this.parmCommercialTrimInteriorField;
            }
            set {
                if ((this.parmCommercialTrimInteriorField.Equals(value) != true)) {
                    this.parmCommercialTrimInteriorField = value;
                    this.RaisePropertyChanged("parmCommercialTrimInterior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmIsDamaged {
            get {
                return this.parmIsDamagedField;
            }
            set {
                if ((this.parmIsDamagedField.Equals(value) != true)) {
                    this.parmIsDamagedField = value;
                    this.RaisePropertyChanged("parmIsDamaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerInteriorTrim parmPassengerTrimInterior {
            get {
                return this.parmPassengerTrimInteriorField;
            }
            set {
                if ((this.parmPassengerTrimInteriorField.Equals(value) != true)) {
                    this.parmPassengerTrimInteriorField = value;
                    this.RaisePropertyChanged("parmPassengerTrimInterior");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkTyreConditionContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkTyreConditionContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCommentsField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialTyre parmCommercialTyreTypeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKConditionEnum parmConditionField;
        
        private string parmMakeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerTyreCondition parmPassengerTyreTypeField;
        
        private long parmRecIDField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private string parmdepthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmComments {
            get {
                return this.parmCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCommentsField, value) != true)) {
                    this.parmCommentsField = value;
                    this.RaisePropertyChanged("parmComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCommercialTyre parmCommercialTyreType {
            get {
                return this.parmCommercialTyreTypeField;
            }
            set {
                if ((this.parmCommercialTyreTypeField.Equals(value) != true)) {
                    this.parmCommercialTyreTypeField = value;
                    this.RaisePropertyChanged("parmCommercialTyreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKConditionEnum parmCondition {
            get {
                return this.parmConditionField;
            }
            set {
                if ((this.parmConditionField.Equals(value) != true)) {
                    this.parmConditionField = value;
                    this.RaisePropertyChanged("parmCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkPassengerTyreCondition parmPassengerTyreType {
            get {
                return this.parmPassengerTyreTypeField;
            }
            set {
                if ((this.parmPassengerTyreTypeField.Equals(value) != true)) {
                    this.parmPassengerTyreTypeField = value;
                    this.RaisePropertyChanged("parmPassengerTyreType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmdepth {
            get {
                return this.parmdepthField;
            }
            set {
                if ((object.ReferenceEquals(this.parmdepthField, value) != true)) {
                    this.parmdepthField = value;
                    this.RaisePropertyChanged("parmdepth");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleDetailsContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MzkVehicleDetailsContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private int parmChassisNumberField;
        
        private string parmColorField;
        
        private string parmEngineNumberField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmLisenceDiscCurrentField;
        
        private string parmMakeField;
        
        private decimal parmODOReadingField;
        
        private long parmRecIDField;
        
        private string parmRegNoField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmSparseKeyShownField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmSparseKeyTestedField;
        
        private int parmTableIdField;
        
        private long parmVehicleInsRecIDField;
        
        private System.DateTime parmlisenceDiscExpiryDateField;
        
        private string parmyearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmChassisNumber {
            get {
                return this.parmChassisNumberField;
            }
            set {
                if ((this.parmChassisNumberField.Equals(value) != true)) {
                    this.parmChassisNumberField = value;
                    this.RaisePropertyChanged("parmChassisNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmColor {
            get {
                return this.parmColorField;
            }
            set {
                if ((object.ReferenceEquals(this.parmColorField, value) != true)) {
                    this.parmColorField = value;
                    this.RaisePropertyChanged("parmColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmEngineNumber {
            get {
                return this.parmEngineNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.parmEngineNumberField, value) != true)) {
                    this.parmEngineNumberField = value;
                    this.RaisePropertyChanged("parmEngineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmLisenceDiscCurrent {
            get {
                return this.parmLisenceDiscCurrentField;
            }
            set {
                if ((this.parmLisenceDiscCurrentField.Equals(value) != true)) {
                    this.parmLisenceDiscCurrentField = value;
                    this.RaisePropertyChanged("parmLisenceDiscCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmMake {
            get {
                return this.parmMakeField;
            }
            set {
                if ((object.ReferenceEquals(this.parmMakeField, value) != true)) {
                    this.parmMakeField = value;
                    this.RaisePropertyChanged("parmMake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal decimal parmODOReading {
            get {
                return this.parmODOReadingField;
            }
            set {
                if ((this.parmODOReadingField.Equals(value) != true)) {
                    this.parmODOReadingField = value;
                    this.RaisePropertyChanged("parmODOReading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmRegNo {
            get {
                return this.parmRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.parmRegNoField, value) != true)) {
                    this.parmRegNoField = value;
                    this.RaisePropertyChanged("parmRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmSparseKeyShown {
            get {
                return this.parmSparseKeyShownField;
            }
            set {
                if ((this.parmSparseKeyShownField.Equals(value) != true)) {
                    this.parmSparseKeyShownField = value;
                    this.RaisePropertyChanged("parmSparseKeyShown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.NoYes parmSparseKeyTested {
            get {
                return this.parmSparseKeyTestedField;
            }
            set {
                if ((this.parmSparseKeyTestedField.Equals(value) != true)) {
                    this.parmSparseKeyTestedField = value;
                    this.RaisePropertyChanged("parmSparseKeyTested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInsRecID {
            get {
                return this.parmVehicleInsRecIDField;
            }
            set {
                if ((this.parmVehicleInsRecIDField.Equals(value) != true)) {
                    this.parmVehicleInsRecIDField = value;
                    this.RaisePropertyChanged("parmVehicleInsRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmlisenceDiscExpiryDate {
            get {
                return this.parmlisenceDiscExpiryDateField;
            }
            set {
                if ((this.parmlisenceDiscExpiryDateField.Equals(value) != true)) {
                    this.parmlisenceDiscExpiryDateField = value;
                    this.RaisePropertyChanged("parmlisenceDiscExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmyear {
            get {
                return this.parmyearField;
            }
            set {
                if ((object.ReferenceEquals(this.parmyearField, value) != true)) {
                    this.parmyearField = value;
                    this.RaisePropertyChanged("parmyear");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKVehicleInspectionTableContract", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal partial class MZKVehicleInspectionTableContract : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.XppObjectBase {
        
        private string parmCaseIdField;
        
        private System.DateTime parmCompanyRepSignDateTimeField;
        
        private System.DateTime parmCustomerRepSignDateTimeField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKConditionEnum parmGeneralConditionField;
        
        private long parmRecIDField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKRecommendationEnum parmRecommendationField;
        
        private int parmTableIdField;
        
        private string parmTaskIdField;
        
        private System.DateTime parmTravelEndDateTimeField;
        
        private System.DateTime parmTravelStartDateTimeField;
        
        private long parmVehicleInspectorField;
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleType parmVehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmCaseId {
            get {
                return this.parmCaseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmCaseIdField, value) != true)) {
                    this.parmCaseIdField = value;
                    this.RaisePropertyChanged("parmCaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCompanyRepSignDateTime {
            get {
                return this.parmCompanyRepSignDateTimeField;
            }
            set {
                if ((this.parmCompanyRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCompanyRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCompanyRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmCustomerRepSignDateTime {
            get {
                return this.parmCustomerRepSignDateTimeField;
            }
            set {
                if ((this.parmCustomerRepSignDateTimeField.Equals(value) != true)) {
                    this.parmCustomerRepSignDateTimeField = value;
                    this.RaisePropertyChanged("parmCustomerRepSignDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKConditionEnum parmGeneralCondition {
            get {
                return this.parmGeneralConditionField;
            }
            set {
                if ((this.parmGeneralConditionField.Equals(value) != true)) {
                    this.parmGeneralConditionField = value;
                    this.RaisePropertyChanged("parmGeneralCondition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmRecID {
            get {
                return this.parmRecIDField;
            }
            set {
                if ((this.parmRecIDField.Equals(value) != true)) {
                    this.parmRecIDField = value;
                    this.RaisePropertyChanged("parmRecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKRecommendationEnum parmRecommendation {
            get {
                return this.parmRecommendationField;
            }
            set {
                if ((this.parmRecommendationField.Equals(value) != true)) {
                    this.parmRecommendationField = value;
                    this.RaisePropertyChanged("parmRecommendation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int parmTableId {
            get {
                return this.parmTableIdField;
            }
            set {
                if ((this.parmTableIdField.Equals(value) != true)) {
                    this.parmTableIdField = value;
                    this.RaisePropertyChanged("parmTableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string parmTaskId {
            get {
                return this.parmTaskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.parmTaskIdField, value) != true)) {
                    this.parmTaskIdField = value;
                    this.RaisePropertyChanged("parmTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmTravelEndDateTime {
            get {
                return this.parmTravelEndDateTimeField;
            }
            set {
                if ((this.parmTravelEndDateTimeField.Equals(value) != true)) {
                    this.parmTravelEndDateTimeField = value;
                    this.RaisePropertyChanged("parmTravelEndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime parmTravelStartDateTime {
            get {
                return this.parmTravelStartDateTimeField;
            }
            set {
                if ((this.parmTravelStartDateTimeField.Equals(value) != true)) {
                    this.parmTravelStartDateTimeField = value;
                    this.RaisePropertyChanged("parmTravelStartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long parmVehicleInspector {
            get {
                return this.parmVehicleInspectorField;
            }
            set {
                if ((this.parmVehicleInspectorField.Equals(value) != true)) {
                    this.parmVehicleInspectorField = value;
                    this.RaisePropertyChanged("parmVehicleInspector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleType parmVehicleType {
            get {
                return this.parmVehicleTypeField;
            }
            set {
                if ((this.parmVehicleTypeField.Equals(value) != true)) {
                    this.parmVehicleTypeField = value;
                    this.RaisePropertyChanged("parmVehicleType");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkGlassType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkGlassType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windscreen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearGlass = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SideGlass = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadLights = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TailLights = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndicatorLenses = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExitRearViewMirror = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoYes", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    internal enum NoYes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        No = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yes = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerAccessories", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkPassengerAccessories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radio = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CDShuttle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Navigation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aircon = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alarm = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpareKey = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialAccessories", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkCommercialAccessories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceBook = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tools = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jack = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bullbar = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingDevice = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EngineProtectionUnit = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DecallSwitching = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReflectiveType = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialBodywork", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkCommercialBodywork : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Door = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chassis = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Floor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Headboard = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsLeft = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsRight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsFront = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropSidesPanelsRear = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerBodywork", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkPassengerBodywork : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HailDamage = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFDoor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFDoor = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRDoor = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRDoor = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Roof = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialMechanicalCondition", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkCommercialMechanicalCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Engine = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FrontSuppression = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearSuppression = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Steering = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exhaust = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Battery = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKEngineTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MZKEngineTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Petrol = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diesel = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPG = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainsBattery = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialTrimInterior", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkCommercialTrimInterior : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeftDoor = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RightDoor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFQuarterPanel = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFQuarterPanel = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRQuarterPanel = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRQuarterPanel = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Frontview = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bumper = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Grill = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerInteriorTrim", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkPassengerInteriorTrim : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InternalTrim = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RFDoorTrim = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LFDoorTrim = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RRDoorTrim = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRDoorTrim = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DriverSeat = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassengerSeat = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RearSeat = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dash = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Carpets = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkCommercialTyre", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkCommercialTyre : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LRInner = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LROuter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LInnerAxleIn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LInnerAxleOut = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKConditionEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MZKConditionEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Poor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fair = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkPassengerTyreCondition", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkPassengerTyreCondition : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Spare = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MZKRecommendationEnum", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MZKRecommendationEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFeasible = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retain = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MzkVehicleType", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    internal enum MzkVehicleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Passenger = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class AifFault : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CustomDetailXmlField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.FaultMessageList> FaultMessageListArrayField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.InfologMessage> InfologMessageListField;
        
        private string StackTraceField;
        
        private int XppExceptionTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string CustomDetailXml {
            get {
                return this.CustomDetailXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailXmlField, value) != true)) {
                    this.CustomDetailXmlField = value;
                    this.RaisePropertyChanged("CustomDetailXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.FaultMessageList> FaultMessageListArray {
            get {
                return this.FaultMessageListArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageListArrayField, value) != true)) {
                    this.FaultMessageListArrayField = value;
                    this.RaisePropertyChanged("FaultMessageListArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.InfologMessage> InfologMessageList {
            get {
                return this.InfologMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfologMessageListField, value) != true)) {
                    this.InfologMessageListField = value;
                    this.RaisePropertyChanged("InfologMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal int XppExceptionType {
            get {
                return this.XppExceptionTypeField;
            }
            set {
                if ((this.XppExceptionTypeField.Equals(value) != true)) {
                    this.XppExceptionTypeField = value;
                    this.RaisePropertyChanged("XppExceptionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessageList", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class FaultMessageList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentField;
        
        private string DocumentOperationField;
        
        private System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.FaultMessage> FaultMessageArrayField;
        
        private string FieldField;
        
        private string ServiceField;
        
        private string ServiceOperationField;
        
        private string ServiceOperationParameterField;
        
        private string XPathField;
        
        private string XmlLineField;
        
        private string XmlPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string DocumentOperation {
            get {
                return this.DocumentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentOperationField, value) != true)) {
                    this.DocumentOperationField = value;
                    this.RaisePropertyChanged("DocumentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.FaultMessage> FaultMessageArray {
            get {
                return this.FaultMessageArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageArrayField, value) != true)) {
                    this.FaultMessageArrayField = value;
                    this.RaisePropertyChanged("FaultMessageArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ServiceOperation {
            get {
                return this.ServiceOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationField, value) != true)) {
                    this.ServiceOperationField = value;
                    this.RaisePropertyChanged("ServiceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string ServiceOperationParameter {
            get {
                return this.ServiceOperationParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationParameterField, value) != true)) {
                    this.ServiceOperationParameterField = value;
                    this.RaisePropertyChanged("ServiceOperationParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XPath {
            get {
                return this.XPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XPathField, value) != true)) {
                    this.XPathField = value;
                    this.RaisePropertyChanged("XPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XmlLine {
            get {
                return this.XmlLineField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlLineField, value) != true)) {
                    this.XmlLineField = value;
                    this.RaisePropertyChanged("XmlLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string XmlPosition {
            get {
                return this.XmlPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPositionField, value) != true)) {
                    this.XmlPositionField = value;
                    this.RaisePropertyChanged("XmlPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    internal partial class InfologMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.InfologMessageType InfologMessageTypeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.InfologMessageType InfologMessageType {
            get {
                return this.InfologMessageTypeField;
            }
            set {
                if ((this.InfologMessageTypeField.Equals(value) != true)) {
                    this.InfologMessageTypeField = value;
                    this.RaisePropertyChanged("InfologMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    internal partial class FaultMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessageType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    internal enum InfologMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/netfx/2009/05/routing", ConfigurationName="VIServiceProxy.IRequestReplyRouter")]
    internal interface IRequestReplyRouter {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IRequestReplyRouterChannel : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.IRequestReplyRouter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class RequestReplyRouterClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.IRequestReplyRouter>, Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.IRequestReplyRouter {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestReplyRouterClient() : 
                base(RequestReplyRouterClient.GetDefaultBinding(), RequestReplyRouterClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.serviceEndpoint.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), RequestReplyRouterClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestReplyRouterClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestReplyRouterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.serviceEndpoint)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.serviceEndpoint)) {
                return new System.ServiceModel.EndpointAddress("http://hyd-dax-p01.contoso.com/MicrosoftDynamicsAXAif60/VehicleInspection/xppserv" +
                        "ice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return RequestReplyRouterClient.GetBindingForEndpoint(EndpointConfiguration.serviceEndpoint);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return RequestReplyRouterClient.GetEndpointAddress(EndpointConfiguration.serviceEndpoint);
        }
        
        public enum EndpointConfiguration {
            
            serviceEndpoint,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org", ConfigurationName="VIServiceProxy.VehicleInspectionService")]
    internal interface VehicleInspectionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editGlass", ReplyAction="http://tempuri.org/VehicleInspectionService/editGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassResponse> editGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createVehicleDetails", ReplyAction="http://tempuri.org/VehicleInspectionService/createVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editVehicleDetails", ReplyAction="http://tempuri.org/VehicleInspectionService/editVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editBodywork", ReplyAction="http://tempuri.org/VehicleInspectionService/editBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkResponse> editBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readVehicleDetails", ReplyAction="http://tempuri.org/VehicleInspectionService/readVehicleDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readVehicleDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readGlass", ReplyAction="http://tempuri.org/VehicleInspectionService/readGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassResponse> readGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editAccessory", ReplyAction="http://tempuri.org/VehicleInspectionService/editAccessoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editAccessoryAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryResponse> editAccessoryAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editVehicleInspection", ReplyAction="http://tempuri.org/VehicleInspectionService/editVehicleInspectionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editVehicleInspectionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createTrimInterior", ReplyAction="http://tempuri.org/VehicleInspectionService/createTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorResponse> createTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editTyreCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/editTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionResponse> editTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editMechCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/editMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionResponse> editMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readTrimInterior", ReplyAction="http://tempuri.org/VehicleInspectionService/readTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorResponse> readTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createVehicleInspectionTable", ReplyAction="http://tempuri.org/VehicleInspectionService/createVehicleInspectionTableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createVehicleInspectionTableAifFaultF" +
            "ault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/getCustDetails", ReplyAction="http://tempuri.org/VehicleInspectionService/getCustDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/getCustDetailsAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createAccessories", ReplyAction="http://tempuri.org/VehicleInspectionService/createAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createAccessoriesAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesResponse> createAccessoriesAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readAccessories", ReplyAction="http://tempuri.org/VehicleInspectionService/readAccessoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readAccessoriesAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesResponse> readAccessoriesAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/editTrimInterior", ReplyAction="http://tempuri.org/VehicleInspectionService/editTrimInteriorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/editTrimInteriorAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorResponse> editTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readMechCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/readMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionResponse> readMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readBodywork", ReplyAction="http://tempuri.org/VehicleInspectionService/readBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkResponse> readBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/readTyreCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/readTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/readTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionResponse> readTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createBodywork", ReplyAction="http://tempuri.org/VehicleInspectionService/createBodyworkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createBodyworkAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkResponse> createBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createMechCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/createMechConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createMechConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createGlass", ReplyAction="http://tempuri.org/VehicleInspectionService/createGlassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createGlassAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassResponse> createGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VehicleInspectionService/createTyreCondition", ReplyAction="http://tempuri.org/VehicleInspectionService/createTyreConditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.AifFault), Action="http://tempuri.org/VehicleInspectionService/createTyreConditionAifFaultFault", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionResponse> createTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstEditGlass;
        
        public VehicleInspectionServiceEditGlassRequest() {
        }
        
        public VehicleInspectionServiceEditGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstEditGlass) {
            this._lstEditGlass = _lstEditGlass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditGlassResponse {
        
        public VehicleInspectionServiceEditGlassResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails;
        
        public VehicleInspectionServiceCreateVehicleDetailsRequest() {
        }
        
        public VehicleInspectionServiceCreateVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails) {
            this._lstVehicleDetails = _lstVehicleDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateVehicleDetailsResponse {
        
        public VehicleInspectionServiceCreateVehicleDetailsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails;
        
        public VehicleInspectionServiceEditVehicleDetailsRequest() {
        }
        
        public VehicleInspectionServiceEditVehicleDetailsRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails) {
            this._lstVehicleDetails = _lstVehicleDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditVehicleDetailsResponse {
        
        public VehicleInspectionServiceEditVehicleDetailsResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork;
        
        public VehicleInspectionServiceEditBodyworkRequest() {
        }
        
        public VehicleInspectionServiceEditBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork) {
            this._lstBodywork = _lstBodywork;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditBodyworkResponse {
        
        public VehicleInspectionServiceEditBodyworkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadVehicleDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadVehicleDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadVehicleDetailsRequest() {
        }
        
        public VehicleInspectionServiceReadVehicleDetailsRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadVehicleDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadVehicleDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> response;
        
        public VehicleInspectionServiceReadVehicleDetailsResponse() {
        }
        
        public VehicleInspectionServiceReadVehicleDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadGlassRequest() {
        }
        
        public VehicleInspectionServiceReadGlassRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadGlassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> response;
        
        public VehicleInspectionServiceReadGlassResponse() {
        }
        
        public VehicleInspectionServiceReadGlassResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditAccessoryRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditAccessoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessory;
        
        public VehicleInspectionServiceEditAccessoryRequest() {
        }
        
        public VehicleInspectionServiceEditAccessoryRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessory) {
            this._lstAccessory = _lstAccessory;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditAccessoryResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditAccessoryResponse {
        
        public VehicleInspectionServiceEditAccessoryResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditVehicleInspectionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditVehicleInspectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp;
        
        public VehicleInspectionServiceEditVehicleInspectionRequest() {
        }
        
        public VehicleInspectionServiceEditVehicleInspectionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            this._lstVehicleInsp = _lstVehicleInsp;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditVehicleInspectionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditVehicleInspectionResponse {
        
        public VehicleInspectionServiceEditVehicleInspectionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior;
        
        public VehicleInspectionServiceCreateTrimInteriorRequest() {
        }
        
        public VehicleInspectionServiceCreateTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior) {
            this._lstTrimInterior = _lstTrimInterior;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateTrimInteriorResponse {
        
        public VehicleInspectionServiceCreateTrimInteriorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstEditTyreCondition;
        
        public VehicleInspectionServiceEditTyreConditionRequest() {
        }
        
        public VehicleInspectionServiceEditTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstEditTyreCondition) {
            this._lstEditTyreCondition = _lstEditTyreCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditTyreConditionResponse {
        
        public VehicleInspectionServiceEditTyreConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition;
        
        public VehicleInspectionServiceEditMechConditionRequest() {
        }
        
        public VehicleInspectionServiceEditMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition) {
            this._lstMechCondition = _lstMechCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditMechConditionResponse {
        
        public VehicleInspectionServiceEditMechConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadTrimInteriorRequest() {
        }
        
        public VehicleInspectionServiceReadTrimInteriorRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadTrimInteriorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> response;
        
        public VehicleInspectionServiceReadTrimInteriorResponse() {
        }
        
        public VehicleInspectionServiceReadTrimInteriorResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateVehicleInspectionTableRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateVehicleInspectionTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public string _caseId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=1)]
        public string _taskId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=2)]
        public string _userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=3)]
        public Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleType _vehicleType;
        
        public VehicleInspectionServiceCreateVehicleInspectionTableRequest() {
        }
        
        public VehicleInspectionServiceCreateVehicleInspectionTableRequest(string _caseId, string _taskId, string _userId, Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleType _vehicleType) {
            this._caseId = _caseId;
            this._taskId = _taskId;
            this._userId = _userId;
            this._vehicleType = _vehicleType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateVehicleInspectionTableResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateVehicleInspectionTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long response;
        
        public VehicleInspectionServiceCreateVehicleInspectionTableResponse() {
        }
        
        public VehicleInspectionServiceCreateVehicleInspectionTableResponse(long response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceGetCustDetailsRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceGetCustDetailsRequest {
        
        public VehicleInspectionServiceGetCustDetailsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceGetCustDetailsResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceGetCustDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCustAddressContract> response;
        
        public VehicleInspectionServiceGetCustDetailsResponse() {
        }
        
        public VehicleInspectionServiceGetCustDetailsResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkCustAddressContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessories;
        
        public VehicleInspectionServiceCreateAccessoriesRequest() {
        }
        
        public VehicleInspectionServiceCreateAccessoriesRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessories) {
            this._lstAccessories = _lstAccessories;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateAccessoriesResponse {
        
        public VehicleInspectionServiceCreateAccessoriesResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadAccessoriesRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadAccessoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadAccessoriesRequest() {
        }
        
        public VehicleInspectionServiceReadAccessoriesRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadAccessoriesResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadAccessoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> response;
        
        public VehicleInspectionServiceReadAccessoriesResponse() {
        }
        
        public VehicleInspectionServiceReadAccessoriesResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditTrimInteriorRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditTrimInteriorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior;
        
        public VehicleInspectionServiceEditTrimInteriorRequest() {
        }
        
        public VehicleInspectionServiceEditTrimInteriorRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior) {
            this._lstTrimInterior = _lstTrimInterior;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceEditTrimInteriorResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceEditTrimInteriorResponse {
        
        public VehicleInspectionServiceEditTrimInteriorResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadMechConditionRequest() {
        }
        
        public VehicleInspectionServiceReadMechConditionRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadMechConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> response;
        
        public VehicleInspectionServiceReadMechConditionResponse() {
        }
        
        public VehicleInspectionServiceReadMechConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadBodyworkRequest() {
        }
        
        public VehicleInspectionServiceReadBodyworkRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadBodyworkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> response;
        
        public VehicleInspectionServiceReadBodyworkResponse() {
        }
        
        public VehicleInspectionServiceReadBodyworkResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public long _vehicleInsRecId;
        
        public VehicleInspectionServiceReadTyreConditionRequest() {
        }
        
        public VehicleInspectionServiceReadTyreConditionRequest(long _vehicleInsRecId) {
            this._vehicleInsRecId = _vehicleInsRecId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceReadTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceReadTyreConditionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> response;
        
        public VehicleInspectionServiceReadTyreConditionResponse() {
        }
        
        public VehicleInspectionServiceReadTyreConditionResponse(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> response) {
            this.response = response;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateBodyworkRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateBodyworkRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork;
        
        public VehicleInspectionServiceCreateBodyworkRequest() {
        }
        
        public VehicleInspectionServiceCreateBodyworkRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork) {
            this._lstBodywork = _lstBodywork;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateBodyworkResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateBodyworkResponse {
        
        public VehicleInspectionServiceCreateBodyworkResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateMechConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateMechConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition;
        
        public VehicleInspectionServiceCreateMechConditionRequest() {
        }
        
        public VehicleInspectionServiceCreateMechConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition) {
            this._lstMechCondition = _lstMechCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateMechConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateMechConditionResponse {
        
        public VehicleInspectionServiceCreateMechConditionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateGlassRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateGlassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstGlass;
        
        public VehicleInspectionServiceCreateGlassRequest() {
        }
        
        public VehicleInspectionServiceCreateGlassRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstGlass) {
            this._lstGlass = _lstGlass;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateGlassResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateGlassResponse {
        
        public VehicleInspectionServiceCreateGlassResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateTyreConditionRequest", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateTyreConditionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org", Order=0)]
        public System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstTyreCondition;
        
        public VehicleInspectionServiceCreateTyreConditionRequest() {
        }
        
        public VehicleInspectionServiceCreateTyreConditionRequest(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstTyreCondition) {
            this._lstTyreCondition = _lstTyreCondition;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VehicleInspectionServiceCreateTyreConditionResponse", WrapperNamespace="http://tempuri.org", IsWrapped=true)]
    internal partial class VehicleInspectionServiceCreateTyreConditionResponse {
        
        public VehicleInspectionServiceCreateTyreConditionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface VehicleInspectionServiceChannel : Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class VehicleInspectionServiceClient : System.ServiceModel.ClientBase<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService>, Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public VehicleInspectionServiceClient() : 
                base(VehicleInspectionServiceClient.GetDefaultBinding(), VehicleInspectionServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_VehicleInspectionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(VehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), VehicleInspectionServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(VehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VehicleInspectionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(VehicleInspectionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public VehicleInspectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassRequest request) {
            return base.Channel.editGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassResponse> editGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstEditGlass) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditGlassRequest();
            inValue._lstEditGlass = _lstEditGlass;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsRequest request) {
            return base.Channel.createVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsResponse> createVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleDetailsRequest();
            inValue._lstVehicleDetails = _lstVehicleDetails;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsRequest request) {
            return base.Channel.editVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsResponse> editVehicleDetailsAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleDetailsContract> _lstVehicleDetails) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleDetailsRequest();
            inValue._lstVehicleDetails = _lstVehicleDetails;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkRequest request) {
            return base.Channel.editBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkResponse> editBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditBodyworkRequest();
            inValue._lstBodywork = _lstBodywork;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readVehicleDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsRequest request) {
            return base.Channel.readVehicleDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsResponse> readVehicleDetailsAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadVehicleDetailsRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readVehicleDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassRequest request) {
            return base.Channel.readGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassResponse> readGlassAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadGlassRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editAccessoryAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryRequest request) {
            return base.Channel.editAccessoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryResponse> editAccessoryAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessory) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditAccessoryRequest();
            inValue._lstAccessory = _lstAccessory;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editAccessoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editVehicleInspectionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionRequest request) {
            return base.Channel.editVehicleInspectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionResponse> editVehicleInspectionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MZKVehicleInspectionTableContract> _lstVehicleInsp) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditVehicleInspectionRequest();
            inValue._lstVehicleInsp = _lstVehicleInsp;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editVehicleInspectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorRequest request) {
            return base.Channel.createTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorResponse> createTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTrimInteriorRequest();
            inValue._lstTrimInterior = _lstTrimInterior;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionRequest request) {
            return base.Channel.editTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionResponse> editTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstEditTyreCondition) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTyreConditionRequest();
            inValue._lstEditTyreCondition = _lstEditTyreCondition;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionRequest request) {
            return base.Channel.editMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionResponse> editMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditMechConditionRequest();
            inValue._lstMechCondition = _lstMechCondition;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorRequest request) {
            return base.Channel.readTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorResponse> readTrimInteriorAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTrimInteriorRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createVehicleInspectionTableAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableRequest request) {
            return base.Channel.createVehicleInspectionTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableResponse> createVehicleInspectionTableAsync(string _caseId, string _taskId, string _userId, Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkVehicleType _vehicleType) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateVehicleInspectionTableRequest();
            inValue._caseId = _caseId;
            inValue._taskId = _taskId;
            inValue._userId = _userId;
            inValue._vehicleType = _vehicleType;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createVehicleInspectionTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.getCustDetailsAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsRequest request) {
            return base.Channel.getCustDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsResponse> getCustDetailsAsync() {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceGetCustDetailsRequest();
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).getCustDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createAccessoriesAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesRequest request) {
            return base.Channel.createAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesResponse> createAccessoriesAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkAccessoryContract> _lstAccessories) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateAccessoriesRequest();
            inValue._lstAccessories = _lstAccessories;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readAccessoriesAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesRequest request) {
            return base.Channel.readAccessoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesResponse> readAccessoriesAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadAccessoriesRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readAccessoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.editTrimInteriorAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorRequest request) {
            return base.Channel.editTrimInteriorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorResponse> editTrimInteriorAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTrimInteriorContract> _lstTrimInterior) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceEditTrimInteriorRequest();
            inValue._lstTrimInterior = _lstTrimInterior;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).editTrimInteriorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionRequest request) {
            return base.Channel.readMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionResponse> readMechConditionAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadMechConditionRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkRequest request) {
            return base.Channel.readBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkResponse> readBodyworkAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadBodyworkRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.readTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionRequest request) {
            return base.Channel.readTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionResponse> readTyreConditionAsync(long _vehicleInsRecId) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceReadTyreConditionRequest();
            inValue._vehicleInsRecId = _vehicleInsRecId;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).readTyreConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createBodyworkAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkRequest request) {
            return base.Channel.createBodyworkAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkResponse> createBodyworkAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkBodyworkContract> _lstBodywork) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateBodyworkRequest();
            inValue._lstBodywork = _lstBodywork;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createBodyworkAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createMechConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionRequest request) {
            return base.Channel.createMechConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionResponse> createMechConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkMechanicalConditionContract> _lstMechCondition) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateMechConditionRequest();
            inValue._lstMechCondition = _lstMechCondition;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createMechConditionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createGlassAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassRequest request) {
            return base.Channel.createGlassAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassResponse> createGlassAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkGlassContract> _lstGlass) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateGlassRequest();
            inValue._lstGlass = _lstGlass;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createGlassAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionResponse> Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService.createTyreConditionAsync(Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionRequest request) {
            return base.Channel.createTyreConditionAsync(request);
        }
        
        public System.Threading.Tasks.Task<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionResponse> createTyreConditionAsync(System.Collections.ObjectModel.ObservableCollection<Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.MzkTyreConditionContract> _lstTyreCondition) {
            Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionRequest inValue = new Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionServiceCreateTyreConditionRequest();
            inValue._lstTyreCondition = _lstTyreCondition;
            return ((Eqstra.VehicleInspection.BackgroundTask.VIServiceProxy.VehicleInspectionService)(this)).createTyreConditionAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_VehicleInspectionService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Windows;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_VehicleInspectionService)) {
                return new System.ServiceModel.EndpointAddress("http://hyd-dax-p01.contoso.com/MicrosoftDynamicsAXAif60/VehicleInspection/xppserv" +
                        "ice.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return VehicleInspectionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_VehicleInspectionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return VehicleInspectionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_VehicleInspectionService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_VehicleInspectionService,
        }
    }
}
